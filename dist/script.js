!function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=3)}([function(t,e){function n(t,e){var n=t[1]||"",i=t[3];if(!i)return n;if(e&&"function"==typeof btoa){var o=r(i);return[n].concat(i.sources.map(function(t){return"/*# sourceURL="+i.sourceRoot+t+" */"})).concat([o]).join("\n")}return[n].join("\n")}function r(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var r=n(e,t);return e[2]?"@media "+e[2]+"{"+r+"}":r}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<t.length;i++){var a=t[i];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){function r(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=v[r.id];if(i){i.refs++;for(var o=0;o<i.parts.length;o++)i.parts[o](r.parts[o]);for(;o<r.parts.length;o++)i.parts.push(l(r.parts[o],e))}else{for(var a=[],o=0;o<r.parts.length;o++)a.push(l(r.parts[o],e));v[r.id]={id:r.id,refs:1,parts:a}}}}function i(t,e){for(var n=[],r={},i=0;i<t.length;i++){var o=t[i],a=e.base?o[0]+e.base:o[0],s=o[1],c=o[2],u=o[3],l={css:s,media:c,sourceMap:u};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function o(t,e){var n=m(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=b[b.length-1];if("top"===t.insertAt)r?r.nextSibling?n.insertBefore(e,r.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),b.push(e);else if("bottom"===t.insertAt)n.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=m(t.insertInto+" "+t.insertAt.before);n.insertBefore(e,i)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=b.indexOf(t);e>=0&&b.splice(e,1)}function s(t){var e=document.createElement("style");return t.attrs.type="text/css",u(e,t.attrs),o(t,e),e}function c(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",u(e,t.attrs),o(t,e),e}function u(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function l(t,e){var n,r,i,o;if(e.transform&&t.css){if(!(o=e.transform(t.css)))return function(){};t.css=o}if(e.singleton){var u=y++;n=g||(g=s(e)),r=f.bind(null,n,u,!1),i=f.bind(null,n,u,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=c(e),r=d.bind(null,n,e),i=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),r=p.bind(null,n),i=function(){a(n)});return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else i()}}function f(t,e,n,r){var i=n?"":r.css;if(t.styleSheet)t.styleSheet.cssText=A(e,i);else{var o=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}function p(t,e){var n=e.css,r=e.media;if(r&&t.setAttribute("media",r),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function d(t,e,n){var r=n.css,i=n.sourceMap,o=void 0===e.convertToAbsoluteUrls&&i;(e.convertToAbsoluteUrls||o)&&(r=_(r)),i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([r],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var v={},h=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),m=function(t){var e={};return function(n){if(void 0===e[n]){var r=t.call(this,n);if(r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[n]=r}return e[n]}}(function(t){return document.querySelector(t)}),g=null,y=0,b=[],_=n(11);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");e=e||{},e.attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=h()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=i(t,e);return r(n,e),function(t){for(var o=[],a=0;a<n.length;a++){var s=n[a],c=v[s.id];c.refs--,o.push(c)}if(t){r(i(t,e),e)}for(var a=0;a<o.length;a++){var c=o[a];if(0===c.refs){for(var u=0;u<c.parts.length;u++)c.parts[u]();delete v[c.id]}}}};var A=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}()},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";var r=n(4),i=n(8),o=new r(i);t.exports=o},function(t,e,n){(function(e,n){/*!
 * Vue.js v2.5.13
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */
!function(e,n){t.exports=n()}(0,function(){"use strict";function t(t){return void 0===t||null===t}function r(t){return void 0!==t&&null!==t}function i(t){return!0===t}function o(t){return"string"==typeof t||"number"==typeof t||"symbol"==typeof t||"boolean"==typeof t}function a(t){return null!==t&&"object"==typeof t}function s(t){return"[object Object]"===Mn.call(t)}function c(t){var e=parseFloat(String(t));return e>=0&&Math.floor(e)===e&&isFinite(t)}function u(t){return null==t?"":"object"==typeof t?JSON.stringify(t,null,2):String(t)}function l(t){var e=parseFloat(t);return isNaN(e)?t:e}function f(t,e){for(var n=Object.create(null),r=t.split(","),i=0;i<r.length;i++)n[r[i]]=!0;return e?function(t){return n[t.toLowerCase()]}:function(t){return n[t]}}function p(t,e){if(t.length){var n=t.indexOf(e);if(n>-1)return t.splice(n,1)}}function d(t,e){return Dn.call(t,e)}function v(t){var e=Object.create(null);return function(n){return e[n]||(e[n]=t(n))}}function h(t,e){function n(n){var r=arguments.length;return r?r>1?t.apply(e,arguments):t.call(e,n):t.call(e)}return n._length=t.length,n}function m(t,e){e=e||0;for(var n=t.length-e,r=new Array(n);n--;)r[n]=t[n+e];return r}function g(t,e){for(var n in e)t[n]=e[n];return t}function y(t){for(var e={},n=0;n<t.length;n++)t[n]&&g(e,t[n]);return e}function b(t,e,n){}function _(t,e){if(t===e)return!0;var n=a(t),r=a(e);if(!n||!r)return!n&&!r&&String(t)===String(e);try{var i=Array.isArray(t),o=Array.isArray(e);if(i&&o)return t.length===e.length&&t.every(function(t,n){return _(t,e[n])});if(i||o)return!1;var s=Object.keys(t),c=Object.keys(e);return s.length===c.length&&s.every(function(n){return _(t[n],e[n])})}catch(t){return!1}}function A(t,e){for(var n=0;n<t.length;n++)if(_(t[n],e))return n;return-1}function C(t){var e=!1;return function(){e||(e=!0,t.apply(this,arguments))}}function x(t){var e=(t+"").charCodeAt(0);return 36===e||95===e}function w(t,e,n,r){Object.defineProperty(t,e,{value:n,enumerable:!!r,writable:!0,configurable:!0})}function k(t){return"function"==typeof t&&/native code/.test(t.toString())}function $(t){return new yr(void 0,void 0,void 0,String(t))}function O(t,e){var n=t.componentOptions,r=new yr(t.tag,t.data,t.children,t.text,t.elm,t.context,n,t.asyncFactory);return r.ns=t.ns,r.isStatic=t.isStatic,r.key=t.key,r.isComment=t.isComment,r.fnContext=t.fnContext,r.fnOptions=t.fnOptions,r.fnScopeId=t.fnScopeId,r.isCloned=!0,e&&(t.children&&(r.children=I(t.children,!0)),n&&n.children&&(n.children=I(n.children,!0))),r}function I(t,e){for(var n=t.length,r=new Array(n),i=0;i<n;i++)r[i]=O(t[i],e);return r}function T(t,e,n){t.__proto__=e}function S(t,e,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];w(t,o,e[o])}}function E(t,e){if(a(t)&&!(t instanceof yr)){var n;return d(t,"__ob__")&&t.__ob__ instanceof kr?n=t.__ob__:wr.shouldConvert&&!fr()&&(Array.isArray(t)||s(t))&&Object.isExtensible(t)&&!t._isVue&&(n=new kr(t)),e&&n&&n.vmCount++,n}}function j(t,e,n,r,i){var o=new mr,a=Object.getOwnPropertyDescriptor(t,e);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set,u=!i&&E(n);Object.defineProperty(t,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(t):n;return mr.target&&(o.depend(),u&&(u.dep.depend(),Array.isArray(e)&&N(e))),e},set:function(e){var r=s?s.call(t):n;e===r||e!=e&&r!=r||(c?c.call(t,e):n=e,u=!i&&E(e),o.notify())}})}}function L(t,e,n){if(Array.isArray(t)&&c(e))return t.length=Math.max(t.length,e),t.splice(e,1,n),n;if(e in t&&!(e in Object.prototype))return t[e]=n,n;var r=t.__ob__;return t._isVue||r&&r.vmCount?n:r?(j(r.value,e,n),r.dep.notify(),n):(t[e]=n,n)}function M(t,e){if(Array.isArray(t)&&c(e))t.splice(e,1);else{var n=t.__ob__;t._isVue||n&&n.vmCount||d(t,e)&&(delete t[e],n&&n.dep.notify())}}function N(t){for(var e=void 0,n=0,r=t.length;n<r;n++)(e=t[n])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&N(e)}function B(t,e){if(!e)return t;for(var n,r,i,o=Object.keys(e),a=0;a<o.length;a++)r=t[n=o[a]],i=e[n],d(t,n)?s(r)&&s(i)&&B(r,i):L(t,n,i);return t}function D(t,e,n){return n?function(){var r="function"==typeof e?e.call(n,n):e,i="function"==typeof t?t.call(n,n):t;return r?B(r,i):i}:e?t?function(){return B("function"==typeof e?e.call(this,this):e,"function"==typeof t?t.call(this,this):t)}:e:t}function R(t,e){return e?t?t.concat(e):Array.isArray(e)?e:[e]:t}function P(t,e,n,r){var i=Object.create(t||null);return e?g(i,e):i}function U(t,e,n){function r(r){var i=$r[r]||Tr;u[r]=i(t[r],e[r],n,r)}"function"==typeof e&&(e=e.options),function(t,e){var n=t.props;if(n){var r,i,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(i=n[r])&&(o[Pn(i)]={type:null});else if(s(n))for(var a in n)i=n[a],o[Pn(a)]=s(i)?i:{type:i};t.props=o}}(e),function(t,e){var n=t.inject;if(n){var r=t.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(s(n))for(var o in n){var a=n[o];r[o]=s(a)?g({from:o},a):{from:a}}}}(e),function(t){var e=t.directives;if(e)for(var n in e){var r=e[n];"function"==typeof r&&(e[n]={bind:r,update:r})}}(e);var i=e.extends;if(i&&(t=U(t,i,n)),e.mixins)for(var o=0,a=e.mixins.length;o<a;o++)t=U(t,e.mixins[o],n);var c,u={};for(c in t)r(c);for(c in e)d(t,c)||r(c);return u}function F(t,e,n,r){if("string"==typeof n){var i=t[e];if(d(i,n))return i[n];var o=Pn(n);if(d(i,o))return i[o];var a=Un(o);return d(i,a)?i[a]:i[n]||i[o]||i[a]}}function z(t,e,n,r){var i=e[t],o=!d(n,t),a=n[t];if(G(Boolean,i.type)&&(o&&!d(i,"default")?a=!1:G(String,i.type)||""!==a&&a!==zn(t)||(a=!0)),void 0===a){a=function(t,e,n){if(d(e,"default")){var r=e.default;return t&&t.$options.propsData&&void 0===t.$options.propsData[n]&&void 0!==t._props[n]?t._props[n]:"function"==typeof r&&"Function"!==H(e.type)?r.call(t):r}}(r,i,t);var s=wr.shouldConvert;wr.shouldConvert=!0,E(a),wr.shouldConvert=s}return a}function H(t){var e=t&&t.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function G(t,e){if(!Array.isArray(e))return H(e)===H(t);for(var n=0,r=e.length;n<r;n++)if(H(e[n])===H(t))return!0;return!1}function J(t,e,n){if(e)for(var r=e;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,t,e,n))return}catch(t){V(t,r,"errorCaptured hook")}}V(t,e,n)}function V(t,e,n){if(Wn.errorHandler)try{return Wn.errorHandler.call(null,t,e,n)}catch(t){K(t,null,"config.errorHandler")}K(t,e,n)}function K(t,e,n){if(!Xn&&!Zn||"undefined"==typeof console)throw t;console.error(t)}function W(){Er=!1;var t=Sr.slice(0);Sr.length=0;for(var e=0;e<t.length;e++)t[e]()}function q(t,e){var n;if(Sr.push(function(){if(t)try{t.call(e)}catch(t){J(t,e,"nextTick")}else n&&n(e)}),Er||(Er=!0,jr?Ir():Or()),!t&&"undefined"!=typeof Promise)return new Promise(function(t){n=t})}function Y(t){X(t,Dr),Dr.clear()}function X(t,e){var n,r,i=Array.isArray(t);if((i||a(t))&&!Object.isFrozen(t)){if(t.__ob__){var o=t.__ob__.dep.id;if(e.has(o))return;e.add(o)}if(i)for(n=t.length;n--;)X(t[n],e);else for(n=(r=Object.keys(t)).length;n--;)X(t[r[n]],e)}}function Z(t){function e(){var t=arguments,n=e.fns;if(!Array.isArray(n))return n.apply(null,arguments);for(var r=n.slice(),i=0;i<r.length;i++)r[i].apply(null,t)}return e.fns=t,e}function Q(e,n,r,i,o){var a,s,c,u;for(a in e)s=e[a],c=n[a],u=Rr(a),t(s)||(t(c)?(t(s.fns)&&(s=e[a]=Z(s)),r(u.name,s,u.once,u.capture,u.passive,u.params)):s!==c&&(c.fns=s,e[a]=c));for(a in n)t(e[a])&&i((u=Rr(a)).name,n[a],u.capture)}function tt(e,n,o){function a(){o.apply(this,arguments),p(s.fns,a)}e instanceof yr&&(e=e.data.hook||(e.data.hook={}));var s,c=e[n];t(c)?s=Z([a]):r(c.fns)&&i(c.merged)?(s=c).fns.push(a):s=Z([c,a]),s.merged=!0,e[n]=s}function et(t,e,n,i,o){if(r(e)){if(d(e,n))return t[n]=e[n],o||delete e[n],!0;if(d(e,i))return t[n]=e[i],o||delete e[i],!0}return!1}function nt(t){return r(t)&&r(t.text)&&function(t){return!1===t}(t.isComment)}function rt(e,n){var a,s,c,u,l=[];for(a=0;a<e.length;a++)t(s=e[a])||"boolean"==typeof s||(u=l[c=l.length-1],Array.isArray(s)?s.length>0&&(nt((s=rt(s,(n||"")+"_"+a))[0])&&nt(u)&&(l[c]=$(u.text+s[0].text),s.shift()),l.push.apply(l,s)):o(s)?nt(u)?l[c]=$(u.text+s):""!==s&&l.push($(s)):nt(s)&&nt(u)?l[c]=$(u.text+s.text):(i(e._isVList)&&r(s.tag)&&t(s.key)&&r(n)&&(s.key="__vlist"+n+"_"+a+"__"),l.push(s)));return l}function it(t,e){return(t.__esModule||dr&&"Module"===t[Symbol.toStringTag])&&(t=t.default),a(t)?e.extend(t):t}function ot(t){return t.isComment&&t.asyncFactory}function at(t){if(Array.isArray(t))for(var e=0;e<t.length;e++){var n=t[e];if(r(n)&&(r(n.componentOptions)||ot(n)))return n}}function st(t,e,n){n?Br.$once(t,e):Br.$on(t,e)}function ct(t,e){Br.$off(t,e)}function ut(t,e,n){Br=t,Q(e,n||{},st,ct),Br=void 0}function lt(t,e){var n={};if(!t)return n;for(var r=0,i=t.length;r<i;r++){var o=t[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==e&&o.fnContext!==e||!a||null==a.slot)(n.default||(n.default=[])).push(o);else{var s=a.slot,c=n[s]||(n[s]=[]);"template"===o.tag?c.push.apply(c,o.children||[]):c.push(o)}}for(var u in n)n[u].every(ft)&&delete n[u];return n}function ft(t){return t.isComment&&!t.asyncFactory||" "===t.text}function pt(t,e){e=e||{};for(var n=0;n<t.length;n++)Array.isArray(t[n])?pt(t[n],e):e[t[n].key]=t[n].fn;return e}function dt(t){for(;t&&(t=t.$parent);)if(t._inactive)return!0;return!1}function vt(t,e){if(e){if(t._directInactive=!1,dt(t))return}else if(t._directInactive)return;if(t._inactive||null===t._inactive){t._inactive=!1;for(var n=0;n<t.$children.length;n++)vt(t.$children[n]);mt(t,"activated")}}function ht(t,e){if(!(e&&(t._directInactive=!0,dt(t))||t._inactive)){t._inactive=!0;for(var n=0;n<t.$children.length;n++)ht(t.$children[n]);mt(t,"deactivated")}}function mt(t,e){var n=t.$options[e];if(n)for(var r=0,i=n.length;r<i;r++)try{n[r].call(t)}catch(n){J(n,t,e+" hook")}t._hasHookEvent&&t.$emit("hook:"+e)}function gt(){Gr=!0;var t,e;for(Ur.sort(function(t,e){return t.id-e.id}),Jr=0;Jr<Ur.length;Jr++)e=(t=Ur[Jr]).id,zr[e]=null,t.run();var n=Fr.slice(),r=Ur.slice();Jr=Ur.length=Fr.length=0,zr={},Hr=Gr=!1,function(t){for(var e=0;e<t.length;e++)t[e]._inactive=!0,vt(t[e],!0)}(n),function(t){for(var e=t.length;e--;){var n=t[e],r=n.vm;r._watcher===n&&r._isMounted&&mt(r,"updated")}}(r),pr&&Wn.devtools&&pr.emit("flush")}function yt(t,e,n){Wr.get=function(){return this[e][n]},Wr.set=function(t){this[e][n]=t},Object.defineProperty(t,n,Wr)}function bt(t){t._watchers=[];var e=t.$options;e.props&&function(t,e){var n=t.$options.propsData||{},r=t._props={},i=t.$options._propKeys=[],o=!t.$parent;wr.shouldConvert=o;for(var a in e)!function(o){i.push(o);var a=z(o,e,n,t);j(r,o,a),o in t||yt(t,"_props",o)}(a);wr.shouldConvert=!0}(t,e.props),e.methods&&function(t,e){t.$options.props;for(var n in e)t[n]=null==e[n]?b:h(e[n],t)}(t,e.methods),e.data?function(t){var e=t.$options.data;e=t._data="function"==typeof e?function(t,e){try{return t.call(e,e)}catch(t){return J(t,e,"data()"),{}}}(e,t):e||{},s(e)||(e={});for(var n=Object.keys(e),r=t.$options.props,i=(t.$options.methods,n.length);i--;){var o=n[i];r&&d(r,o)||x(o)||yt(t,"_data",o)}E(e,!0)}(t):E(t._data={},!0),e.computed&&function(t,e){var n=t._computedWatchers=Object.create(null),r=fr();for(var i in e){var o=e[i],a="function"==typeof o?o:o.get;r||(n[i]=new Kr(t,a||b,b,qr)),i in t||_t(t,i,o)}}(t,e.computed),e.watch&&e.watch!==ar&&function(t,e){for(var n in e){var r=e[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)Ct(t,n,r[i]);else Ct(t,n,r)}}(t,e.watch)}function _t(t,e,n){var r=!fr();"function"==typeof n?(Wr.get=r?At(e):n,Wr.set=b):(Wr.get=n.get?r&&!1!==n.cache?At(e):n.get:b,Wr.set=n.set?n.set:b),Object.defineProperty(t,e,Wr)}function At(t){return function(){var e=this._computedWatchers&&this._computedWatchers[t];if(e)return e.dirty&&e.evaluate(),mr.target&&e.depend(),e.value}}function Ct(t,e,n,r){return s(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=t[n]),t.$watch(e,n,r)}function xt(t,e){if(t){for(var n=Object.create(null),r=dr?Reflect.ownKeys(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}):Object.keys(t),i=0;i<r.length;i++){for(var o=r[i],a=t[o].from,s=e;s;){if(s._provided&&a in s._provided){n[o]=s._provided[a];break}s=s.$parent}if(!s&&"default"in t[o]){var c=t[o].default;n[o]="function"==typeof c?c.call(e):c}}return n}}function wt(t,e){var n,i,o,s,c;if(Array.isArray(t)||"string"==typeof t)for(n=new Array(t.length),i=0,o=t.length;i<o;i++)n[i]=e(t[i],i);else if("number"==typeof t)for(n=new Array(t),i=0;i<t;i++)n[i]=e(i+1,i);else if(a(t))for(s=Object.keys(t),n=new Array(s.length),i=0,o=s.length;i<o;i++)c=s[i],n[i]=e(t[c],c,i);return r(n)&&(n._isVList=!0),n}function kt(t,e,n,r){var i,o=this.$scopedSlots[t];if(o)n=n||{},r&&(n=g(g({},r),n)),i=o(n)||e;else{var a=this.$slots[t];a&&(a._rendered=!0),i=a||e}var s=n&&n.slot;return s?this.$createElement("template",{slot:s},i):i}function $t(t){return F(this.$options,"filters",t)||Gn}function Ot(t,e,n,r){var i=Wn.keyCodes[e]||n;return i?Array.isArray(i)?-1===i.indexOf(t):i!==t:r?zn(r)!==e:void 0}function It(t,e,n,r,i){if(n&&a(n)){Array.isArray(n)&&(n=y(n));var o;for(var s in n)!function(a){if("class"===a||"style"===a||Bn(a))o=t;else{var s=t.attrs&&t.attrs.type;o=r||Wn.mustUseProp(e,s,a)?t.domProps||(t.domProps={}):t.attrs||(t.attrs={})}a in o||(o[a]=n[a],!i)||((t.on||(t.on={}))["update:"+a]=function(t){n[a]=t})}(s)}return t}function Tt(t,e){var n=this._staticTrees||(this._staticTrees=[]),r=n[t];return r&&!e?Array.isArray(r)?I(r):O(r):(r=n[t]=this.$options.staticRenderFns[t].call(this._renderProxy,null,this),Et(r,"__static__"+t,!1),r)}function St(t,e,n){return Et(t,"__once__"+e+(n?"_"+n:""),!0),t}function Et(t,e,n){if(Array.isArray(t))for(var r=0;r<t.length;r++)t[r]&&"string"!=typeof t[r]&&jt(t[r],e+"_"+r,n);else jt(t,e,n)}function jt(t,e,n){t.isStatic=!0,t.key=e,t.isOnce=n}function Lt(t,e){if(e&&s(e)){var n=t.on=t.on?g({},t.on):{};for(var r in e){var i=n[r],o=e[r];n[r]=i?[].concat(i,o):o}}return t}function Mt(t){t._o=St,t._n=l,t._s=u,t._l=wt,t._t=kt,t._q=_,t._i=A,t._m=Tt,t._f=$t,t._k=Ot,t._b=It,t._v=$,t._e=_r,t._u=pt,t._g=Lt}function Nt(t,e,n,r,o){var a=o.options;this.data=t,this.props=e,this.children=n,this.parent=r,this.listeners=t.on||Ln,this.injections=xt(a.inject,r),this.slots=function(){return lt(n,r)};var s=Object.create(r),c=i(a._compiled),u=!c;c&&(this.$options=a,this.$slots=this.slots(),this.$scopedSlots=t.scopedSlots||Ln),a._scopeId?this._c=function(t,e,n,i){var o=Rt(s,t,e,n,i,u);return o&&(o.fnScopeId=a._scopeId,o.fnContext=r),o}:this._c=function(t,e,n,r){return Rt(s,t,e,n,r,u)}}function Bt(t,e){for(var n in e)t[Pn(n)]=e[n]}function Dt(e,n,o,s,c){if(!t(e)){var u=o.$options._base;if(a(e)&&(e=u.extend(e)),"function"==typeof e){var l;if(t(e.cid)&&(l=e,void 0===(e=function(e,n,o){if(i(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;if(i(e.loading)&&r(e.loadingComp))return e.loadingComp;if(!r(e.contexts)){var s=e.contexts=[o],c=!0,u=function(){for(var t=0,e=s.length;t<e;t++)s[t].$forceUpdate()},l=C(function(t){e.resolved=it(t,n),c||u()}),f=C(function(t){r(e.errorComp)&&(e.error=!0,u())}),p=e(l,f);return a(p)&&("function"==typeof p.then?t(e.resolved)&&p.then(l,f):r(p.component)&&"function"==typeof p.component.then&&(p.component.then(l,f),r(p.error)&&(e.errorComp=it(p.error,n)),r(p.loading)&&(e.loadingComp=it(p.loading,n),0===p.delay?e.loading=!0:setTimeout(function(){t(e.resolved)&&t(e.error)&&(e.loading=!0,u())},p.delay||200)),r(p.timeout)&&setTimeout(function(){t(e.resolved)&&f(null)},p.timeout))),c=!1,e.loading?e.loadingComp:e.resolved}e.contexts.push(o)}(l,u,o))))return function(t,e,n,r,i){var o=_r();return o.asyncFactory=t,o.asyncMeta={data:e,context:n,children:r,tag:i},o}(l,n,o,s,c);n=n||{},Ut(e),r(n.model)&&function(t,e){var n=t.model&&t.model.prop||"value",i=t.model&&t.model.event||"input";(e.props||(e.props={}))[n]=e.model.value;var o=e.on||(e.on={});r(o[i])?o[i]=[e.model.callback].concat(o[i]):o[i]=e.model.callback}(e.options,n);var f=function(e,n,i){var o=n.options.props;if(!t(o)){var a={},s=e.attrs,c=e.props;if(r(s)||r(c))for(var u in o){var l=zn(u);et(a,c,u,l,!0)||et(a,s,u,l,!1)}return a}}(n,e);if(i(e.options.functional))return function(t,e,n,i,o){var a=t.options,s={},c=a.props;if(r(c))for(var u in c)s[u]=z(u,c,e||Ln);else r(n.attrs)&&Bt(s,n.attrs),r(n.props)&&Bt(s,n.props);var l=new Nt(n,s,o,i,t),f=a.render.call(null,l._c,l);return f instanceof yr&&(f.fnContext=i,f.fnOptions=a,n.slot&&((f.data||(f.data={})).slot=n.slot)),f}(e,f,n,o,s);var p=n.on;if(n.on=n.nativeOn,i(e.options.abstract)){var d=n.slot;n={},d&&(n.slot=d)}!function(t){t.hook||(t.hook={});for(var e=0;e<Xr.length;e++){var n=Xr[e],r=t.hook[n],i=Yr[n];t.hook[n]=r?function(t,e){return function(n,r,i,o){t(n,r,i,o),e(n,r,i,o)}}(i,r):i}}(n);var v=e.options.name||c;return new yr("vue-component-"+e.cid+(v?"-"+v:""),n,void 0,void 0,void 0,o,{Ctor:e,propsData:f,listeners:p,tag:c,children:s},l)}}}function Rt(t,e,n,a,s,c){return(Array.isArray(n)||o(n))&&(s=a,a=n,n=void 0),i(c)&&(s=Qr),function(t,e,n,i,a){if(r(n)&&r(n.__ob__))return _r();if(r(n)&&r(n.is)&&(e=n.is),!e)return _r();Array.isArray(i)&&"function"==typeof i[0]&&((n=n||{}).scopedSlots={default:i[0]},i.length=0),a===Qr?i=function(t){return o(t)?[$(t)]:Array.isArray(t)?rt(t):void 0}(i):a===Zr&&(i=function(t){for(var e=0;e<t.length;e++)if(Array.isArray(t[e]))return Array.prototype.concat.apply([],t);return t}(i));var s,c;if("string"==typeof e){var u;c=t.$vnode&&t.$vnode.ns||Wn.getTagNamespace(e),s=Wn.isReservedTag(e)?new yr(Wn.parsePlatformTagName(e),n,i,void 0,void 0,t):r(u=F(t.$options,"components",e))?Dt(u,n,t,i,e):new yr(e,n,i,void 0,void 0,t)}else s=Dt(e,n,t,i);return r(s)?(c&&Pt(s,c),s):_r()}(t,e,n,a,s)}function Pt(e,n,o){if(e.ns=n,"foreignObject"===e.tag&&(n=void 0,o=!0),r(e.children))for(var a=0,s=e.children.length;a<s;a++){var c=e.children[a];r(c.tag)&&(t(c.ns)||i(o))&&Pt(c,n,o)}}function Ut(t){var e=t.options;if(t.super){var n=Ut(t.super);if(n!==t.superOptions){t.superOptions=n;var r=function(t){var e,n=t.options,r=t.extendOptions,i=t.sealedOptions;for(var o in n)n[o]!==i[o]&&(e||(e={}),e[o]=function(t,e,n){if(Array.isArray(t)){var r=[];n=Array.isArray(n)?n:[n],e=Array.isArray(e)?e:[e];for(var i=0;i<t.length;i++)(e.indexOf(t[i])>=0||n.indexOf(t[i])<0)&&r.push(t[i]);return r}return t}(n[o],r[o],i[o]));return e}(t);r&&g(t.extendOptions,r),(e=t.options=U(n,t.extendOptions)).name&&(e.components[e.name]=t)}}return e}function Ft(t){this._init(t)}function zt(t){t.cid=0;var e=1;t.extend=function(t){t=t||{};var n=this,r=n.cid,i=t._Ctor||(t._Ctor={});if(i[r])return i[r];var o=t.name||n.options.name,a=function(t){this._init(t)};return a.prototype=Object.create(n.prototype),a.prototype.constructor=a,a.cid=e++,a.options=U(n.options,t),a.super=n,a.options.props&&function(t){var e=t.options.props;for(var n in e)yt(t.prototype,"_props",n)}(a),a.options.computed&&function(t){var e=t.options.computed;for(var n in e)_t(t.prototype,n,e[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,Vn.forEach(function(t){a[t]=n[t]}),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=t,a.sealedOptions=g({},a.options),i[r]=a,a}}function Ht(t){return t&&(t.Ctor.options.name||t.tag)}function Gt(t,e){return Array.isArray(t)?t.indexOf(e)>-1:"string"==typeof t?t.split(",").indexOf(e)>-1:!!function(t){return"[object RegExp]"===Mn.call(t)}(t)&&t.test(e)}function Jt(t,e){var n=t.cache,r=t.keys,i=t._vnode;for(var o in n){var a=n[o];if(a){var s=Ht(a.componentOptions);s&&!e(s)&&Vt(n,o,r,i)}}}function Vt(t,e,n,r){var i=t[e];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),t[e]=null,p(n,e)}function Kt(t){for(var e=t.data,n=t,i=t;r(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(e=Wt(i.data,e));for(;r(n=n.parent);)n&&n.data&&(e=Wt(e,n.data));return function(t,e){return r(t)||r(e)?qt(t,Yt(e)):""}(e.staticClass,e.class)}function Wt(t,e){return{staticClass:qt(t.staticClass,e.staticClass),class:r(t.class)?[t.class,e.class]:e.class}}function qt(t,e){return t?e?t+" "+e:t:e||""}function Yt(t){return Array.isArray(t)?function(t){for(var e,n="",i=0,o=t.length;i<o;i++)r(e=Yt(t[i]))&&""!==e&&(n&&(n+=" "),n+=e);return n}(t):a(t)?function(t){var e="";for(var n in t)t[n]&&(e&&(e+=" "),e+=n);return e}(t):"string"==typeof t?t:""}function Xt(t){return Ci(t)?"svg":"math"===t?"math":void 0}function Zt(t){if("string"==typeof t){return document.querySelector(t)||document.createElement("div")}return t}function Qt(t,e){var n=t.data.ref;if(n){var r=t.context,i=t.componentInstance||t.elm,o=r.$refs;e?Array.isArray(o[n])?p(o[n],i):o[n]===i&&(o[n]=void 0):t.data.refInFor?Array.isArray(o[n])?o[n].indexOf(i)<0&&o[n].push(i):o[n]=[i]:o[n]=i}}function te(e,n){return e.key===n.key&&(e.tag===n.tag&&e.isComment===n.isComment&&r(e.data)===r(n.data)&&function(t,e){if("input"!==t.tag)return!0;var n,i=r(n=t.data)&&r(n=n.attrs)&&n.type,o=r(n=e.data)&&r(n=n.attrs)&&n.type;return i===o||ki(i)&&ki(o)}(e,n)||i(e.isAsyncPlaceholder)&&e.asyncFactory===n.asyncFactory&&t(n.asyncFactory.error))}function ee(t,e,n){var i,o,a={};for(i=e;i<=n;++i)r(o=t[i].key)&&(a[o]=i);return a}function ne(t,e){(t.data.directives||e.data.directives)&&function(t,e){var n,r,i,o=t===Ii,a=e===Ii,s=re(t.data.directives,t.context),c=re(e.data.directives,e.context),u=[],l=[];for(n in c)r=s[n],i=c[n],r?(i.oldValue=r.value,ie(i,"update",e,t),i.def&&i.def.componentUpdated&&l.push(i)):(ie(i,"bind",e,t),i.def&&i.def.inserted&&u.push(i));if(u.length){var f=function(){for(var n=0;n<u.length;n++)ie(u[n],"inserted",e,t)};o?tt(e,"insert",f):f()}if(l.length&&tt(e,"postpatch",function(){for(var n=0;n<l.length;n++)ie(l[n],"componentUpdated",e,t)}),!o)for(n in s)c[n]||ie(s[n],"unbind",t,t,a)}(t,e)}function re(t,e){var n=Object.create(null);if(!t)return n;var r,i;for(r=0;r<t.length;r++)(i=t[r]).modifiers||(i.modifiers=Ei),n[function(t){return t.rawName||t.name+"."+Object.keys(t.modifiers||{}).join(".")}(i)]=i,i.def=F(e.$options,"directives",i.name);return n}function ie(t,e,n,r,i){var o=t.def&&t.def[e];if(o)try{o(n.elm,t,n,r,i)}catch(r){J(r,n.context,"directive "+t.name+" "+e+" hook")}}function oe(e,n){var i=n.componentOptions;if(!(r(i)&&!1===i.Ctor.options.inheritAttrs||t(e.data.attrs)&&t(n.data.attrs))){var o,a,s=n.elm,c=e.data.attrs||{},u=n.data.attrs||{};r(u.__ob__)&&(u=n.data.attrs=g({},u));for(o in u)a=u[o],c[o]!==a&&ae(s,o,a);(er||rr)&&u.value!==c.value&&ae(s,"value",u.value);for(o in c)t(u[o])&&(gi(o)?s.removeAttributeNS(mi,yi(o)):vi(o)||s.removeAttribute(o))}}function ae(t,e,n){if(hi(e))bi(n)?t.removeAttribute(e):(n="allowfullscreen"===e&&"EMBED"===t.tagName?"true":e,t.setAttribute(e,n));else if(vi(e))t.setAttribute(e,bi(n)||"false"===n?"false":"true");else if(gi(e))bi(n)?t.removeAttributeNS(mi,yi(e)):t.setAttributeNS(mi,e,n);else if(bi(n))t.removeAttribute(e);else{if(er&&!nr&&"TEXTAREA"===t.tagName&&"placeholder"===e&&!t.__ieph){var r=function(e){e.stopImmediatePropagation(),t.removeEventListener("input",r)};t.addEventListener("input",r),t.__ieph=!0}t.setAttribute(e,n)}}function se(e,n){var i=n.elm,o=n.data,a=e.data;if(!(t(o.staticClass)&&t(o.class)&&(t(a)||t(a.staticClass)&&t(a.class)))){var s=Kt(n),c=i._transitionClasses;r(c)&&(s=qt(s,Yt(c))),s!==i._prevClass&&(i.setAttribute("class",s),i._prevClass=s)}}function ce(t){function e(){(a||(a=[])).push(t.slice(v,i).trim()),v=i+1}var n,r,i,o,a,s=!1,c=!1,u=!1,l=!1,f=0,p=0,d=0,v=0;for(i=0;i<t.length;i++)if(r=n,n=t.charCodeAt(i),s)39===n&&92!==r&&(s=!1);else if(c)34===n&&92!==r&&(c=!1);else if(u)96===n&&92!==r&&(u=!1);else if(l)47===n&&92!==r&&(l=!1);else if(124!==n||124===t.charCodeAt(i+1)||124===t.charCodeAt(i-1)||f||p||d){switch(n){case 34:c=!0;break;case 39:s=!0;break;case 96:u=!0;break;case 40:d++;break;case 41:d--;break;case 91:p++;break;case 93:p--;break;case 123:f++;break;case 125:f--}if(47===n){for(var h=i-1,m=void 0;h>=0&&" "===(m=t.charAt(h));h--);m&&Ni.test(m)||(l=!0)}}else void 0===o?(v=i+1,o=t.slice(0,i).trim()):e();if(void 0===o?o=t.slice(0,i).trim():0!==v&&e(),a)for(i=0;i<a.length;i++)o=function(t,e){var n=e.indexOf("(");return n<0?'_f("'+e+'")('+t+")":'_f("'+e.slice(0,n)+'")('+t+","+e.slice(n+1)}(o,a[i]);return o}function ue(t){console.error("[Vue compiler]: "+t)}function le(t,e){return t?t.map(function(t){return t[e]}).filter(function(t){return t}):[]}function fe(t,e,n){(t.props||(t.props=[])).push({name:e,value:n}),t.plain=!1}function pe(t,e,n){(t.attrs||(t.attrs=[])).push({name:e,value:n}),t.plain=!1}function de(t,e,n){t.attrsMap[e]=n,t.attrsList.push({name:e,value:n})}function ve(t,e,n,r,i,o){(t.directives||(t.directives=[])).push({name:e,rawName:n,value:r,arg:i,modifiers:o}),t.plain=!1}function he(t,e,n,r,i,o){(r=r||Ln).capture&&(delete r.capture,e="!"+e),r.once&&(delete r.once,e="~"+e),r.passive&&(delete r.passive,e="&"+e),"click"===e&&(r.right?(e="contextmenu",delete r.right):r.middle&&(e="mouseup"));var a;r.native?(delete r.native,a=t.nativeEvents||(t.nativeEvents={})):a=t.events||(t.events={});var s={value:n};r!==Ln&&(s.modifiers=r);var c=a[e];Array.isArray(c)?i?c.unshift(s):c.push(s):a[e]=c?i?[s,c]:[c,s]:s,t.plain=!1}function me(t,e,n){var r=ge(t,":"+e)||ge(t,"v-bind:"+e);if(null!=r)return ce(r);if(!1!==n){var i=ge(t,e);if(null!=i)return JSON.stringify(i)}}function ge(t,e,n){var r;if(null!=(r=t.attrsMap[e]))for(var i=t.attrsList,o=0,a=i.length;o<a;o++)if(i[o].name===e){i.splice(o,1);break}return n&&delete t.attrsMap[e],r}function ye(t,e,n){var r=n||{},i="$$v";r.trim&&(i="(typeof $$v === 'string'? $$v.trim(): $$v)"),r.number&&(i="_n("+i+")");var o=be(e,i);t.model={value:"("+e+")",expression:'"'+e+'"',callback:"function ($$v) {"+o+"}"}}function be(t,e){var n=function(t){if(ri=t.length,t.indexOf("[")<0||t.lastIndexOf("]")<ri-1)return(ai=t.lastIndexOf("."))>-1?{exp:t.slice(0,ai),key:'"'+t.slice(ai+1)+'"'}:{exp:t,key:null};for(ii=t,ai=si=ci=0;!Ae();)Ce(oi=_e())?xe(oi):91===oi&&function(t){var e=1;for(si=ai;!Ae();)if(t=_e(),Ce(t))xe(t);else if(91===t&&e++,93===t&&e--,0===e){ci=ai;break}}(oi);return{exp:t.slice(0,si),key:t.slice(si+1,ci)}}(t);return null===n.key?t+"="+e:"$set("+n.exp+", "+n.key+", "+e+")"}function _e(){return ii.charCodeAt(++ai)}function Ae(){return ai>=ri}function Ce(t){return 34===t||39===t}function xe(t){for(var e=t;!Ae()&&(t=_e())!==e;);}function we(t,e,n,r,i){e=function(t){return t._withTask||(t._withTask=function(){jr=!0;var e=t.apply(null,arguments);return jr=!1,e})}(e),n&&(e=function(t,e,n){var r=ui;return function i(){null!==t.apply(null,arguments)&&ke(e,i,n,r)}}(e,t,r)),ui.addEventListener(t,e,sr?{capture:r,passive:i}:r)}function ke(t,e,n,r){(r||ui).removeEventListener(t,e._withTask||e,n)}function $e(e,n){if(!t(e.data.on)||!t(n.data.on)){var i=n.data.on||{},o=e.data.on||{};ui=n.elm,function(t){if(r(t[Bi])){var e=er?"change":"input";t[e]=[].concat(t[Bi],t[e]||[]),delete t[Bi]}r(t[Di])&&(t.change=[].concat(t[Di],t.change||[]),delete t[Di])}(i),Q(i,o,we,ke,n.context),ui=void 0}}function Oe(e,n){if(!t(e.data.domProps)||!t(n.data.domProps)){var i,o,a=n.elm,s=e.data.domProps||{},c=n.data.domProps||{};r(c.__ob__)&&(c=n.data.domProps=g({},c));for(i in s)t(c[i])&&(a[i]="");for(i in c){if(o=c[i],"textContent"===i||"innerHTML"===i){if(n.children&&(n.children.length=0),o===s[i])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===i){a._value=o;var u=t(o)?"":String(o);(function(t,e){return!t.composing&&("OPTION"===t.tagName||function(t,e){var n=!0;try{n=document.activeElement!==t}catch(t){}return n&&t.value!==e}(t,e)||function(t,e){var n=t.value,i=t._vModifiers;if(r(i)){if(i.lazy)return!1;if(i.number)return l(n)!==l(e);if(i.trim)return n.trim()!==e.trim()}return n!==e}(t,e))})(a,u)&&(a.value=u)}else a[i]=o}}}function Ie(t){var e=Te(t.style);return t.staticStyle?g(t.staticStyle,e):e}function Te(t){return Array.isArray(t)?y(t):"string"==typeof t?Ui(t):t}function Se(e,n){var i=n.data,o=e.data;if(!(t(i.staticStyle)&&t(i.style)&&t(o.staticStyle)&&t(o.style))){var a,s,c=n.elm,u=o.staticStyle,l=o.normalizedStyle||o.style||{},f=u||l,p=Te(n.data.style)||{};n.data.normalizedStyle=r(p.__ob__)?g({},p):p;var d=function(t,e){for(var n,r={},i=t;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=Ie(i.data))&&g(r,n);(n=Ie(t.data))&&g(r,n);for(var o=t;o=o.parent;)o.data&&(n=Ie(o.data))&&g(r,n);return r}(n);for(s in f)t(d[s])&&Hi(c,s,"");for(s in d)(a=d[s])!==f[s]&&Hi(c,s,null==a?"":a)}}function Ee(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(/\s+/).forEach(function(e){return t.classList.add(e)}):t.classList.add(e);else{var n=" "+(t.getAttribute("class")||"")+" ";n.indexOf(" "+e+" ")<0&&t.setAttribute("class",(n+e).trim())}}function je(t,e){if(e&&(e=e.trim()))if(t.classList)e.indexOf(" ")>-1?e.split(/\s+/).forEach(function(e){return t.classList.remove(e)}):t.classList.remove(e),t.classList.length||t.removeAttribute("class");else{for(var n=" "+(t.getAttribute("class")||"")+" ",r=" "+e+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?t.setAttribute("class",n):t.removeAttribute("class")}}function Le(t){if(t){if("object"==typeof t){var e={};return!1!==t.css&&g(e,Ki(t.name||"v")),g(e,t),e}return"string"==typeof t?Ki(t):void 0}}function Me(t){eo(function(){eo(t)})}function Ne(t,e){var n=t._transitionClasses||(t._transitionClasses=[]);n.indexOf(e)<0&&(n.push(e),Ee(t,e))}function Be(t,e){t._transitionClasses&&p(t._transitionClasses,e),je(t,e)}function De(t,e,n){var r=Re(t,e),i=r.type,o=r.timeout,a=r.propCount;if(!i)return n();var s=i===qi?Zi:to,c=0,u=function(){t.removeEventListener(s,l),n()},l=function(e){e.target===t&&++c>=a&&u()};setTimeout(function(){c<a&&u()},o+1),t.addEventListener(s,l)}function Re(t,e){var n,r=window.getComputedStyle(t),i=r[Xi+"Delay"].split(", "),o=r[Xi+"Duration"].split(", "),a=Pe(i,o),s=r[Qi+"Delay"].split(", "),c=r[Qi+"Duration"].split(", "),u=Pe(s,c),l=0,f=0;return e===qi?a>0&&(n=qi,l=a,f=o.length):e===Yi?u>0&&(n=Yi,l=u,f=c.length):f=(n=(l=Math.max(a,u))>0?a>u?qi:Yi:null)?n===qi?o.length:c.length:0,{type:n,timeout:l,propCount:f,hasTransform:n===qi&&no.test(r[Xi+"Property"])}}function Pe(t,e){for(;t.length<e.length;)t=t.concat(t);return Math.max.apply(null,e.map(function(e,n){return Ue(e)+Ue(t[n])}))}function Ue(t){return 1e3*Number(t.slice(0,-1))}function Fe(e,n){var i=e.elm;r(i._leaveCb)&&(i._leaveCb.cancelled=!0,i._leaveCb());var o=Le(e.data.transition);if(!t(o)&&!r(i._enterCb)&&1===i.nodeType){for(var s=o.css,c=o.type,u=o.enterClass,f=o.enterToClass,p=o.enterActiveClass,d=o.appearClass,v=o.appearToClass,h=o.appearActiveClass,m=o.beforeEnter,g=o.enter,y=o.afterEnter,b=o.enterCancelled,_=o.beforeAppear,A=o.appear,x=o.afterAppear,w=o.appearCancelled,k=o.duration,$=Pr,O=Pr.$vnode;O&&O.parent;)$=(O=O.parent).context;var I=!$._isMounted||!e.isRootInsert;if(!I||A||""===A){var T=I&&d?d:u,S=I&&h?h:p,E=I&&v?v:f,j=I?_||m:m,L=I&&"function"==typeof A?A:g,M=I?x||y:y,N=I?w||b:b,B=l(a(k)?k.enter:k),D=!1!==s&&!nr,R=Ge(L),P=i._enterCb=C(function(){D&&(Be(i,E),Be(i,S)),P.cancelled?(D&&Be(i,T),N&&N(i)):M&&M(i),i._enterCb=null});e.data.show||tt(e,"insert",function(){var t=i.parentNode,n=t&&t._pending&&t._pending[e.key];n&&n.tag===e.tag&&n.elm._leaveCb&&n.elm._leaveCb(),L&&L(i,P)}),j&&j(i),D&&(Ne(i,T),Ne(i,S),Me(function(){Ne(i,E),Be(i,T),P.cancelled||R||(He(B)?setTimeout(P,B):De(i,c,P))})),e.data.show&&(n&&n(),L&&L(i,P)),D||R||P()}}}function ze(e,n){function i(){w.cancelled||(e.data.show||((o.parentNode._pending||(o.parentNode._pending={}))[e.key]=e),v&&v(o),_&&(Ne(o,f),Ne(o,d),Me(function(){Ne(o,p),Be(o,f),w.cancelled||A||(He(x)?setTimeout(w,x):De(o,u,w))})),h&&h(o,w),_||A||w())}var o=e.elm;r(o._enterCb)&&(o._enterCb.cancelled=!0,o._enterCb());var s=Le(e.data.transition);if(t(s)||1!==o.nodeType)return n();if(!r(o._leaveCb)){var c=s.css,u=s.type,f=s.leaveClass,p=s.leaveToClass,d=s.leaveActiveClass,v=s.beforeLeave,h=s.leave,m=s.afterLeave,g=s.leaveCancelled,y=s.delayLeave,b=s.duration,_=!1!==c&&!nr,A=Ge(h),x=l(a(b)?b.leave:b),w=o._leaveCb=C(function(){o.parentNode&&o.parentNode._pending&&(o.parentNode._pending[e.key]=null),_&&(Be(o,p),Be(o,d)),w.cancelled?(_&&Be(o,f),g&&g(o)):(n(),m&&m(o)),o._leaveCb=null});y?y(i):i()}}function He(t){return"number"==typeof t&&!isNaN(t)}function Ge(e){if(t(e))return!1;var n=e.fns;return r(n)?Ge(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Je(t,e){!0!==e.data.show&&Fe(e)}function Ve(t,e,n){Ke(t,e,n),(er||rr)&&setTimeout(function(){Ke(t,e,n)},0)}function Ke(t,e,n){var r=e.value,i=t.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,c=t.options.length;s<c;s++)if(a=t.options[s],i)o=A(r,qe(a))>-1,a.selected!==o&&(a.selected=o);else if(_(qe(a),r))return void(t.selectedIndex!==s&&(t.selectedIndex=s));i||(t.selectedIndex=-1)}}function We(t,e){return e.every(function(e){return!_(e,t)})}function qe(t){return"_value"in t?t._value:t.value}function Ye(t){t.target.composing=!0}function Xe(t){t.target.composing&&(t.target.composing=!1,Ze(t.target,"input"))}function Ze(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function Qe(t){return!t.componentInstance||t.data&&t.data.transition?t:Qe(t.componentInstance._vnode)}function tn(t){var e=t&&t.componentOptions;return e&&e.Ctor.options.abstract?tn(at(e.children)):t}function en(t){var e={},n=t.$options;for(var r in n.propsData)e[r]=t[r];var i=n._parentListeners;for(var o in i)e[Pn(o)]=i[o];return e}function nn(t,e){if(/\d-keep-alive$/.test(e.tag))return t("keep-alive",{props:e.componentOptions.propsData})}function rn(t){t.elm._moveCb&&t.elm._moveCb(),t.elm._enterCb&&t.elm._enterCb()}function on(t){t.data.newPos=t.elm.getBoundingClientRect()}function an(t){var e=t.data.pos,n=t.data.newPos,r=e.left-n.left,i=e.top-n.top;if(r||i){t.data.moved=!0;var o=t.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+i+"px)",o.transitionDuration="0s"}}function sn(t,e){var n=e?Vo:Jo;return t.replace(n,function(t){return Go[t]})}function cn(t,e,n){return{type:1,tag:t,attrsList:e,attrsMap:function(t){for(var e={},n=0,r=t.length;n<r;n++)e[t[n].name]=t[n].value;return e}(e),parent:n,children:[]}}function un(t,e){function n(t){t.pre&&(s=!1),Bo(t.tag)&&(c=!1);for(var n=0;n<No.length;n++)No[n](t,e)}Eo=e.warn||ue,Bo=e.isPreTag||Hn,Do=e.mustUseProp||Hn,Ro=e.getTagNamespace||Hn,Lo=le(e.modules,"transformNode"),Mo=le(e.modules,"preTransformNode"),No=le(e.modules,"postTransformNode"),jo=e.delimiters;var r,i,o=[],a=!1!==e.preserveWhitespace,s=!1,c=!1;return function(t,e){function n(e){l+=e,t=t.substring(e)}function r(t,n,r){var i,s;if(null==n&&(n=l),null==r&&(r=l),t&&(s=t.toLowerCase()),t)for(i=a.length-1;i>=0&&a[i].lowerCasedTag!==s;i--);else i=0;if(i>=0){for(var c=a.length-1;c>=i;c--)e.end&&e.end(a[c].tag,n,r);a.length=i,o=i&&a[i-1].tag}else"br"===s?e.start&&e.start(t,[],!0,n,r):"p"===s&&(e.start&&e.start(t,[],!1,n,r),e.end&&e.end(t,n,r))}for(var i,o,a=[],s=e.expectHTML,c=e.isUnaryTag||Hn,u=e.canBeLeftOpenTag||Hn,l=0;t;){if(i=t,o&&zo(o)){var f=0,p=o.toLowerCase(),d=Ho[p]||(Ho[p]=new RegExp("([\\s\\S]*?)(</"+p+"[^>]*>)","i")),v=t.replace(d,function(t,n,r){return f=r.length,zo(p)||"noscript"===p||(n=n.replace(/<!--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Wo(p,n)&&(n=n.slice(1)),e.chars&&e.chars(n),""});l+=t.length-v.length,t=v,r(p,l-f,l)}else{var h=t.indexOf("<");if(0===h){if(Io.test(t)){var m=t.indexOf("--\x3e");if(m>=0){e.shouldKeepComment&&e.comment(t.substring(4,m)),n(m+3);continue}}if(To.test(t)){var g=t.indexOf("]>");if(g>=0){n(g+2);continue}}var y=t.match(Oo);if(y){n(y[0].length);continue}var b=t.match($o);if(b){var _=l;n(b[0].length),r(b[1],_,l);continue}var A=function(){var e=t.match(wo);if(e){var r={tagName:e[1],attrs:[],start:l};n(e[0].length);for(var i,o;!(i=t.match(ko))&&(o=t.match(Ao));)n(o[0].length),r.attrs.push(o);if(i)return r.unarySlash=i[1],n(i[0].length),r.end=l,r}}();if(A){!function(t){var n=t.tagName,i=t.unarySlash;s&&("p"===o&&_o(n)&&r(o),u(n)&&o===n&&r(n));for(var l=c(n)||!!i,f=t.attrs.length,p=new Array(f),d=0;d<f;d++){var v=t.attrs[d];So&&-1===v[0].indexOf('""')&&(""===v[3]&&delete v[3],""===v[4]&&delete v[4],""===v[5]&&delete v[5]);var h=v[3]||v[4]||v[5]||"",m="a"===n&&"href"===v[1]?e.shouldDecodeNewlinesForHref:e.shouldDecodeNewlines;p[d]={name:v[1],value:sn(h,m)}}l||(a.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:p}),o=n),e.start&&e.start(n,p,l,t.start,t.end)}(A),Wo(o,t)&&n(1);continue}}var C=void 0,x=void 0,w=void 0;if(h>=0){for(x=t.slice(h);!($o.test(x)||wo.test(x)||Io.test(x)||To.test(x)||(w=x.indexOf("<",1))<0);)h+=w,x=t.slice(h);C=t.substring(0,h),n(h)}h<0&&(C=t,t=""),e.chars&&C&&e.chars(C)}if(t===i){e.chars&&e.chars(t);break}}r()}(t,{warn:Eo,expectHTML:e.expectHTML,isUnaryTag:e.isUnaryTag,canBeLeftOpenTag:e.canBeLeftOpenTag,shouldDecodeNewlines:e.shouldDecodeNewlines,shouldDecodeNewlinesForHref:e.shouldDecodeNewlinesForHref,shouldKeepComment:e.comments,start:function(t,a,u){var l=i&&i.ns||Ro(t);er&&"svg"===l&&(a=function(t){for(var e=[],n=0;n<t.length;n++){var r=t[n];ia.test(r.name)||(r.name=r.name.replace(oa,""),e.push(r))}return e}(a));var f=cn(t,a,i);l&&(f.ns=l),function(t){return"style"===t.tag||"script"===t.tag&&(!t.attrsMap.type||"text/javascript"===t.attrsMap.type)}(f)&&!fr()&&(f.forbidden=!0);for(var p=0;p<Mo.length;p++)f=Mo[p](f,e)||f;if(s||(function(t){null!=ge(t,"v-pre")&&(t.pre=!0)}(f),f.pre&&(s=!0)),Bo(f.tag)&&(c=!0),s?function(t){var e=t.attrsList.length;if(e)for(var n=t.attrs=new Array(e),r=0;r<e;r++)n[r]={name:t.attrsList[r].name,value:JSON.stringify(t.attrsList[r].value)};else t.pre||(t.plain=!0)}(f):f.processed||(fn(f),function(t){var e=ge(t,"v-if");if(e)t.if=e,pn(t,{exp:e,block:t});else{null!=ge(t,"v-else")&&(t.else=!0);var n=ge(t,"v-else-if");n&&(t.elseif=n)}}(f),function(t){null!=ge(t,"v-once")&&(t.once=!0)}(f),ln(f,e)),r?o.length||r.if&&(f.elseif||f.else)&&pn(r,{exp:f.elseif,block:f}):r=f,i&&!f.forbidden)if(f.elseif||f.else)!function(t,e){var n=function(t){for(var e=t.length;e--;){if(1===t[e].type)return t[e];t.pop()}}(e.children);n&&n.if&&pn(n,{exp:t.elseif,block:t})}(f,i);else if(f.slotScope){i.plain=!1;var d=f.slotTarget||'"default"';(i.scopedSlots||(i.scopedSlots={}))[d]=f}else i.children.push(f),f.parent=i;u?n(f):(i=f,o.push(f))},end:function(){var t=o[o.length-1],e=t.children[t.children.length-1];e&&3===e.type&&" "===e.text&&!c&&t.children.pop(),o.length-=1,i=o[o.length-1],n(t)},chars:function(t){if(i&&(!er||"textarea"!==i.tag||i.attrsMap.placeholder!==t)){var e=i.children;if(t=c||t.trim()?function(t){return"script"===t.tag||"style"===t.tag}(i)?t:ra(t):a&&e.length?" ":""){var n;!s&&" "!==t&&(n=function(t,e){var n=e?vo(e):fo;if(n.test(t)){for(var r,i,o,a=[],s=[],c=n.lastIndex=0;r=n.exec(t);){(i=r.index)>c&&(s.push(o=t.slice(c,i)),a.push(JSON.stringify(o)));var u=ce(r[1].trim());a.push("_s("+u+")"),s.push({"@binding":u}),c=i+r[0].length}return c<t.length&&(s.push(o=t.slice(c)),a.push(JSON.stringify(o))),{expression:a.join("+"),tokens:s}}}(t,jo))?e.push({type:2,expression:n.expression,tokens:n.tokens,text:t}):" "===t&&e.length&&" "===e[e.length-1].text||e.push({type:3,text:t})}}},comment:function(t){i.children.push({type:3,text:t,isComment:!0})}}),r}function ln(t,e){!function(t){var e=me(t,"key");e&&(t.key=e)}(t),t.plain=!t.key&&!t.attrsList.length,function(t){var e=me(t,"ref");e&&(t.ref=e,t.refInFor=function(t){for(var e=t;e;){if(void 0!==e.for)return!0;e=e.parent}return!1}(t))}(t),function(t){if("slot"===t.tag)t.slotName=me(t,"name");else{var e;"template"===t.tag?(e=ge(t,"scope"),t.slotScope=e||ge(t,"slot-scope")):(e=ge(t,"slot-scope"))&&(t.slotScope=e);var n=me(t,"slot");n&&(t.slotTarget='""'===n?'"default"':n,"template"===t.tag||t.slotScope||pe(t,"slot",n))}}(t),function(t){var e;(e=me(t,"is"))&&(t.component=e),null!=ge(t,"inline-template")&&(t.inlineTemplate=!0)}(t);for(var n=0;n<Lo.length;n++)t=Lo[n](t,e)||t;!function(t){var e,n,r,i,o,a,s,c=t.attrsList;for(e=0,n=c.length;e<n;e++)if(r=i=c[e].name,o=c[e].value,Yo.test(r))if(t.hasBindings=!0,(a=function(t){var e=t.match(na);if(e){var n={};return e.forEach(function(t){n[t.slice(1)]=!0}),n}}(r))&&(r=r.replace(na,"")),ea.test(r))r=r.replace(ea,""),o=ce(o),s=!1,a&&(a.prop&&(s=!0,"innerHtml"===(r=Pn(r))&&(r="innerHTML")),a.camel&&(r=Pn(r)),a.sync&&he(t,"update:"+Pn(r),be(o,"$event"))),s||!t.component&&Do(t.tag,t.attrsMap.type,r)?fe(t,r,o):pe(t,r,o);else if(qo.test(r))r=r.replace(qo,""),he(t,r,o,a,!1);else{var u=(r=r.replace(Yo,"")).match(ta),l=u&&u[1];l&&(r=r.slice(0,-(l.length+1))),ve(t,r,i,o,l,a)}else pe(t,r,JSON.stringify(o)),!t.component&&"muted"===r&&Do(t.tag,t.attrsMap.type,r)&&fe(t,r,"true")}(t)}function fn(t){var e;if(e=ge(t,"v-for")){var n=function(t){var e=t.match(Xo);if(e){var n={};n.for=e[2].trim();var r=e[1].trim().replace(Qo,""),i=r.match(Zo);return i?(n.alias=r.replace(Zo,""),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=r,n}}(e);n&&g(t,n)}}function pn(t,e){t.ifConditions||(t.ifConditions=[]),t.ifConditions.push(e)}function dn(t){return cn(t.tag,t.attrsList.slice(),t.parent)}function vn(t){if(t.static=function(t){return 2!==t.type&&(3===t.type||!(!t.pre&&(t.hasBindings||t.if||t.for||Nn(t.tag)||!Uo(t.tag)||function(t){for(;t.parent;){if("template"!==(t=t.parent).tag)return!1;if(t.for)return!0}return!1}(t)||!Object.keys(t).every(Po))))}(t),1===t.type){if(!Uo(t.tag)&&"slot"!==t.tag&&null==t.attrsMap["inline-template"])return;for(var e=0,n=t.children.length;e<n;e++){var r=t.children[e];vn(r),r.static||(t.static=!1)}if(t.ifConditions)for(var i=1,o=t.ifConditions.length;i<o;i++){var a=t.ifConditions[i].block;vn(a),a.static||(t.static=!1)}}}function hn(t,e){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=e),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var n=0,r=t.children.length;n<r;n++)hn(t.children[n],e||!!t.for);if(t.ifConditions)for(var i=1,o=t.ifConditions.length;i<o;i++)hn(t.ifConditions[i].block,e)}}function mn(t,e,n){var r=e?"nativeOn:{":"on:{";for(var i in t)r+='"'+i+'":'+gn(i,t[i])+",";return r.slice(0,-1)+"}"}function gn(t,e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map(function(e){return gn(t,e)}).join(",")+"]";var n=la.test(e.value),r=ua.test(e.value);if(e.modifiers){var i="",o="",a=[];for(var s in e.modifiers)if(da[s])o+=da[s],fa[s]&&a.push(s);else if("exact"===s){var c=e.modifiers;o+=pa(["ctrl","shift","alt","meta"].filter(function(t){return!c[t]}).map(function(t){return"$event."+t+"Key"}).join("||"))}else a.push(s);return a.length&&(i+=function(t){return"if(!('button' in $event)&&"+t.map(yn).join("&&")+")return null;"}(a)),o&&(i+=o),"function($event){"+i+(n?e.value+"($event)":r?"("+e.value+")($event)":e.value)+"}"}return n||r?e.value:"function($event){"+e.value+"}"}function yn(t){var e=parseInt(t,10);if(e)return"$event.keyCode!=="+e;var n=fa[t];return"_k($event.keyCode,"+JSON.stringify(t)+","+JSON.stringify(n)+",$event.key)"}function bn(t,e){var n=new ha(e);return{render:"with(this){return "+(t?_n(t,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function _n(t,e){if(t.staticRoot&&!t.staticProcessed)return An(t,e);if(t.once&&!t.onceProcessed)return Cn(t,e);if(t.for&&!t.forProcessed)return function(t,e,n,r){var i=t.for,o=t.alias,a=t.iterator1?","+t.iterator1:"",s=t.iterator2?","+t.iterator2:"";return t.forProcessed=!0,"_l(("+i+"),function("+o+a+s+"){return "+_n(t,e)+"})"}(t,e);if(t.if&&!t.ifProcessed)return xn(t,e);if("template"!==t.tag||t.slotTarget){if("slot"===t.tag)return function(t,e){var n=t.slotName||'"default"',r=On(t,e),i="_t("+n+(r?","+r:""),o=t.attrs&&"{"+t.attrs.map(function(t){return Pn(t.name)+":"+t.value}).join(",")+"}",a=t.attrsMap["v-bind"];return!o&&!a||r||(i+=",null"),o&&(i+=","+o),a&&(i+=(o?"":",null")+","+a),i+")"}(t,e);var n;if(t.component)n=function(t,e,n){var r=e.inlineTemplate?null:On(e,n,!0);return"_c("+t+","+kn(e,n)+(r?","+r:"")+")"}(t.component,t,e);else{var r=t.plain?void 0:kn(t,e),i=t.inlineTemplate?null:On(t,e,!0);n="_c('"+t.tag+"'"+(r?","+r:"")+(i?","+i:"")+")"}for(var o=0;o<e.transforms.length;o++)n=e.transforms[o](t,n);return n}return On(t,e)||"void 0"}function An(t,e){return t.staticProcessed=!0,e.staticRenderFns.push("with(this){return "+_n(t,e)+"}"),"_m("+(e.staticRenderFns.length-1)+(t.staticInFor?",true":"")+")"}function Cn(t,e){if(t.onceProcessed=!0,t.if&&!t.ifProcessed)return xn(t,e);if(t.staticInFor){for(var n="",r=t.parent;r;){if(r.for){n=r.key;break}r=r.parent}return n?"_o("+_n(t,e)+","+e.onceId+++","+n+")":_n(t,e)}return An(t,e)}function xn(t,e,n,r){return t.ifProcessed=!0,wn(t.ifConditions.slice(),e,n,r)}function wn(t,e,n,r){function i(t){return n?n(t,e):t.once?Cn(t,e):_n(t,e)}if(!t.length)return r||"_e()";var o=t.shift();return o.exp?"("+o.exp+")?"+i(o.block)+":"+wn(t,e,n,r):""+i(o.block)}function kn(t,e){var n="{",r=function(t,e){var n=t.directives;if(n){var r,i,o,a,s="directives:[",c=!1;for(r=0,i=n.length;r<i;r++){o=n[r],a=!0;var u=e.directives[o.name];u&&(a=!!u(t,o,e.warn)),a&&(c=!0,s+='{name:"'+o.name+'",rawName:"'+o.rawName+'"'+(o.value?",value:("+o.value+"),expression:"+JSON.stringify(o.value):"")+(o.arg?',arg:"'+o.arg+'"':"")+(o.modifiers?",modifiers:"+JSON.stringify(o.modifiers):"")+"},")}return c?s.slice(0,-1)+"]":void 0}}(t,e);r&&(n+=r+","),t.key&&(n+="key:"+t.key+","),t.ref&&(n+="ref:"+t.ref+","),t.refInFor&&(n+="refInFor:true,"),t.pre&&(n+="pre:true,"),t.component&&(n+='tag:"'+t.tag+'",');for(var i=0;i<e.dataGenFns.length;i++)n+=e.dataGenFns[i](t);if(t.attrs&&(n+="attrs:{"+Tn(t.attrs)+"},"),t.props&&(n+="domProps:{"+Tn(t.props)+"},"),t.events&&(n+=mn(t.events,!1,e.warn)+","),t.nativeEvents&&(n+=mn(t.nativeEvents,!0,e.warn)+","),t.slotTarget&&!t.slotScope&&(n+="slot:"+t.slotTarget+","),t.scopedSlots&&(n+=function(t,e){return"scopedSlots:_u(["+Object.keys(t).map(function(n){return $n(n,t[n],e)}).join(",")+"])"}(t.scopedSlots,e)+","),t.model&&(n+="model:{value:"+t.model.value+",callback:"+t.model.callback+",expression:"+t.model.expression+"},"),t.inlineTemplate){var o=function(t,e){var n=t.children[0];if(1===n.type){var r=bn(n,e.options);return"inlineTemplate:{render:function(){"+r.render+"},staticRenderFns:["+r.staticRenderFns.map(function(t){return"function(){"+t+"}"}).join(",")+"]}"}}(t,e);o&&(n+=o+",")}return n=n.replace(/,$/,"")+"}",t.wrapData&&(n=t.wrapData(n)),t.wrapListeners&&(n=t.wrapListeners(n)),n}function $n(t,e,n){return e.for&&!e.forProcessed?function(t,e,n){var r=e.for,i=e.alias,o=e.iterator1?","+e.iterator1:"",a=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,"_l(("+r+"),function("+i+o+a+"){return "+$n(t,e,n)+"})"}(t,e,n):"{key:"+t+",fn:function("+String(e.slotScope)+"){return "+("template"===e.tag?e.if?e.if+"?"+(On(e,n)||"undefined")+":undefined":On(e,n)||"undefined":_n(e,n))+"}}"}function On(t,e,n,r,i){var o=t.children;if(o.length){var a=o[0];if(1===o.length&&a.for&&"template"!==a.tag&&"slot"!==a.tag)return(r||_n)(a,e);var s=n?function(t,e){for(var n=0,r=0;r<t.length;r++){var i=t[r];if(1===i.type){if(In(i)||i.ifConditions&&i.ifConditions.some(function(t){return In(t.block)})){n=2;break}(e(i)||i.ifConditions&&i.ifConditions.some(function(t){return e(t.block)}))&&(n=1)}}return n}(o,e.maybeComponent):0,c=i||function(t,e){return 1===t.type?_n(t,e):3===t.type&&t.isComment?function(t){return"_e("+JSON.stringify(t.text)+")"}(t):function(t){return"_v("+(2===t.type?t.expression:Sn(JSON.stringify(t.text)))+")"}(t)};return"["+o.map(function(t){return c(t,e)}).join(",")+"]"+(s?","+s:"")}}function In(t){return void 0!==t.for||"template"===t.tag||"slot"===t.tag}function Tn(t){for(var e="",n=0;n<t.length;n++){var r=t[n];e+='"'+r.name+'":'+Sn(r.value)+","}return e.slice(0,-1)}function Sn(t){return t.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function En(t,e){try{return new Function(t)}catch(n){return e.push({err:n,code:t}),b}}function jn(t){return Fo=Fo||document.createElement("div"),Fo.innerHTML=t?'<a href="\n"/>':'<div a="\n"/>',Fo.innerHTML.indexOf("&#10;")>0}var Ln=Object.freeze({}),Mn=Object.prototype.toString,Nn=f("slot,component",!0),Bn=f("key,ref,slot,slot-scope,is"),Dn=Object.prototype.hasOwnProperty,Rn=/-(\w)/g,Pn=v(function(t){return t.replace(Rn,function(t,e){return e?e.toUpperCase():""})}),Un=v(function(t){return t.charAt(0).toUpperCase()+t.slice(1)}),Fn=/\B([A-Z])/g,zn=v(function(t){return t.replace(Fn,"-$1").toLowerCase()}),Hn=function(t,e,n){return!1},Gn=function(t){return t},Jn="data-server-rendered",Vn=["component","directive","filter"],Kn=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured"],Wn={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:Hn,isReservedAttr:Hn,isUnknownElement:Hn,getTagNamespace:b,parsePlatformTagName:Gn,mustUseProp:Hn,_lifecycleHooks:Kn},qn=/[^\w.$]/,Yn="__proto__"in{},Xn="undefined"!=typeof window,Zn="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Qn=Zn&&WXEnvironment.platform.toLowerCase(),tr=Xn&&window.navigator.userAgent.toLowerCase(),er=tr&&/msie|trident/.test(tr),nr=tr&&tr.indexOf("msie 9.0")>0,rr=tr&&tr.indexOf("edge/")>0,ir=tr&&tr.indexOf("android")>0||"android"===Qn,or=tr&&/iphone|ipad|ipod|ios/.test(tr)||"ios"===Qn,ar=(tr&&/chrome\/\d+/.test(tr),{}.watch),sr=!1;if(Xn)try{var cr={};Object.defineProperty(cr,"passive",{get:function(){sr=!0}}),window.addEventListener("test-passive",null,cr)}catch(t){}var ur,lr,fr=function(){return void 0===ur&&(ur=!Xn&&void 0!==e&&"server"===e.process.env.VUE_ENV),ur},pr=Xn&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__,dr="undefined"!=typeof Symbol&&k(Symbol)&&"undefined"!=typeof Reflect&&k(Reflect.ownKeys);lr="undefined"!=typeof Set&&k(Set)?Set:function(){function t(){this.set=Object.create(null)}return t.prototype.has=function(t){return!0===this.set[t]},t.prototype.add=function(t){this.set[t]=!0},t.prototype.clear=function(){this.set=Object.create(null)},t}();var vr=b,hr=0,mr=function(){this.id=hr++,this.subs=[]};mr.prototype.addSub=function(t){this.subs.push(t)},mr.prototype.removeSub=function(t){p(this.subs,t)},mr.prototype.depend=function(){mr.target&&mr.target.addDep(this)},mr.prototype.notify=function(){for(var t=this.subs.slice(),e=0,n=t.length;e<n;e++)t[e].update()},mr.target=null;var gr=[],yr=function(t,e,n,r,i,o,a,s){this.tag=t,this.data=e,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},br={child:{configurable:!0}};br.child.get=function(){return this.componentInstance},Object.defineProperties(yr.prototype,br);var _r=function(t){void 0===t&&(t="");var e=new yr;return e.text=t,e.isComment=!0,e},Ar=Array.prototype,Cr=Object.create(Ar);["push","pop","shift","unshift","splice","sort","reverse"].forEach(function(t){var e=Ar[t];w(Cr,t,function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,o=e.apply(this,n),a=this.__ob__;switch(t){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o})});var xr=Object.getOwnPropertyNames(Cr),wr={shouldConvert:!0},kr=function(t){this.value=t,this.dep=new mr,this.vmCount=0,w(t,"__ob__",this),Array.isArray(t)?((Yn?T:S)(t,Cr,xr),this.observeArray(t)):this.walk(t)};kr.prototype.walk=function(t){for(var e=Object.keys(t),n=0;n<e.length;n++)j(t,e[n],t[e[n]])},kr.prototype.observeArray=function(t){for(var e=0,n=t.length;e<n;e++)E(t[e])};var $r=Wn.optionMergeStrategies;$r.data=function(t,e,n){return n?D(t,e,n):e&&"function"!=typeof e?t:D(t,e)},Kn.forEach(function(t){$r[t]=R}),Vn.forEach(function(t){$r[t+"s"]=P}),$r.watch=function(t,e,n,r){if(t===ar&&(t=void 0),e===ar&&(e=void 0),!e)return Object.create(t||null);if(!t)return e;var i={};g(i,t);for(var o in e){var a=i[o],s=e[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},$r.props=$r.methods=$r.inject=$r.computed=function(t,e,n,r){if(!t)return e;var i=Object.create(null);return g(i,t),e&&g(i,e),i},$r.provide=D;var Or,Ir,Tr=function(t,e){return void 0===e?t:e},Sr=[],Er=!1,jr=!1;if(void 0!==n&&k(n))Ir=function(){n(W)};else if("undefined"==typeof MessageChannel||!k(MessageChannel)&&"[object MessageChannelConstructor]"!==MessageChannel.toString())Ir=function(){setTimeout(W,0)};else{var Lr=new MessageChannel,Mr=Lr.port2;Lr.port1.onmessage=W,Ir=function(){Mr.postMessage(1)}}if("undefined"!=typeof Promise&&k(Promise)){var Nr=Promise.resolve();Or=function(){Nr.then(W),or&&setTimeout(b)}}else Or=Ir;var Br,Dr=new lr,Rr=v(function(t){var e="&"===t.charAt(0),n="~"===(t=e?t.slice(1):t).charAt(0),r="!"===(t=n?t.slice(1):t).charAt(0);return t=r?t.slice(1):t,{name:t,once:n,capture:r,passive:e}}),Pr=null,Ur=[],Fr=[],zr={},Hr=!1,Gr=!1,Jr=0,Vr=0,Kr=function(t,e,n,r,i){this.vm=t,i&&(t._watcher=this),t._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++Vr,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new lr,this.newDepIds=new lr,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(t){if(!qn.test(t)){var e=t.split(".");return function(t){for(var n=0;n<e.length;n++){if(!t)return;t=t[e[n]]}return t}}}(e),this.getter||(this.getter=function(){})),this.value=this.lazy?void 0:this.get()};Kr.prototype.get=function(){!function(t){mr.target&&gr.push(mr.target),mr.target=t}(this);var t,e=this.vm;try{t=this.getter.call(e,e)}catch(t){if(!this.user)throw t;J(t,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&Y(t),mr.target=gr.pop(),this.cleanupDeps()}return t},Kr.prototype.addDep=function(t){var e=t.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(t),this.depIds.has(e)||t.addSub(this))},Kr.prototype.cleanupDeps=function(){for(var t=this.deps.length;t--;){var e=this.deps[t];this.newDepIds.has(e.id)||e.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},Kr.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(t){var e=t.id;if(null==zr[e]){if(zr[e]=!0,Gr){for(var n=Ur.length-1;n>Jr&&Ur[n].id>t.id;)n--;Ur.splice(n+1,0,t)}else Ur.push(t);Hr||(Hr=!0,q(gt))}}(this)},Kr.prototype.run=function(){if(this.active){var t=this.get();if(t!==this.value||a(t)||this.deep){var e=this.value;if(this.value=t,this.user)try{this.cb.call(this.vm,t,e)}catch(t){J(t,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,t,e)}}},Kr.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},Kr.prototype.depend=function(){for(var t=this.deps.length;t--;)this.deps[t].depend()},Kr.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||p(this.vm._watchers,this);for(var t=this.deps.length;t--;)this.deps[t].removeSub(this);this.active=!1}};var Wr={enumerable:!0,configurable:!0,get:b,set:b},qr={lazy:!0};Mt(Nt.prototype);var Yr={init:function(t,e,n,i){if(!t.componentInstance||t.componentInstance._isDestroyed)(t.componentInstance=function(t,e,n,i){var o={_isComponent:!0,parent:e,_parentVnode:t,_parentElm:n||null,_refElm:i||null},a=t.data.inlineTemplate;return r(a)&&(o.render=a.render,o.staticRenderFns=a.staticRenderFns),new t.componentOptions.Ctor(o)}(t,Pr,n,i)).$mount(e?t.elm:void 0,e);else if(t.data.keepAlive){var o=t;Yr.prepatch(o,o)}},prepatch:function(t,e){var n=e.componentOptions;!function(t,e,n,r,i){var o=!!(i||t.$options._renderChildren||r.data.scopedSlots||t.$scopedSlots!==Ln);if(t.$options._parentVnode=r,t.$vnode=r,t._vnode&&(t._vnode.parent=r),t.$options._renderChildren=i,t.$attrs=r.data&&r.data.attrs||Ln,t.$listeners=n||Ln,e&&t.$options.props){wr.shouldConvert=!1;for(var a=t._props,s=t.$options._propKeys||[],c=0;c<s.length;c++){var u=s[c];a[u]=z(u,t.$options.props,e,t)}wr.shouldConvert=!0,t.$options.propsData=e}if(n){var l=t.$options._parentListeners;t.$options._parentListeners=n,ut(t,n,l)}o&&(t.$slots=lt(i,r.context),t.$forceUpdate())}(e.componentInstance=t.componentInstance,n.propsData,n.listeners,e,n.children)},insert:function(t){var e=t.context,n=t.componentInstance;n._isMounted||(n._isMounted=!0,mt(n,"mounted")),t.data.keepAlive&&(e._isMounted?function(t){t._inactive=!1,Fr.push(t)}(n):vt(n,!0))},destroy:function(t){var e=t.componentInstance;e._isDestroyed||(t.data.keepAlive?ht(e,!0):e.$destroy())}},Xr=Object.keys(Yr),Zr=1,Qr=2,ti=0;!function(t){t.prototype._init=function(t){this._uid=ti++,this._isVue=!0,t&&t._isComponent?function(t,e){var n=t.$options=Object.create(t.constructor.options),r=e._parentVnode;n.parent=e.parent,n._parentVnode=r,n._parentElm=e._parentElm,n._refElm=e._refElm;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,e.render&&(n.render=e.render,n.staticRenderFns=e.staticRenderFns)}(this,t):this.$options=U(Ut(this.constructor),t||{},this),this._renderProxy=this,this._self=this,function(t){var e=t.$options,n=e.parent;if(n&&!e.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(t)}t.$parent=n,t.$root=n?n.$root:t,t.$children=[],t.$refs={},t._watcher=null,t._inactive=null,t._directInactive=!1,t._isMounted=!1,t._isDestroyed=!1,t._isBeingDestroyed=!1}(this),function(t){t._events=Object.create(null),t._hasHookEvent=!1;var e=t.$options._parentListeners;e&&ut(t,e)}(this),function(t){t._vnode=null,t._staticTrees=null;var e=t.$options,n=t.$vnode=e._parentVnode,r=n&&n.context;t.$slots=lt(e._renderChildren,r),t.$scopedSlots=Ln,t._c=function(e,n,r,i){return Rt(t,e,n,r,i,!1)},t.$createElement=function(e,n,r,i){return Rt(t,e,n,r,i,!0)};var i=n&&n.data;j(t,"$attrs",i&&i.attrs||Ln,0,!0),j(t,"$listeners",e._parentListeners||Ln,0,!0)}(this),mt(this,"beforeCreate"),function(t){var e=xt(t.$options.inject,t);e&&(wr.shouldConvert=!1,Object.keys(e).forEach(function(n){j(t,n,e[n])}),wr.shouldConvert=!0)}(this),bt(this),function(t){var e=t.$options.provide;e&&(t._provided="function"==typeof e?e.call(t):e)}(this),mt(this,"created"),this.$options.el&&this.$mount(this.$options.el)}}(Ft),function(t){var e={};e.get=function(){return this._data};var n={};n.get=function(){return this._props},Object.defineProperty(t.prototype,"$data",e),Object.defineProperty(t.prototype,"$props",n),t.prototype.$set=L,t.prototype.$delete=M,t.prototype.$watch=function(t,e,n){if(s(e))return Ct(this,t,e,n);(n=n||{}).user=!0;var r=new Kr(this,t,e,n);return n.immediate&&e.call(this,r.value),function(){r.teardown()}}}(Ft),function(t){var e=/^hook:/;t.prototype.$on=function(t,n){if(Array.isArray(t))for(var r=0,i=t.length;r<i;r++)this.$on(t[r],n);else(this._events[t]||(this._events[t]=[])).push(n),e.test(t)&&(this._hasHookEvent=!0);return this},t.prototype.$once=function(t,e){function n(){r.$off(t,n),e.apply(r,arguments)}var r=this;return n.fn=e,r.$on(t,n),r},t.prototype.$off=function(t,e){if(!arguments.length)return this._events=Object.create(null),this;if(Array.isArray(t)){for(var n=0,r=t.length;n<r;n++)this.$off(t[n],e);return this}var i=this._events[t];if(!i)return this;if(!e)return this._events[t]=null,this;if(e)for(var o,a=i.length;a--;)if((o=i[a])===e||o.fn===e){i.splice(a,1);break}return this},t.prototype.$emit=function(t){var e=this,n=e._events[t];if(n){n=n.length>1?m(n):n;for(var r=m(arguments,1),i=0,o=n.length;i<o;i++)try{n[i].apply(e,r)}catch(n){J(n,e,'event handler for "'+t+'"')}}return e}}(Ft),function(t){t.prototype._update=function(t,e){this._isMounted&&mt(this,"beforeUpdate");var n=this.$el,r=this._vnode,i=Pr;Pr=this,this._vnode=t,r?this.$el=this.__patch__(r,t):(this.$el=this.__patch__(this.$el,t,e,!1,this.$options._parentElm,this.$options._refElm),this.$options._parentElm=this.$options._refElm=null),Pr=i,n&&(n.__vue__=null),this.$el&&(this.$el.__vue__=this),this.$vnode&&this.$parent&&this.$vnode===this.$parent._vnode&&(this.$parent.$el=this.$el)},t.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},t.prototype.$destroy=function(){if(!this._isBeingDestroyed){mt(this,"beforeDestroy"),this._isBeingDestroyed=!0;var t=this.$parent;!t||t._isBeingDestroyed||this.$options.abstract||p(t.$children,this),this._watcher&&this._watcher.teardown();for(var e=this._watchers.length;e--;)this._watchers[e].teardown();this._data.__ob__&&this._data.__ob__.vmCount--,this._isDestroyed=!0,this.__patch__(this._vnode,null),mt(this,"destroyed"),this.$off(),this.$el&&(this.$el.__vue__=null),this.$vnode&&(this.$vnode.parent=null)}}}(Ft),function(t){Mt(t.prototype),t.prototype.$nextTick=function(t){return q(t,this)},t.prototype._render=function(){var t=this,e=t.$options,n=e.render,r=e._parentVnode;if(t._isMounted)for(var i in t.$slots){var o=t.$slots[i];(o._rendered||o[0]&&o[0].elm)&&(t.$slots[i]=I(o,!0))}t.$scopedSlots=r&&r.data.scopedSlots||Ln,t.$vnode=r;var a;try{a=n.call(t._renderProxy,t.$createElement)}catch(e){J(e,t,"render"),a=t._vnode}return a instanceof yr||(a=_r()),a.parent=r,a}}(Ft);var ei=[String,RegExp,Array],ni={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:ei,exclude:ei,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var t in this.cache)Vt(this.cache,t,this.keys)},watch:{include:function(t){Jt(this,function(e){return Gt(t,e)})},exclude:function(t){Jt(this,function(e){return!Gt(t,e)})}},render:function(){var t=this.$slots.default,e=at(t),n=e&&e.componentOptions;if(n){var r=Ht(n),i=this.include,o=this.exclude;if(i&&(!r||!Gt(i,r))||o&&r&&Gt(o,r))return e;var a=this.cache,s=this.keys,c=null==e.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):e.key;a[c]?(e.componentInstance=a[c].componentInstance,p(s,c),s.push(c)):(a[c]=e,s.push(c),this.max&&s.length>parseInt(this.max)&&Vt(a,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||t&&t[0]}}};!function(t){var e={};e.get=function(){return Wn},Object.defineProperty(t,"config",e),t.util={warn:vr,extend:g,mergeOptions:U,defineReactive:j},t.set=L,t.delete=M,t.nextTick=q,t.options=Object.create(null),Vn.forEach(function(e){t.options[e+"s"]=Object.create(null)}),t.options._base=t,g(t.options.components,ni),function(t){t.use=function(t){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(t)>-1)return this;var n=m(arguments,1);return n.unshift(this),"function"==typeof t.install?t.install.apply(t,n):"function"==typeof t&&t.apply(null,n),e.push(t),this}}(t),function(t){t.mixin=function(t){return this.options=U(this.options,t),this}}(t),zt(t),function(t){Vn.forEach(function(e){t[e]=function(t,n){return n?("component"===e&&s(n)&&(n.name=n.name||t,n=this.options._base.extend(n)),"directive"===e&&"function"==typeof n&&(n={bind:n,update:n}),this.options[e+"s"][t]=n,n):this.options[e+"s"][t]}})}(t)}(Ft),Object.defineProperty(Ft.prototype,"$isServer",{get:fr}),Object.defineProperty(Ft.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Ft.version="2.5.13";var ri,ii,oi,ai,si,ci,ui,li,fi=f("style,class"),pi=f("input,textarea,option,select,progress"),di=function(t,e,n){return"value"===n&&pi(t)&&"button"!==e||"selected"===n&&"option"===t||"checked"===n&&"input"===t||"muted"===n&&"video"===t},vi=f("contenteditable,draggable,spellcheck"),hi=f("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),mi="http://www.w3.org/1999/xlink",gi=function(t){return":"===t.charAt(5)&&"xlink"===t.slice(0,5)},yi=function(t){return gi(t)?t.slice(6,t.length):""},bi=function(t){return null==t||!1===t},_i={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Ai=f("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Ci=f("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),xi=function(t){return Ai(t)||Ci(t)},wi=Object.create(null),ki=f("text,number,password,search,email,tel,url"),$i=Object.freeze({createElement:function(t,e){var n=document.createElement(t);return"select"!==t?n:(e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n)},createElementNS:function(t,e){return document.createElementNS(_i[t],e)},createTextNode:function(t){return document.createTextNode(t)},createComment:function(t){return document.createComment(t)},insertBefore:function(t,e,n){t.insertBefore(e,n)},removeChild:function(t,e){t.removeChild(e)},appendChild:function(t,e){t.appendChild(e)},parentNode:function(t){return t.parentNode},nextSibling:function(t){return t.nextSibling},tagName:function(t){return t.tagName},setTextContent:function(t,e){t.textContent=e},setAttribute:function(t,e,n){t.setAttribute(e,n)}}),Oi={create:function(t,e){Qt(e)},update:function(t,e){t.data.ref!==e.data.ref&&(Qt(t,!0),Qt(e))},destroy:function(t){Qt(t,!0)}},Ii=new yr("",{},[]),Ti=["create","activate","update","remove","destroy"],Si={create:ne,update:ne,destroy:function(t){ne(t,Ii)}},Ei=Object.create(null),ji=[Oi,Si],Li={create:oe,update:oe},Mi={create:se,update:se},Ni=/[\w).+\-_$\]]/,Bi="__r",Di="__c",Ri={create:$e,update:$e},Pi={create:Oe,update:Oe},Ui=v(function(t){var e={},n=/:(.+)/;return t.split(/;(?![^(]*\))/g).forEach(function(t){if(t){var r=t.split(n);r.length>1&&(e[r[0].trim()]=r[1].trim())}}),e}),Fi=/^--/,zi=/\s*!important$/,Hi=function(t,e,n){if(Fi.test(e))t.style.setProperty(e,n);else if(zi.test(n))t.style.setProperty(e,n.replace(zi,""),"important");else{var r=Ji(e);if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++)t.style[r]=n[i];else t.style[r]=n}},Gi=["Webkit","Moz","ms"],Ji=v(function(t){if(li=li||document.createElement("div").style,"filter"!==(t=Pn(t))&&t in li)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=0;n<Gi.length;n++){var r=Gi[n]+e;if(r in li)return r}}),Vi={create:Se,update:Se},Ki=v(function(t){return{enterClass:t+"-enter",enterToClass:t+"-enter-to",enterActiveClass:t+"-enter-active",leaveClass:t+"-leave",leaveToClass:t+"-leave-to",leaveActiveClass:t+"-leave-active"}}),Wi=Xn&&!nr,qi="transition",Yi="animation",Xi="transition",Zi="transitionend",Qi="animation",to="animationend";Wi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Xi="WebkitTransition",Zi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Qi="WebkitAnimation",to="webkitAnimationEnd"));var eo=Xn?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(t){return t()},no=/\b(transform|all)(,|$)/,ro=function(e){function n(t){var e=$.parentNode(t);r(e)&&$.removeChild(e,t)}function a(t,e,n,o,a){if(t.isRootInsert=!a,!function(t,e,n,o){var a=t.data;if(r(a)){var u=r(t.componentInstance)&&a.keepAlive;if(r(a=a.hook)&&r(a=a.init)&&a(t,!1,n,o),r(t.componentInstance))return s(t,e),i(u)&&function(t,e,n,i){for(var o,a=t;a.componentInstance;)if(a=a.componentInstance._vnode,r(o=a.data)&&r(o=o.transition)){for(o=0;o<w.activate.length;++o)w.activate[o](Ii,a);e.push(a);break}c(n,t.elm,i)}(t,e,n,o),!0}}(t,e,n,o)){var l=t.data,f=t.children,v=t.tag;r(v)?(t.elm=t.ns?$.createElementNS(t.ns,v):$.createElement(v,t),d(t),u(t,f,e),r(l)&&p(t,e),c(n,t.elm,o)):i(t.isComment)?(t.elm=$.createComment(t.text),c(n,t.elm,o)):(t.elm=$.createTextNode(t.text),c(n,t.elm,o))}}function s(t,e){r(t.data.pendingInsert)&&(e.push.apply(e,t.data.pendingInsert),t.data.pendingInsert=null),t.elm=t.componentInstance.$el,l(t)?(p(t,e),d(t)):(Qt(t),e.push(t))}function c(t,e,n){r(t)&&(r(n)?n.parentNode===t&&$.insertBefore(t,e,n):$.appendChild(t,e))}function u(t,e,n){if(Array.isArray(e))for(var r=0;r<e.length;++r)a(e[r],n,t.elm,null,!0);else o(t.text)&&$.appendChild(t.elm,$.createTextNode(String(t.text)))}function l(t){for(;t.componentInstance;)t=t.componentInstance._vnode;return r(t.tag)}function p(t,e){for(var n=0;n<w.create.length;++n)w.create[n](Ii,t);r(C=t.data.hook)&&(r(C.create)&&C.create(Ii,t),r(C.insert)&&e.push(t))}function d(t){var e;if(r(e=t.fnScopeId))$.setAttribute(t.elm,e,"");else for(var n=t;n;)r(e=n.context)&&r(e=e.$options._scopeId)&&$.setAttribute(t.elm,e,""),n=n.parent;r(e=Pr)&&e!==t.context&&e!==t.fnContext&&r(e=e.$options._scopeId)&&$.setAttribute(t.elm,e,"")}function v(t,e,n,r,i,o){for(;r<=i;++r)a(n[r],o,t,e)}function h(t){var e,n,i=t.data;if(r(i))for(r(e=i.hook)&&r(e=e.destroy)&&e(t),e=0;e<w.destroy.length;++e)w.destroy[e](t);if(r(e=t.children))for(n=0;n<t.children.length;++n)h(t.children[n])}function m(t,e,i,o){for(;i<=o;++i){var a=e[i];r(a)&&(r(a.tag)?(g(a),h(a)):n(a.elm))}}function g(t,e){if(r(e)||r(t.data)){var i,o=w.remove.length+1;for(r(e)?e.listeners+=o:e=function(t,e){function r(){0==--r.listeners&&n(t)}return r.listeners=e,r}(t.elm,o),r(i=t.componentInstance)&&r(i=i._vnode)&&r(i.data)&&g(i,e),i=0;i<w.remove.length;++i)w.remove[i](t,e);r(i=t.data.hook)&&r(i=i.remove)?i(t,e):e()}else n(t.elm)}function y(e,n,i,o,s){for(var c,u,l,f=0,p=0,d=n.length-1,h=n[0],g=n[d],y=i.length-1,_=i[0],A=i[y],C=!s;f<=d&&p<=y;)t(h)?h=n[++f]:t(g)?g=n[--d]:te(h,_)?(b(h,_,o),h=n[++f],_=i[++p]):te(g,A)?(b(g,A,o),g=n[--d],A=i[--y]):te(h,A)?(b(h,A,o),C&&$.insertBefore(e,h.elm,$.nextSibling(g.elm)),h=n[++f],A=i[--y]):te(g,_)?(b(g,_,o),C&&$.insertBefore(e,g.elm,h.elm),g=n[--d],_=i[++p]):(t(c)&&(c=ee(n,f,d)),t(u=r(_.key)?c[_.key]:function(t,e,n,i){for(var o=n;o<i;o++){var a=e[o];if(r(a)&&te(t,a))return o}}(_,n,f,d))?a(_,o,e,h.elm):te(l=n[u],_)?(b(l,_,o),n[u]=void 0,C&&$.insertBefore(e,l.elm,h.elm)):a(_,o,e,h.elm),_=i[++p]);f>d?v(e,t(i[y+1])?null:i[y+1].elm,i,p,y,o):p>y&&m(0,n,f,d)}function b(e,n,o,a){if(e!==n){var s=n.elm=e.elm;if(i(e.isAsyncPlaceholder))r(n.asyncFactory.resolved)?A(e.elm,n,o):n.isAsyncPlaceholder=!0;else if(i(n.isStatic)&&i(e.isStatic)&&n.key===e.key&&(i(n.isCloned)||i(n.isOnce)))n.componentInstance=e.componentInstance;else{var c,u=n.data;r(u)&&r(c=u.hook)&&r(c=c.prepatch)&&c(e,n);var f=e.children,p=n.children;if(r(u)&&l(n)){for(c=0;c<w.update.length;++c)w.update[c](e,n);r(c=u.hook)&&r(c=c.update)&&c(e,n)}t(n.text)?r(f)&&r(p)?f!==p&&y(s,f,p,o,a):r(p)?(r(e.text)&&$.setTextContent(s,""),v(s,null,p,0,p.length-1,o)):r(f)?m(0,f,0,f.length-1):r(e.text)&&$.setTextContent(s,""):e.text!==n.text&&$.setTextContent(s,n.text),r(u)&&r(c=u.hook)&&r(c=c.postpatch)&&c(e,n)}}}function _(t,e,n){if(i(n)&&r(t.parent))t.parent.data.pendingInsert=e;else for(var o=0;o<e.length;++o)e[o].data.hook.insert(e[o])}function A(t,e,n,o){var a,c=e.tag,l=e.data,f=e.children;if(o=o||l&&l.pre,e.elm=t,i(e.isComment)&&r(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(a=l.hook)&&r(a=a.init)&&a(e,!0),r(a=e.componentInstance)))return s(e,n),!0;if(r(c)){if(r(f))if(t.hasChildNodes())if(r(a=l)&&r(a=a.domProps)&&r(a=a.innerHTML)){if(a!==t.innerHTML)return!1}else{for(var d=!0,v=t.firstChild,h=0;h<f.length;h++){if(!v||!A(v,f[h],n,o)){d=!1;break}v=v.nextSibling}if(!d||v)return!1}else u(e,f,n);if(r(l)){var m=!1;for(var g in l)if(!O(g)){m=!0,p(e,n);break}!m&&l.class&&Y(l.class)}}else t.data!==e.text&&(t.data=e.text);return!0}var C,x,w={},k=e.modules,$=e.nodeOps;for(C=0;C<Ti.length;++C)for(w[Ti[C]]=[],x=0;x<k.length;++x)r(k[x][Ti[C]])&&w[Ti[C]].push(k[x][Ti[C]]);var O=f("attrs,class,staticClass,staticStyle,key");return function(e,n,o,s,c,u){if(!t(n)){var f=!1,p=[];if(t(e))f=!0,a(n,p,c,u);else{var d=r(e.nodeType);if(!d&&te(e,n))b(e,n,p,s);else{if(d){if(1===e.nodeType&&e.hasAttribute(Jn)&&(e.removeAttribute(Jn),o=!0),i(o)&&A(e,n,p))return _(n,p,!0),e;e=function(t){return new yr($.tagName(t).toLowerCase(),{},[],void 0,t)}(e)}var v=e.elm,g=$.parentNode(v);if(a(n,p,v._leaveCb?null:g,$.nextSibling(v)),r(n.parent))for(var y=n.parent,C=l(n);y;){for(var x=0;x<w.destroy.length;++x)w.destroy[x](y);if(y.elm=n.elm,C){for(var k=0;k<w.create.length;++k)w.create[k](Ii,y);var O=y.data.hook.insert;if(O.merged)for(var I=1;I<O.fns.length;I++)O.fns[I]()}else Qt(y);y=y.parent}r(g)?m(0,[e],0,0):r(e.tag)&&h(e)}}return _(n,p,f),n.elm}r(e)&&h(e)}}({nodeOps:$i,modules:[Li,Mi,Ri,Pi,Vi,Xn?{create:Je,activate:Je,remove:function(t,e){!0!==t.data.show?ze(t,e):e()}}:{}].concat(ji)});nr&&document.addEventListener("selectionchange",function(){var t=document.activeElement;t&&t.vmodel&&Ze(t,"input")});var io={inserted:function(t,e,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?tt(n,"postpatch",function(){io.componentUpdated(t,e,n)}):Ve(t,e,n.context),t._vOptions=[].map.call(t.options,qe)):("textarea"===n.tag||ki(t.type))&&(t._vModifiers=e.modifiers,e.modifiers.lazy||(t.addEventListener("change",Xe),ir||(t.addEventListener("compositionstart",Ye),t.addEventListener("compositionend",Xe)),nr&&(t.vmodel=!0)))},componentUpdated:function(t,e,n){if("select"===n.tag){Ve(t,e,n.context);var r=t._vOptions,i=t._vOptions=[].map.call(t.options,qe);i.some(function(t,e){return!_(t,r[e])})&&(t.multiple?e.value.some(function(t){return We(t,i)}):e.value!==e.oldValue&&We(e.value,i))&&Ze(t,"change")}}},oo={model:io,show:{bind:function(t,e,n){var r=e.value,i=(n=Qe(n)).data&&n.data.transition,o=t.__vOriginalDisplay="none"===t.style.display?"":t.style.display;r&&i?(n.data.show=!0,Fe(n,function(){t.style.display=o})):t.style.display=r?o:"none"},update:function(t,e,n){var r=e.value;r!==e.oldValue&&((n=Qe(n)).data&&n.data.transition?(n.data.show=!0,r?Fe(n,function(){t.style.display=t.__vOriginalDisplay}):ze(n,function(){t.style.display="none"})):t.style.display=r?t.__vOriginalDisplay:"none")},unbind:function(t,e,n,r,i){i||(t.style.display=t.__vOriginalDisplay)}}},ao={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]},so={name:"transition",props:ao,abstract:!0,render:function(t){var e=this,n=this.$slots.default;if(n&&(n=n.filter(function(t){return t.tag||ot(t)})).length){var r=this.mode,i=n[0];if(function(t){for(;t=t.parent;)if(t.data.transition)return!0}(this.$vnode))return i;var a=tn(i);if(!a)return i;if(this._leaving)return nn(t,i);var s="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?s+"comment":s+a.tag:o(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var c=(a.data||(a.data={})).transition=en(this),u=this._vnode,l=tn(u);if(a.data.directives&&a.data.directives.some(function(t){return"show"===t.name})&&(a.data.show=!0),l&&l.data&&!function(t,e){return e.key===t.key&&e.tag===t.tag}(a,l)&&!ot(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var f=l.data.transition=g({},c);if("out-in"===r)return this._leaving=!0,tt(f,"afterLeave",function(){e._leaving=!1,e.$forceUpdate()}),nn(t,i);if("in-out"===r){if(ot(a))return u;var p,d=function(){p()};tt(c,"afterEnter",d),tt(c,"enterCancelled",d),tt(f,"delayLeave",function(t){p=t})}}return i}}},co=g({tag:String,moveClass:String},ao);delete co.mode;var uo={Transition:so,TransitionGroup:{props:co,render:function(t){for(var e=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=en(this),s=0;s<i.length;s++){var c=i[s];c.tag&&null!=c.key&&0!==String(c.key).indexOf("__vlist")&&(o.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a)}if(r){for(var u=[],l=[],f=0;f<r.length;f++){var p=r[f];p.data.transition=a,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?u.push(p):l.push(p)}this.kept=t(e,null,u),this.removed=l}return t(e,null,o)},beforeUpdate:function(){this.__patch__(this._vnode,this.kept,!1,!0),this._vnode=this.kept},updated:function(){var t=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";t.length&&this.hasMove(t[0].elm,e)&&(t.forEach(rn),t.forEach(on),t.forEach(an),this._reflow=document.body.offsetHeight,t.forEach(function(t){if(t.data.moved){var n=t.elm,r=n.style;Ne(n,e),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Zi,n._moveCb=function t(r){r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Zi,t),n._moveCb=null,Be(n,e))})}}))},methods:{hasMove:function(t,e){if(!Wi)return!1;if(this._hasMove)return this._hasMove;var n=t.cloneNode();t._transitionClasses&&t._transitionClasses.forEach(function(t){je(n,t)}),Ee(n,e),n.style.display="none",this.$el.appendChild(n);var r=Re(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Ft.config.mustUseProp=di,Ft.config.isReservedTag=xi,Ft.config.isReservedAttr=fi,Ft.config.getTagNamespace=Xt,Ft.config.isUnknownElement=function(t){if(!Xn)return!0;if(xi(t))return!1;if(t=t.toLowerCase(),null!=wi[t])return wi[t];var e=document.createElement(t);return t.indexOf("-")>-1?wi[t]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:wi[t]=/HTMLUnknownElement/.test(e.toString())},g(Ft.options.directives,oo),g(Ft.options.components,uo),Ft.prototype.__patch__=Xn?ro:b,Ft.prototype.$mount=function(t,e){return t=t&&Xn?Zt(t):void 0,function(t,e,n){t.$el=e,t.$options.render||(t.$options.render=_r),mt(t,"beforeMount");var r;return r=function(){t._update(t._render(),n)},new Kr(t,r,b,null,!0),n=!1,null==t.$vnode&&(t._isMounted=!0,mt(t,"mounted")),t}(this,t,e)},Ft.nextTick(function(){Wn.devtools&&pr&&pr.emit("init",Ft)},0);var lo,fo=/\{\{((?:.|\n)+?)\}\}/g,po=/[-.*+?^${}()|[\]\/\\]/g,vo=v(function(t){var e=t[0].replace(po,"\\$&"),n=t[1].replace(po,"\\$&");return new RegExp(e+"((?:.|\\n)+?)"+n,"g")}),ho={staticKeys:["staticClass"],transformNode:function(t,e){e.warn;var n=ge(t,"class");n&&(t.staticClass=JSON.stringify(n));var r=me(t,"class",!1);r&&(t.classBinding=r)},genData:function(t){var e="";return t.staticClass&&(e+="staticClass:"+t.staticClass+","),t.classBinding&&(e+="class:"+t.classBinding+","),e}},mo={staticKeys:["staticStyle"],transformNode:function(t,e){e.warn;var n=ge(t,"style");n&&(t.staticStyle=JSON.stringify(Ui(n)));var r=me(t,"style",!1);r&&(t.styleBinding=r)},genData:function(t){var e="";return t.staticStyle&&(e+="staticStyle:"+t.staticStyle+","),t.styleBinding&&(e+="style:("+t.styleBinding+"),"),e}},go=function(t){return lo=lo||document.createElement("div"),lo.innerHTML=t,lo.textContent},yo=f("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),bo=f("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),_o=f("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),Ao=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Co="[a-zA-Z_][\\w\\-\\.]*",xo="((?:"+Co+"\\:)?"+Co+")",wo=new RegExp("^<"+xo),ko=/^\s*(\/?)>/,$o=new RegExp("^<\\/"+xo+"[^>]*>"),Oo=/^<!DOCTYPE [^>]+>/i,Io=/^<!--/,To=/^<!\[/,So=!1;"x".replace(/x(.)?/g,function(t,e){So=""===e});var Eo,jo,Lo,Mo,No,Bo,Do,Ro,Po,Uo,Fo,zo=f("script,style,textarea",!0),Ho={},Go={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t"},Jo=/&(?:lt|gt|quot|amp);/g,Vo=/&(?:lt|gt|quot|amp|#10|#9);/g,Ko=f("pre,textarea",!0),Wo=function(t,e){return t&&Ko(t)&&"\n"===e[0]},qo=/^@|^v-on:/,Yo=/^v-|^@|^:/,Xo=/(.*?)\s+(?:in|of)\s+(.*)/,Zo=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Qo=/^\(|\)$/g,ta=/:(.*)$/,ea=/^:|^v-bind:/,na=/\.[^.]+/g,ra=v(go),ia=/^xmlns:NS\d+/,oa=/^NS\d+:/,aa=[ho,mo,{preTransformNode:function(t,e){if("input"===t.tag){var n=t.attrsMap;if(n["v-model"]&&(n["v-bind:type"]||n[":type"])){var r=me(t,"type"),i=ge(t,"v-if",!0),o=i?"&&("+i+")":"",a=null!=ge(t,"v-else",!0),s=ge(t,"v-else-if",!0),c=dn(t);fn(c),de(c,"type","checkbox"),ln(c,e),c.processed=!0,c.if="("+r+")==='checkbox'"+o,pn(c,{exp:c.if,block:c});var u=dn(t);ge(u,"v-for",!0),de(u,"type","radio"),ln(u,e),pn(c,{exp:"("+r+")==='radio'"+o,block:u});var l=dn(t);return ge(l,"v-for",!0),de(l,":type",r),ln(l,e),pn(c,{exp:i,block:l}),a?c.else=!0:s&&(c.elseif=s),c}}}}],sa={expectHTML:!0,modules:aa,directives:{model:function(t,e,n){var r=e.value,i=e.modifiers,o=t.tag,a=t.attrsMap.type;if(t.component)return ye(t,r,i),!1;if("select"===o)!function(t,e,n){var r='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";r=r+" "+be(e,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),he(t,"change",r,null,!0)}(t,r,i);else if("input"===o&&"checkbox"===a)!function(t,e,n){var r=n&&n.number,i=me(t,"value")||"null",o=me(t,"true-value")||"true",a=me(t,"false-value")||"false";fe(t,"checked","Array.isArray("+e+")?_i("+e+","+i+")>-1"+("true"===o?":("+e+")":":_q("+e+","+o+")")),he(t,"change","var $$a="+e+",$$el=$event.target,$$c=$$el.checked?("+o+"):("+a+");if(Array.isArray($$a)){var $$v="+(r?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+e+"=$$a.concat([$$v]))}else{$$i>-1&&("+e+"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{"+be(e,"$$c")+"}",null,!0)}(t,r,i);else if("input"===o&&"radio"===a)!function(t,e,n){var r=n&&n.number,i=me(t,"value")||"null";fe(t,"checked","_q("+e+","+(i=r?"_n("+i+")":i)+")"),he(t,"change",be(e,i),null,!0)}(t,r,i);else if("input"===o||"textarea"===o)!function(t,e,n){var r=t.attrsMap.type,i=n||{},o=i.lazy,a=i.number,s=i.trim,c=!o&&"range"!==r,u=o?"change":"range"===r?Bi:"input",l="$event.target.value";s&&(l="$event.target.value.trim()"),a&&(l="_n("+l+")");var f=be(e,l);c&&(f="if($event.target.composing)return;"+f),fe(t,"value","("+e+")"),he(t,u,f,null,!0),(s||a)&&he(t,"blur","$forceUpdate()")}(t,r,i);else if(!Wn.isReservedTag(o))return ye(t,r,i),!1;return!0},text:function(t,e){e.value&&fe(t,"textContent","_s("+e.value+")")},html:function(t,e){e.value&&fe(t,"innerHTML","_s("+e.value+")")}},isPreTag:function(t){return"pre"===t},isUnaryTag:yo,mustUseProp:di,canBeLeftOpenTag:bo,isReservedTag:xi,getTagNamespace:Xt,staticKeys:function(t){return t.reduce(function(t,e){return t.concat(e.staticKeys||[])},[]).join(",")}(aa)},ca=v(function(t){return f("type,tag,attrsList,attrsMap,plain,parent,children,attrs"+(t?","+t:""))}),ua=/^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/,la=/^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/,fa={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},pa=function(t){return"if("+t+")return null;"},da={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:pa("$event.target !== $event.currentTarget"),ctrl:pa("!$event.ctrlKey"),shift:pa("!$event.shiftKey"),alt:pa("!$event.altKey"),meta:pa("!$event.metaKey"),left:pa("'button' in $event && $event.button !== 0"),middle:pa("'button' in $event && $event.button !== 1"),right:pa("'button' in $event && $event.button !== 2")},va={on:function(t,e){t.wrapListeners=function(t){return"_g("+t+","+e.value+")"}},bind:function(t,e){t.wrapData=function(n){return"_b("+n+",'"+t.tag+"',"+e.value+","+(e.modifiers&&e.modifiers.prop?"true":"false")+(e.modifiers&&e.modifiers.sync?",true":"")+")"}},cloak:b},ha=function(t){this.options=t,this.warn=t.warn||ue,this.transforms=le(t.modules,"transformCode"),this.dataGenFns=le(t.modules,"genData"),this.directives=g(g({},va),t.directives);var e=t.isReservedTag||Hn;this.maybeComponent=function(t){return!e(t.tag)},this.onceId=0,this.staticRenderFns=[]},ma=(new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)"),function(t){return function(e){function n(n,r){var i=Object.create(e),o=[],a=[];if(i.warn=function(t,e){(e?a:o).push(t)},r){r.modules&&(i.modules=(e.modules||[]).concat(r.modules)),r.directives&&(i.directives=g(Object.create(e.directives||null),r.directives));for(var s in r)"modules"!==s&&"directives"!==s&&(i[s]=r[s])}var c=t(n,i);return c.errors=o,c.tips=a,c}return{compile:n,compileToFunctions:function(t){var e=Object.create(null);return function(n,r,i){(r=g({},r)).warn,delete r.warn;var o=r.delimiters?String(r.delimiters)+n:n;if(e[o])return e[o];var a=t(n,r),s={},c=[];return s.render=En(a.render,c),s.staticRenderFns=a.staticRenderFns.map(function(t){return En(t,c)}),e[o]=s}}(n)}}}(function(t,e){var n=un(t.trim(),e);!1!==e.optimize&&function(t,e){t&&(Po=ca(e.staticKeys||""),Uo=e.isReservedTag||Hn,vn(t),hn(t,!1))}(n,e);var r=bn(n,e);return{ast:n,render:r.render,staticRenderFns:r.staticRenderFns}})(sa).compileToFunctions),ga=!!Xn&&jn(!1),ya=!!Xn&&jn(!0),ba=v(function(t){var e=Zt(t);return e&&e.innerHTML}),_a=Ft.prototype.$mount;return Ft.prototype.$mount=function(t,e){if((t=t&&Zt(t))===document.body||t===document.documentElement)return this;var n=this.$options;if(!n.render){var r=n.template;if(r)if("string"==typeof r)"#"===r.charAt(0)&&(r=ba(r));else{if(!r.nodeType)return this;r=r.innerHTML}else t&&(r=function(t){if(t.outerHTML)return t.outerHTML;var e=document.createElement("div");return e.appendChild(t.cloneNode(!0)),e.innerHTML}(t));if(r){var i=ma(r,{shouldDecodeNewlines:ga,shouldDecodeNewlinesForHref:ya,delimiters:n.delimiters,comments:n.comments},this),o=i.render,a=i.staticRenderFns;n.render=o,n.staticRenderFns=a}}return _a.call(this,t,e)},Ft.compile=ma,Ft})}).call(e,n(2),n(5).setImmediate)},function(t,e,n){(function(t){function r(t,e){this._id=t,this._clearFn=e}var i=Function.prototype.apply;e.setTimeout=function(){return new r(i.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new r(i.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(6),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(e,n(2))},function(t,e,n){(function(t,e){!function(t,n){"use strict";function r(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var r={callback:t,args:e};return u[c]=r,s(c),c++}function i(t){delete u[t]}function o(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(n,r)}}function a(t){if(l)setTimeout(a,0,t);else{var e=u[t];if(e){l=!0;try{o(e)}finally{i(t),l=!1}}}}if(!t.setImmediate){var s,c=1,u={},l=!1,f=t.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(t);p=p&&p.setTimeout?p:t,"[object process]"==={}.toString.call(t.process)?function(){s=function(t){e.nextTick(function(){a(t)})}}():function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(e)&&a(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),s=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){a(t.data)},s=function(e){t.port2.postMessage(e)}}():f&&"onreadystatechange"in f.createElement("script")?function(){var t=f.documentElement;s=function(e){var n=f.createElement("script");n.onreadystatechange=function(){a(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():function(){s=function(t){setTimeout(a,0,t)}}(),p.setImmediate=r,p.clearImmediate=i}}("undefined"==typeof self?void 0===t?this:t:self)}).call(e,n(2),n(7))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function i(t){if(l===setTimeout)return setTimeout(t,0);if((l===n||!l)&&setTimeout)return l=setTimeout,setTimeout(t,0);try{return l(t,0)}catch(e){try{return l.call(null,t,0)}catch(e){return l.call(this,t,0)}}}function o(t){if(f===clearTimeout)return clearTimeout(t);if((f===r||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){h&&d&&(h=!1,d.length?v=d.concat(v):m=-1,v.length&&s())}function s(){if(!h){var t=i(a);h=!0;for(var e=v.length;e;){for(d=v,v=[];++m<e;)d&&d[m].run();m=-1,e=v.length}d=null,h=!1,o(t)}}function c(t,e){this.fun=t,this.array=e}function u(){}var l,f,p=t.exports={};!function(){try{l="function"==typeof setTimeout?setTimeout:n}catch(t){l=n}try{f="function"==typeof clearTimeout?clearTimeout:r}catch(t){f=r}}();var d,v=[],h=!1,m=-1;p.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];v.push(new c(t,e)),1!==v.length||h||i(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=u,p.addListener=u,p.once=u,p.off=u,p.removeListener=u,p.removeAllListeners=u,p.emit=u,p.prependListener=u,p.prependOnceListener=u,p.listeners=function(t){return[]},p.binding=function(t){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(t){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(t,e,n){"use strict";n(9),n(12);var r=n(14),i=n(15);t.exports={template:r,el:"#app",components:{"login-":i}}},function(t,e,n){var r=n(10);"string"==typeof r&&(r=[[t.i,r,""]]);var i={singleton:!0,hmr:!0};i.transform=void 0;n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){e=t.exports=n(0)(!0),e.push([t.i,"body{font-family:Arial;background:#f1f1f1;padding:0;margin:0;height:100%;width:100%}","",{version:3,sources:["D:/GIT/project/src/D:/GIT/project/src/app.less"],names:[],mappings:"AAAA,KACI,kBACA,mBACA,UACA,SACA,YACA,UAAA,CAAA",file:"app.less",sourcesContent:["body {\n    font-family: Arial;\n    background: #f1f1f1;\n    padding: 0px;\n    margin: 0px;\n    height: 100%;\n    width: 100%;\n}"],sourceRoot:""}])},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,r=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var i=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(i))return t;var o;return o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")"})}},function(t,e,n){var r=n(13);"string"==typeof r&&(r=[[t.i,r,""]]);var i={singleton:!0,hmr:!0};i.transform=void 0;n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){e=t.exports=n(0)(!0),e.push([t.i,'@font-face{font-family:Material Icons;font-style:normal;font-weight:400;src:local("Material Icons"),local("MaterialIcons-Regular"),url(https://rawgit.com/google/material-design-icons/master/iconfont/MaterialIcons-Regular.woff2) format("woff2"),url(https://rawgit.com/google/material-design-icons/master/iconfont/MaterialIcons-Regular.woff) format("woff"),url(https://rawgit.com/google/material-design-icons/master/iconfont/MaterialIcons-Regular.ttf) format("truetype")}.material-icons{font-family:Material Icons;font-weight:400;font-style:normal;font-size:24px;display:inline-block;line-height:1;text-transform:none;letter-spacing:normal;word-wrap:normal;white-space:nowrap;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:"liga"}',"",{version:3,sources:["D:/GIT/project/src/D:/GIT/project/src/material-icons.less"],names:[],mappings:"AAMA,WACE,2BACA,kBACA,gBACA,4YAIsG,CAGxG,gBACE,2BACA,gBACA,kBACA,eACA,qBACA,cACA,oBACA,sBACA,iBACA,mBACA,cAGA,mCAEA,kCAGA,kCAGA,4BAAuB,CAAA",file:"material-icons.less",sourcesContent:["// Material Icons By Google\n// ========================\n// Copied at 2/7/2017\n// Please update from time to time\n\n/* fallback */\n@font-face {\n  font-family: 'Material Icons';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Material Icons'),\n  local('MaterialIcons-Regular'),\n  url(https://rawgit.com/google/material-design-icons/master/iconfont/MaterialIcons-Regular.woff2) format('woff2'),\n  url(https://rawgit.com/google/material-design-icons/master/iconfont/MaterialIcons-Regular.woff) format('woff'),\n  url(https://rawgit.com/google/material-design-icons/master/iconfont/MaterialIcons-Regular.ttf) format('truetype');\n}\n\n.material-icons {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;  /* Preferred icon size */\n  display: inline-block;\n  line-height: 1;\n  text-transform: none;\n  letter-spacing: normal;\n  word-wrap: normal;\n  white-space: nowrap;\n  direction: ltr;\n\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased;\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility;\n\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Support for IE. */\n  font-feature-settings: 'liga';\n}"],sourceRoot:""}])},function(t,e){t.exports="<div> <login-></login-> </div>"},function(t,e,n){"use strict";n(16);var r=n(18),i=n(23),o=n(27);t.exports={template:r,data:function(){return{input:{username:null,password:null},invalid_inputs_list:[],submit_button_is_clicked:!1}},methods:{click:function(){this.submit_button_is_clicked=!0,!this.invalid_inputs_list.length>0&&console.log("done clicked")},updateInputData:function(t,e){this.input[t]=e},updateInvalidInputsList:function(t,e){!this.invalid_inputs_list.includes(t)&&e?this.invalid_inputs_list.push(t):this.invalid_inputs_list.includes(t)&&!e&&this.invalid_inputs_list.splice(this.invalid_inputs_list.indexOf(t),1)}},components:{"input-":i,"button-":o}}},function(t,e,n){var r=n(17);"string"==typeof r&&(r=[[t.i,r,""]]);var i={singleton:!0,hmr:!0};i.transform=void 0;n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){e=t.exports=n(0)(!0),e.push([t.i,".login{background:#fff;width:100%;max-width:400px;margin:50px auto 0;padding:30px}","",{version:3,sources:["D:/GIT/project/src/continers/login/D:/GIT/project/src/continers/login/login.less"],names:[],mappings:"AAAA,OACI,gBACA,WACA,gBACA,mBACA,YAAA,CAAA",file:"login.less",sourcesContent:[".login {\n    background: white;\n    width: 100%;\n    max-width: 400px;\n    margin: 50px auto 0 auto;\n    padding: 30px;\n}"],sourceRoot:""}])},function(t,e){t.exports='<div class=login> <input- @update-input-data=updateInputData @update-invalid-inputs-list=updateInvalidInputsList :submit-button-is-clicked=submit_button_is_clicked :regex=/^\\s*\\S\\S/ regex-error="This is not name!" placeholder=Username input-data-name=username icon=account_box> </input-> <input- @update-input-data=updateInputData @update-invalid-inputs-list=updateInvalidInputsList :submit-button-is-clicked=submit_button_is_clicked :regex=/^\\s*\\S\\S/ regex-error="This is not name!" placeholder=Password input-data-name=password icon=keyboard_voice> </input-> <button- @click=click text=DONE icon=keyboard_voice style=margin-top:20px> </button-> </div>'},,,,,function(t,e,n){"use strict";n(24);var r=n(26);t.exports={template:r,data:function(){return{value:"",input_msg:null,dirty:!1,is_focused:!1}},props:["submitButtonIsClicked","inputDataName","regex","regexError","placeholder","icon"],created:function(){this.checkInput(!0)},watch:{submitButtonIsClicked:function(t){t&&(this.dirty=!0,this.checkInput())}},computed:{labelLocationUp:function(){if(this.is_focused||this.value)return!0}},methods:{onFocus:function(){this.is_focused=!0},onInput:function(){this.updateInputData(),this.dirty&&this.checkInput()},onBlur:function(){this.is_focused=!1,this.dirty=!0,this.checkInput()},checkInput:function(t){if(this.regex)if(!this.value.length>0)t||(this.input_msg="Required field!"),this.updateInvalidInputsList(!0);else{var e=new RegExp(this.regex);e.test(this.value)?(this.input_msg=null,this.updateInvalidInputsList(!1)):(t||(this.input_msg=this.regexError),this.updateInvalidInputsList(!0))}},updateInputData:function(){this.$emit("update-input-data",this.inputDataName,this.value)},updateInvalidInputsList:function(t){this.$emit("update-invalid-inputs-list",this.inputDataName,t)}}}},function(t,e,n){var r=n(25);"string"==typeof r&&(r=[[t.i,r,""]]);var i={singleton:!0,hmr:!0};i.transform=void 0;n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){e=t.exports=n(0)(!0),e.push([t.i,'.md-input{position:relative;padding:23px 0 16px}.md-input-with-icon{padding-left:35px}.md-input input{width:100%;display:block;border:0;outline:0;font-size:14px;color:#000;background:transparent;position:relative;z-index:2}.md-input label{font-size:14px;position:absolute;left:0;top:24px;z-index:1;font-weight:400;cursor:text;transition:all .5s}.md-input label.with-icon{padding-left:35px}.md-input label.focus{font-size:12px;top:9px;color:blue}.md-input span{font-size:0;position:absolute;text-align:right;left:0;top:46px;font-weight:400;width:100%;color:red;transition:all .5s}.md-input span:after{content:"";width:100%;display:block;height:1px;position:absolute;top:-3px;right:0;background-color:#888;transition:all .2s}.md-input span.with-icon:after{width:calc(100% - 35px)}.md-input span.error{font-size:12px}.md-input span.error:after{background-color:red}.md-input span.focused:after{height:3px}.md-input i{position:absolute;top:18px;left:0;font-size:27px;z-index:3}',"",{version:3,sources:["D:/GIT/project/src/continers/components/input/D:/GIT/project/src/continers/components/input/input.less"],names:[],mappings:"AAAA,UACI,kBACA,mBAAA,CAGJ,oBACI,iBAAA,CAGJ,gBACI,WACA,cACA,SACA,UACA,eACA,WACA,uBACA,kBACA,SAAA,CAGJ,gBACI,eACA,kBACA,OACA,SACA,UACA,gBACA,YACA,kBAAA,CAGJ,0BACI,iBAAA,CAGJ,sBACI,eACA,QACA,UAAA,CAGJ,eACI,YACA,kBACA,iBACA,OACA,SACA,gBACA,WACA,UACA,kBAAA,CAGJ,qBACI,WACA,WACA,cACA,WACA,kBACA,SACA,QACA,sBACA,kBAAA,CAGJ,+BACI,uBAAO,CAGX,qBACI,cAAA,CAGJ,2BACI,oBAAA,CAGJ,6BACI,UAAA,CAGJ,YACI,kBACA,SACA,OACA,eACA,SAAA,CAAA",file:"input.less",sourcesContent:[".md-input {\n    position: relative;\n    padding: 23px 0 16px 0;\n}\n\n.md-input-with-icon {\n    padding-left: 35px;\n}\n\n.md-input input {\n    width: 100%;\n    display: block;\n    border: 0;\n    outline: 0;\n    font-size: 14px;\n    color: #000;\n    background: transparent;\n    position: relative;\n    z-index: 2;\n}\n\n.md-input label {\n    font-size: 14px;\n    position: absolute;\n    left: 0;\n    top: 24px;\n    z-index: 1;\n    font-weight: 400;\n    cursor: text;\n    transition: all .5s;\n}\n\n.md-input label.with-icon {\n    padding-left: 35px;\n}\n\n.md-input label.focus {\n    font-size: 12px;\n    top: 9px;\n    color:blue;\n}\n\n.md-input span {\n    font-size: 0;\n    position: absolute;\n    text-align: right;\n    left: 0;\n    top: 46px;\n    font-weight: 400;\n    width: 100%;\n    color: red;\n    transition: all .5s;\n}\n\n.md-input span::after { \n    content: \"\";\n    width: 100%;\n    display: block;\n    height: 1px;\n    position: absolute;\n    top: -3px;\n    right: 0px;\n    background-color: #888;\n    transition: all .2s;\n}\n\n.md-input span.with-icon::after {\n    width: calc(~'100% - 35px');\n}\n\n.md-input span.error {\n    font-size: 12px;\n}\n\n.md-input span.error::after { \n    background-color: #ff0000;\n}\n\n.md-input span.focused::after { \n    height: 3px;\n}\n\n.md-input i { \n    position: absolute;\n    top: 18px;\n    left: 0px;\n    font-size: 27px;\n    z-index: 3;\n}"],sourceRoot:""}])},function(t,e){t.exports="<div :class=\"['md-input', { 'md-input-with-icon': icon }]\"> <input @focus=onFocus @input=onInput @blur=onBlur v-model=value type=text /> <label :class=\"[{ focus: labelLocationUp }, { 'with-icon': icon }]\">{{ placeholder }}</label> <span :class=\"[{ error: input_msg }, { focused: is_focused }, { 'with-icon': icon }]\">{{ input_msg }}</span> <i class=material-icons>{{ icon }}</i> </div>"},function(t,e,n){"use strict";n(28);var r=n(30);t.exports={template:r,props:["text","icon"],methods:{onClick:function(){this.$emit("click")}}}},function(t,e,n){var r=n(29);"string"==typeof r&&(r=[[t.i,r,""]]);var i={singleton:!0,hmr:!0};i.transform=void 0;n(1)(r,i);r.locals&&(t.exports=r.locals)},function(t,e,n){e=t.exports=n(0)(!0),e.push([t.i,".button{background:#006eff;text-align:center;padding:15px;cursor:pointer}.button i,.button span{color:#fff}.button i{vertical-align:sub}","",{version:3,sources:["D:/GIT/project/src/continers/components/button/D:/GIT/project/src/continers/components/button/button.less"],names:[],mappings:"AAAA,QACI,mBACA,kBACA,aACA,cAAA,CAGJ,AAIA,uBAHI,UAAA,CAKA,AAFJ,UAEI,kBAAA,CAAA",file:"button.less",sourcesContent:[".button {\n    background: rgb(0, 110, 255);\n    text-align: center;\n    padding: 15px;\n    cursor: pointer;\n}\n\n.button span {\n    color:rgb(255, 255, 255);\n}\n\n.button i {\n    color:rgb(255, 255, 255);\n    vertical-align: sub;\n}"],sourceRoot:""}])},function(t,e){t.exports="<div @click=onClick class=button> <i class=material-icons>{{ icon }}</i> <span>{{ text }}</span> </div>"}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc2NyaXB0LmpzIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCA4ZjIzMDMxNzllZDNkZmUyMzUwMyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Z1ZV9lbmdpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS9kaXN0L3Z1ZS5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NldGltbWVkaWF0ZS9zZXRJbW1lZGlhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmpzIiwid2VicGFjazovLy8uL3NyYy9hcHAubGVzcz9lMjk2Iiwid2VicGFjazovLy8uL3NyYy9hcHAubGVzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovLy8uL3NyYy9tYXRlcmlhbC1pY29ucy5sZXNzPzM3ZmQiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hdGVyaWFsLWljb25zLmxlc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC5odG1sIiwid2VicGFjazovLy8uL3NyYy9jb250aW5lcnMvbG9naW4vbG9naW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRpbmVycy9sb2dpbi9sb2dpbi5sZXNzP2JjOTYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRpbmVycy9sb2dpbi9sb2dpbi5sZXNzIiwid2VicGFjazovLy8uL3NyYy9jb250aW5lcnMvbG9naW4vbG9naW4uaHRtbCIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRpbmVycy9jb21wb25lbnRzL2lucHV0L2lucHV0Lmxlc3M/NGM2YyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQuaHRtbCIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5sZXNzPzk5OGIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRpbmVycy9jb21wb25lbnRzL2J1dHRvbi9idXR0b24ubGVzcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5odG1sIl0sIm5hbWVzIjpbIm1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJpbnN0YWxsZWRNb2R1bGVzIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwiaXRlbSIsInVzZVNvdXJjZU1hcCIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJ0b0NvbW1lbnQiLCJjb25jYXQiLCJzb3VyY2VzIiwibWFwIiwic291cmNlIiwic291cmNlUm9vdCIsImpvaW4iLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJpZCIsInB1c2giLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsIm9wdGlvbnMiLCJkb21TdHlsZSIsInN0eWxlc0luRG9tIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsImNzcyIsIm1lZGlhIiwicGFydCIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwidGFyZ2V0IiwiZ2V0RWxlbWVudCIsImluc2VydEludG8iLCJFcnJvciIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYXR0cnMiLCJ0eXBlIiwiYWRkQXR0cnMiLCJjcmVhdGVMaW5rRWxlbWVudCIsImxpbmsiLCJyZWwiLCJlbCIsImtleXMiLCJmb3JFYWNoIiwia2V5Iiwic2V0QXR0cmlidXRlIiwib2JqIiwidXBkYXRlIiwicmVtb3ZlIiwicmVzdWx0IiwidHJhbnNmb3JtIiwic2luZ2xldG9uIiwic3R5bGVJbmRleCIsInNpbmdsZXRvbkNvdW50ZXIiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiYmluZCIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJ1cGRhdGVMaW5rIiwiaHJlZiIsImFwcGx5VG9UYWciLCJuZXdPYmoiLCJpbmRleCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwicmVwbGFjZVRleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwiYXV0b0ZpeFVybHMiLCJ1bmRlZmluZWQiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJmaXhVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImlzT2xkSUUiLCJmbiIsIm1lbW8iLCJhcHBseSIsImFyZ3VtZW50cyIsIndpbmRvdyIsImFsbCIsImF0b2IiLCJzZWxlY3RvciIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInF1ZXJ5U2VsZWN0b3IiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJnIiwiRnVuY3Rpb24iLCJldmFsIiwiVnVlIiwiYXBwIiwidnVlX2VuZ2luZSIsImdsb2JhbCIsInNldEltbWVkaWF0ZSIsInQiLCJyIiwiTm4iLCJhIiwicGFyc2VGbG9hdCIsIlN0cmluZyIsIk1hdGgiLCJmbG9vciIsImlzRmluaXRlIiwiaXNOYU4iLCJ1IiwiY3JlYXRlIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSIsImYiLCJNbiIsIl9sZW5ndGgiLCJ2IiwiQXJyYXkiLCJoIiwieSIsImlzQXJyYXkiLCJldmVyeSIsIl8iLCJiIiwiJCIsImNoYXJDb2RlQXQiLCJDIiwidmFsdWUiLCJ3cml0YWJsZSIsInciLCJ0ZXN0IiwieCIsIm1yIiwiayIsImNvbXBvbmVudE9wdGlvbnMiLCJ0YWciLCJkYXRhIiwiY2hpbGRyZW4iLCJ0ZXh0IiwiZWxtIiwiY29udGV4dCIsImFzeW5jRmFjdG9yeSIsIm5zIiwiaXNTdGF0aWMiLCJpc0NvbW1lbnQiLCJmbkNvbnRleHQiLCJmbk9wdGlvbnMiLCJmblNjb3BlSWQiLCJpc0Nsb25lZCIsIkEiLCJPIiwiX19wcm90b19fIiwiUyIsIlQiLCJfX29iX18iLCJ3ciIsIkNyIiwic2hvdWxkQ29udmVydCIsInVyIiwiaXNFeHRlbnNpYmxlIiwiX2lzVnVlIiwidm1Db3VudCIsIkUiLCJ2ciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInNldCIsImRlcGVuZCIsImRlcCIsIkkiLCJub3RpZnkiLCJtYXgiLCJOIiwiTCIsIk0iLCJEIiwiUCIsIkYiLCJ4ciIsIk9yIiwicHJvcHMiLCJQbiIsImluamVjdCIsImZyb20iLCJkaXJlY3RpdmVzIiwiZXh0ZW5kcyIsIm1peGlucyIsIlIiLCJGbiIsIkgiLCJVIiwiSG4iLCJkZWZhdWx0IiwiJG9wdGlvbnMiLCJwcm9wc0RhdGEiLCJfcHJvcHMiLCJCIiwibWF0Y2giLCJWIiwiJHBhcmVudCIsImVycm9yQ2FwdHVyZWQiLCJ6IiwiSm4iLCJlcnJvckhhbmRsZXIiLCJLIiwiR24iLCJabiIsImNvbnNvbGUiLCJlcnJvciIsIkoiLCJUciIsIlNyIiwic2xpY2UiLCJxIiwiRXIiLCJBciIsImtyIiwiUHJvbWlzZSIsIlciLCJHIiwiTXIiLCJjbGVhciIsImlzRnJvemVuIiwiaGFzIiwiYWRkIiwiWiIsImZucyIsIlgiLCJEciIsIm9uY2UiLCJjYXB0dXJlIiwicGFzc2l2ZSIsInBhcmFtcyIsIlkiLCJob29rIiwibWVyZ2VkIiwiUSIsInR0IiwiZXQiLCJzaGlmdCIsIl9pc1ZMaXN0IiwibnQiLCJmciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwiZXh0ZW5kIiwicnQiLCJpdCIsIm90IiwiTHIiLCIkb25jZSIsIiRvbiIsImF0IiwiJG9mZiIsInN0IiwiY3QiLCJzbG90IiwidXQiLCJsdCIsImZ0IiwiX2luYWN0aXZlIiwicHQiLCJfZGlyZWN0SW5hY3RpdmUiLCIkY2hpbGRyZW4iLCJ2dCIsImR0IiwiX2hhc0hvb2tFdmVudCIsIiRlbWl0IiwiaHQiLCJVciIsIkZyIiwic29ydCIsIlZyIiwiSHIiLCJydW4iLCJSciIsIkJyIiwidm0iLCJfd2F0Y2hlciIsIl9pc01vdW50ZWQiLCJsciIsImRldnRvb2xzIiwiZW1pdCIsIm10IiwiSnIiLCJ5dCIsIl93YXRjaGVycyIsIl9wcm9wS2V5cyIsIm1ldGhvZHMiLCJfZGF0YSIsImNvbXB1dGVkIiwiX2NvbXB1dGVkV2F0Y2hlcnMiLCJLciIsInFyIiwiZ3QiLCJ3YXRjaCIsImlyIiwiYnQiLCJfdCIsImNhY2hlIiwiZGlydHkiLCJldmFsdWF0ZSIsImhhbmRsZXIiLCIkd2F0Y2giLCIkdCIsIlJlZmxlY3QiLCJvd25LZXlzIiwiX3Byb3ZpZGVkIiwiQ3QiLCJ3dCIsIiRzY29wZWRTbG90cyIsIiRzbG90cyIsIl9yZW5kZXJlZCIsIiRjcmVhdGVFbGVtZW50IiwieHQiLCJVbiIsImt0Iiwia2V5Q29kZXMiLCJBdCIsIkxuIiwibXVzdFVzZVByb3AiLCJkb21Qcm9wcyIsIm9uIiwiT3QiLCJfc3RhdGljVHJlZXMiLCJzdGF0aWNSZW5kZXJGbnMiLCJfcmVuZGVyUHJveHkiLCJUdCIsIlN0IiwiRXQiLCJpc09uY2UiLCJqdCIsIk50IiwiX28iLCJfbiIsIl9zIiwiX2wiLCJfcSIsIl9pIiwiX20iLCJfZiIsIl9rIiwiX2IiLCJfdiIsIl9lIiwiZ3IiLCJfdSIsIl9nIiwiSXQiLCJwYXJlbnQiLCJsaXN0ZW5lcnMiLCJqbiIsImluamVjdGlvbnMiLCJzbG90cyIsIl9jb21waWxlZCIsInNjb3BlZFNsb3RzIiwiX3Njb3BlSWQiLCJfYyIsIkR0IiwiTHQiLCJNdCIsIl9iYXNlIiwiY2lkIiwiZXJyb3JDb21wIiwicmVzb2x2ZWQiLCJsb2FkaW5nIiwibG9hZGluZ0NvbXAiLCJjb250ZXh0cyIsIiRmb3JjZVVwZGF0ZSIsInRoZW4iLCJjb21wb25lbnQiLCJkZWxheSIsInNldFRpbWVvdXQiLCJ0aW1lb3V0IiwiYXN5bmNNZXRhIiwiRnQiLCJtb2RlbCIsInByb3AiLCJldmVudCIsImNhbGxiYWNrIiwiZnVuY3Rpb25hbCIsInJlbmRlciIsIm5hdGl2ZU9uIiwiYWJzdHJhY3QiLCJHciIsIldyIiwiQ3RvciIsIlhyIiwiaXMiLCJaciIsIiR2bm9kZSIsImdldFRhZ05hbWVzcGFjZSIsImlzUmVzZXJ2ZWRUYWciLCJwYXJzZVBsYXRmb3JtVGFnTmFtZSIsIlB0Iiwic3VwZXIiLCJzdXBlck9wdGlvbnMiLCJleHRlbmRPcHRpb25zIiwic2VhbGVkT3B0aW9ucyIsImNvbXBvbmVudHMiLCJSdCIsIl9pbml0IiwiSHQiLCJfQ3RvciIsImNvbnN0cnVjdG9yIiwibWl4aW4iLCJ1c2UiLCJ6biIsIkJ0IiwiVXQiLCJWdCIsIl92bm9kZSIsInp0IiwiY29tcG9uZW50SW5zdGFuY2UiLCIkZGVzdHJveSIsIkt0IiwiSnQiLCJxdCIsIld0Iiwic3RhdGljQ2xhc3MiLCJjbGFzcyIsIkd0IiwiYmkiLCJadCIsIlh0IiwicmVmIiwiJHJlZnMiLCJyZWZJbkZvciIsIll0Iiwid2kiLCJpc0FzeW5jUGxhY2Vob2xkZXIiLCJRdCIsInRlIiwiQWkiLCJlZSIsIm9sZFZhbHVlIiwibmUiLCJkZWYiLCJjb21wb25lbnRVcGRhdGVkIiwiaW5zZXJ0ZWQiLCJtb2RpZmllcnMiLCJUaSIsInJhd05hbWUiLCJyZSIsImluaGVyaXRBdHRycyIsImllIiwiUW4iLCJlciIsImhpIiwicmVtb3ZlQXR0cmlidXRlTlMiLCJ2aSIsIm1pIiwicGkiLCJyZW1vdmVBdHRyaWJ1dGUiLCJkaSIsInlpIiwidGFnTmFtZSIsInNldEF0dHJpYnV0ZU5TIiwidHIiLCJfX2llcGgiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm9lIiwiX3RyYW5zaXRpb25DbGFzc2VzIiwiX3ByZXZDbGFzcyIsImFlIiwidHJpbSIsImNoYXJBdCIsIklpIiwic2UiLCJjZSIsInVlIiwicGxhaW4iLCJsZSIsImZlIiwiYXR0cnNNYXAiLCJhdHRyc0xpc3QiLCJwZSIsImFyZyIsImRlIiwicmlnaHQiLCJtaWRkbGUiLCJuYXRpdmUiLCJuYXRpdmVFdmVudHMiLCJldmVudHMiLCJ1bnNoaWZ0IiwidmUiLCJoZSIsIm1lIiwibnVtYmVyIiwieWUiLCJleHByZXNzaW9uIiwiZWkiLCJsYXN0SW5kZXhPZiIsImlpIiwiZXhwIiwibmkiLCJvaSIsImFpIiwiYmUiLCJyaSIsImdlIiwiJGUiLCJDZSIsIl93aXRoVGFzayIsInNpIiwid2UiLCJvciIsInhlIiwiTGkiLCJNaSIsImNoYW5nZSIsImtlIiwiX3ZhbHVlIiwiY29tcG9zaW5nIiwiYWN0aXZlRWxlbWVudCIsIl92TW9kaWZpZXJzIiwibGF6eSIsIkFlIiwiT2UiLCJzdGF0aWNTdHlsZSIsIkZpIiwiU2UiLCJub3JtYWxpemVkU3R5bGUiLCJCaSIsIlRlIiwiY2xhc3NMaXN0IiwiZ2V0QXR0cmlidXRlIiwiRWUiLCJyZXBsYWNlIiwiamUiLCJLaSIsIk5lIiwiUWkiLCJJZSIsIkxlIiwiTWUiLCJEZSIsInByb3BDb3VudCIsInFpIiwiWmkiLCJZaSIsImdldENvbXB1dGVkU3R5bGUiLCJHaSIsIlBlIiwiWGkiLCJXaSIsImhhc1RyYW5zZm9ybSIsInRvIiwiRmUiLCJOdW1iZXIiLCJSZSIsIl9sZWF2ZUNiIiwiY2FuY2VsbGVkIiwidHJhbnNpdGlvbiIsIl9lbnRlckNiIiwibm9kZVR5cGUiLCJlbnRlckNsYXNzIiwiZW50ZXJUb0NsYXNzIiwiZW50ZXJBY3RpdmVDbGFzcyIsImFwcGVhckNsYXNzIiwiYXBwZWFyVG9DbGFzcyIsImFwcGVhckFjdGl2ZUNsYXNzIiwiYmVmb3JlRW50ZXIiLCJlbnRlciIsImFmdGVyRW50ZXIiLCJlbnRlckNhbmNlbGxlZCIsImJlZm9yZUFwcGVhciIsImFwcGVhciIsImFmdGVyQXBwZWFyIiwiYXBwZWFyQ2FuY2VsbGVkIiwiZHVyYXRpb24iLCJQciIsImlzUm9vdEluc2VydCIsIlVlIiwic2hvdyIsIl9wZW5kaW5nIiwiQmUiLCJIZSIsImxlYXZlQ2xhc3MiLCJsZWF2ZVRvQ2xhc3MiLCJsZWF2ZUFjdGl2ZUNsYXNzIiwiYmVmb3JlTGVhdmUiLCJsZWF2ZSIsImFmdGVyTGVhdmUiLCJsZWF2ZUNhbmNlbGxlZCIsImRlbGF5TGVhdmUiLCJWZSIsInplIiwiS2UiLCJtdWx0aXBsZSIsInFlIiwic2VsZWN0ZWQiLCJzZWxlY3RlZEluZGV4IiwiSmUiLCJXZSIsIkdlIiwiWmUiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJYZSIsIlllIiwiUWUiLCJfcGFyZW50TGlzdGVuZXJzIiwidG4iLCJlbiIsIl9tb3ZlQ2IiLCJubiIsIm5ld1BvcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInJuIiwicG9zIiwibGVmdCIsInRvcCIsIm1vdmVkIiwiV2Via2l0VHJhbnNmb3JtIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiem8iLCJWbyIsIlVvIiwiYW4iLCJzbiIsInByZSIsIkxvIiwiSW8iLCJUbyIsIndhcm4iLCJpc1ByZVRhZyIsIkJuIiwiTW8iLCJEbyIsImpvIiwiTm8iLCJFbyIsImRlbGltaXRlcnMiLCJwcmVzZXJ2ZVdoaXRlc3BhY2UiLCJzdWJzdHJpbmciLCJsb3dlckNhc2VkVGFnIiwiZW5kIiwic3RhcnQiLCJleHBlY3RIVE1MIiwiaXNVbmFyeVRhZyIsImNhbkJlTGVmdE9wZW5UYWciLCJIbyIsIkJvIiwiUmVnRXhwIiwiSm8iLCJjaGFycyIsIkFvIiwic2hvdWxkS2VlcENvbW1lbnQiLCJjb21tZW50IiwiT28iLCJrbyIsInhvIiwiQ28iLCJ3byIsInVuYXJ5U2xhc2giLCJnbyIsIlNvIiwic2hvdWxkRGVjb2RlTmV3bGluZXNGb3JIcmVmIiwic2hvdWxkRGVjb2RlTmV3bGluZXMiLCJjb21tZW50cyIsIm5hIiwicmEiLCJmb3JiaWRkZW4iLCJwcm9jZXNzZWQiLCJ1biIsImlmIiwibG4iLCJibG9jayIsImVsc2UiLCJlbHNlaWYiLCJjbiIsInBvcCIsInNsb3RTY29wZSIsInNsb3RUYXJnZXQiLCJwbGFjZWhvbGRlciIsImVhIiwiZm8iLCJ1byIsImxhc3RJbmRleCIsImV4ZWMiLCJAYmluZGluZyIsInRva2VucyIsImZvciIsInNsb3ROYW1lIiwiaW5saW5lVGVtcGxhdGUiLCJXbyIsImhhc0JpbmRpbmdzIiwidGEiLCJRbyIsImNhbWVsIiwic3luYyIsInFvIiwiWW8iLCJHbyIsIlhvIiwiWm8iLCJhbGlhcyIsIml0ZXJhdG9yMSIsIml0ZXJhdG9yMiIsImlmQ29uZGl0aW9ucyIsInBuIiwic3RhdGljIiwiSW4iLCJGbyIsIlBvIiwiZG4iLCJzdGF0aWNJbkZvciIsInN0YXRpY1Jvb3QiLCJ2biIsImhuIiwiY2EiLCJzYSIsImZhIiwidWEiLCJsYSIsIm1uIiwicGFyc2VJbnQiLCJ5biIsImRhIiwiZ24iLCJzdGF0aWNQcm9jZXNzZWQiLCJvbmNlUHJvY2Vzc2VkIiwiYm4iLCJmb3JQcm9jZXNzZWQiLCJpZlByb2Nlc3NlZCIsIiRuIiwia24iLCJ3biIsInRyYW5zZm9ybXMiLCJvbmNlSWQiLCJDbiIsImRhdGFHZW5GbnMiLCJPbiIsInhuIiwid3JhcERhdGEiLCJ3cmFwTGlzdGVuZXJzIiwiQW4iLCJzb21lIiwibWF5YmVDb21wb25lbnQiLCJTbiIsIlRuIiwiZXJyIiwiY29kZSIsIkVuIiwiUm8iLCJpbm5lckhUTUwiLCJmcmVlemUiLCJEbiIsInRvVXBwZXJDYXNlIiwiUm4iLCJWbiIsIktuIiwib3B0aW9uTWVyZ2VTdHJhdGVnaWVzIiwic2lsZW50IiwicHJvZHVjdGlvblRpcCIsInBlcmZvcm1hbmNlIiwid2FybkhhbmRsZXIiLCJpZ25vcmVkRWxlbWVudHMiLCJpc1Jlc2VydmVkQXR0ciIsImlzVW5rbm93bkVsZW1lbnQiLCJfbGlmZWN5Y2xlSG9va3MiLCJxbiIsIlduIiwiV1hFbnZpcm9ubWVudCIsInBsYXRmb3JtIiwiWG4iLCJZbiIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5yIiwicnIiLCJhciIsInNyIiwiY3IiLCJwcm9jZXNzIiwiZW52IiwiVlVFX0VOViIsIl9fVlVFX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJTZXQiLCJwciIsImRyIiwic3VicyIsImFkZFN1YiIsInJlbW92ZVN1YiIsImFkZERlcCIsImhyIiwicmF3IiwieXIiLCJjaGlsZCIsImRlZmluZVByb3BlcnRpZXMiLCJfciIsImJyIiwib2JzZXJ2ZUFycmF5IiwiJHIiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwid2FsayIsInByb3ZpZGUiLCJNZXNzYWdlQ2hhbm5lbCIsImpyIiwiTnIiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJJciIsInJlc29sdmUiLCJ6ciIsImRlZXAiLCJ1c2VyIiwiY2IiLCJhY3RpdmUiLCJkZXBzIiwibmV3RGVwcyIsImRlcElkcyIsIm5ld0RlcElkcyIsImNsZWFudXBEZXBzIiwidGVhcmRvd24iLCJfaXNCZWluZ0Rlc3Ryb3llZCIsImluaXQiLCJfaXNEZXN0cm95ZWQiLCJfaXNDb21wb25lbnQiLCJfcGFyZW50Vm5vZGUiLCJfcGFyZW50RWxtIiwiX3JlZkVsbSIsIiRtb3VudCIsImtlZXBBbGl2ZSIsInByZXBhdGNoIiwiX3JlbmRlckNoaWxkcmVuIiwiJGF0dHJzIiwiJGxpc3RlbmVycyIsImluc2VydCIsImRlc3Ryb3kiLCJZciIsIl91aWQiLCJfY29tcG9uZW50VGFnIiwiX3NlbGYiLCIkcm9vdCIsIl9ldmVudHMiLCIkc2V0IiwiJGRlbGV0ZSIsImltbWVkaWF0ZSIsIl91cGRhdGUiLCIkZWwiLCJfX3BhdGNoX18iLCJfX3Z1ZV9fIiwiJG5leHRUaWNrIiwiX3JlbmRlciIsIlFyIiwidGkiLCJLZWVwQWxpdmUiLCJpbmNsdWRlIiwiZXhjbHVkZSIsImNyZWF0ZWQiLCJkZXN0cm95ZWQiLCJ1dGlsIiwibWVyZ2VPcHRpb25zIiwiZGVmaW5lUmVhY3RpdmUiLCJkZWxldGUiLCJuZXh0VGljayIsIl9pbnN0YWxsZWRQbHVnaW5zIiwiaW5zdGFsbCIsInNzckNvbnRleHQiLCJ2ZXJzaW9uIiwiY2kiLCJ1aSIsImxpIiwiZmkiLCJnaSIsInN2ZyIsIm1hdGgiLCIkaSIsIkNpIiwieGkiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVDb21tZW50Iiwic2V0VGV4dENvbnRlbnQiLCJ0ZXh0Q29udGVudCIsImtpIiwiT2kiLCJTaSIsIkVpIiwiamkiLCJOaSIsIkRpIiwiUGkiLCJSaSIsIkhpIiwic2V0UHJvcGVydHkiLCJWaSIsIlVpIiwiemkiLCJKaSIsIm9udHJhbnNpdGlvbmVuZCIsIm9ud2Via2l0dHJhbnNpdGlvbmVuZCIsIm9uYW5pbWF0aW9uZW5kIiwib253ZWJraXRhbmltYXRpb25lbmQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJlbyIsImFjdGl2YXRlIiwicGVuZGluZ0luc2VydCIsInBvc3RwYXRjaCIsImhhc0NoaWxkTm9kZXMiLCJub2RlT3BzIiwiaGFzQXR0cmlidXRlIiwidm1vZGVsIiwibm8iLCJfdk9wdGlvbnMiLCJybyIsIl9fdk9yaWdpbmFsRGlzcGxheSIsImRpc3BsYXkiLCJ1bmJpbmQiLCJpbyIsIm1vZGUiLCJvbyIsIl9sZWF2aW5nIiwiYW8iLCJtb3ZlQ2xhc3MiLCJzbyIsIlRyYW5zaXRpb24iLCJUcmFuc2l0aW9uR3JvdXAiLCJwcmV2Q2hpbGRyZW4iLCJrZXB0IiwicmVtb3ZlZCIsImJlZm9yZVVwZGF0ZSIsInVwZGF0ZWQiLCJoYXNNb3ZlIiwiX3JlZmxvdyIsImJvZHkiLCJvZmZzZXRIZWlnaHQiLCJwcm9wZXJ0eU5hbWUiLCJfaGFzTW92ZSIsImNsb25lTm9kZSIsImNvbmZpZyIsIkhUTUxVbmtub3duRWxlbWVudCIsIkhUTUxFbGVtZW50IiwiY28iLCJsbyIsInBvIiwic3RhdGljS2V5cyIsInRyYW5zZm9ybU5vZGUiLCJjbGFzc0JpbmRpbmciLCJnZW5EYXRhIiwidm8iLCJzdHlsZUJpbmRpbmciLCJobyIsIm1vIiwieW8iLCJibyIsIiRvIiwiJmx0OyIsIiZndDsiLCImcXVvdDsiLCImYW1wOyIsIiYjMTA7IiwiJiM5OyIsIktvIiwiaWEiLCJwcmVUcmFuc2Zvcm1Ob2RlIiwib2EiLCJodG1sIiwicmVkdWNlIiwiYWEiLCJlc2MiLCJ0YWIiLCJzcGFjZSIsInVwIiwiZG93biIsInN0b3AiLCJwcmV2ZW50Iiwic2VsZiIsImN0cmwiLCJhbHQiLCJtZXRhIiwicGEiLCJjbG9hayIsInZhIiwiZXJyb3JzIiwidGlwcyIsImNvbXBpbGUiLCJjb21waWxlVG9GdW5jdGlvbnMiLCJvcHRpbWl6ZSIsImFzdCIsImhhIiwibWEiLCJ5YSIsImdhIiwiZG9jdW1lbnRFbGVtZW50IiwidGVtcGxhdGUiLCJvdXRlckhUTUwiLCJUaW1lb3V0IiwiY2xlYXJGbiIsIl9pZCIsIl9jbGVhckZuIiwiY2xlYXJUaW1lb3V0Iiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiY2xvc2UiLCJ1bnJlZiIsImVucm9sbCIsIm1zZWNzIiwiX2lkbGVUaW1lb3V0SWQiLCJfaWRsZVRpbWVvdXQiLCJ1bmVucm9sbCIsIl91bnJlZkFjdGl2ZSIsIl9vblRpbWVvdXQiLCJjbGVhckltbWVkaWF0ZSIsImFyZ3MiLCJ0YXNrIiwidGFza3NCeUhhbmRsZSIsIm5leHRIYW5kbGUiLCJyZWdpc3RlckltbWVkaWF0ZSIsImhhbmRsZSIsInJ1bklmUHJlc2VudCIsImN1cnJlbnRseVJ1bm5pbmdBVGFzayIsImRvYyIsImF0dGFjaFRvIiwiZ2V0UHJvdG90eXBlT2YiLCJpbXBvcnRTY3JpcHRzIiwicG9zdE1lc3NhZ2VJc0FzeW5jaHJvbm91cyIsIm9sZE9uTWVzc2FnZSIsIm1lc3NhZ2VQcmVmaXgiLCJyYW5kb20iLCJvbkdsb2JhbE1lc3NhZ2UiLCJhdHRhY2hFdmVudCIsImNoYW5uZWwiLCJzY3JpcHQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjYWNoZWRTZXRUaW1lb3V0IiwicnVuQ2xlYXJUaW1lb3V0IiwibWFya2VyIiwiY2FjaGVkQ2xlYXJUaW1lb3V0IiwiY2xlYW5VcE5leHRUaWNrIiwiZHJhaW5pbmciLCJjdXJyZW50UXVldWUiLCJxdWV1ZSIsInF1ZXVlSW5kZXgiLCJkcmFpblF1ZXVlIiwibGVuIiwiSXRlbSIsImFycmF5Iiwibm9vcCIsInRpdGxlIiwiYnJvd3NlciIsImFyZ3YiLCJ2ZXJzaW9ucyIsImFkZExpc3RlbmVyIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJsb2dpbiIsImxvZ2luLSIsImhtciIsImxvY2FscyIsIm5hbWVzIiwibWFwcGluZ3MiLCJmaWxlIiwic291cmNlc0NvbnRlbnQiLCJsb2NhdGlvbiIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJuZXdVcmwiLCJpbnB1dCIsImJ1dHRvbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJpbnZhbGlkX2lucHV0c19saXN0Iiwic3VibWl0X2J1dHRvbl9pc19jbGlja2VkIiwiY2xpY2siLCJsb2ciLCJ1cGRhdGVJbnB1dERhdGEiLCJ1cGRhdGVJbnZhbGlkSW5wdXRzTGlzdCIsImlucHV0X2RhdGFfbmFtZSIsImluY2x1ZGVzIiwiaW5wdXQtIiwiYnV0dG9uLSIsImlucHV0X21zZyIsImlzX2ZvY3VzZWQiLCJjaGVja0lucHV0Iiwic3VibWl0QnV0dG9uSXNDbGlja2VkIiwibGFiZWxMb2NhdGlvblVwIiwib25Gb2N1cyIsIm9uSW5wdXQiLCJvbkJsdXIiLCJzaWxlbnRfZXJyb3IiLCJyZWdleCIsInJlZ2V4RXJyb3IiLCJpbnB1dERhdGFOYW1lIiwib25DbGljayJdLCJtYXBwaW5ncyI6IkNBQVMsU0FBVUEsR0NJbkIsUUFBQUMsR0FBQUMsR0FHQSxHQUFBQyxFQUFBRCxHQUNBLE1BQUFDLEdBQUFELEdBQUFFLE9BR0EsSUFBQUMsR0FBQUYsRUFBQUQsSUFDQUksRUFBQUosRUFDQUssR0FBQSxFQUNBSCxXQVVBLE9BTkFKLEdBQUFFLEdBQUFNLEtBQUFILEVBQUFELFFBQUFDLElBQUFELFFBQUFILEdBR0FJ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bnRlbnQiOlsiLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4vKioqKioqLyBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbi8qKioqKiovIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4vKioqKioqLyBcdFx0XHRpOiBtb2R1bGVJZCxcbi8qKioqKiovIFx0XHRcdGw6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge31cbi8qKioqKiovIFx0XHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbi8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuLyoqKioqKi8gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbi8qKioqKiovIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4vKioqKioqLyBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwge1xuLyoqKioqKi8gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuLyoqKioqKi8gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuLyoqKioqKi8gXHRcdFx0XHRnZXQ6IGdldHRlclxuLyoqKioqKi8gXHRcdFx0fSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4vKioqKioqLyBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuLyoqKioqKi8gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbi8qKioqKiovIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4vKioqKioqLyBcdFx0cmV0dXJuIGdldHRlcjtcbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDMpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoW1xuLyogMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuLyoqKi8gfSksXG4vKiAxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbihzZWxlY3Rvcikge1xuXHRcdGlmICh0eXBlb2YgbWVtb1tzZWxlY3Rvcl0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGZuLmNhbGwodGhpcywgc2VsZWN0b3IpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmIChzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bc2VsZWN0b3JdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3NlbGVjdG9yXVxuXHR9O1xufSkoZnVuY3Rpb24gKHRhcmdldCkge1xuXHRyZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpXG59KTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IF9fd2VicGFja19yZXF1aXJlX18oMTEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG5cdGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvICsgXCIgXCIgKyBvcHRpb25zLmluc2VydEF0LmJlZm9yZSk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG5cblxuLyoqKi8gfSksXG4vKiAyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbnZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG4vKioqLyB9KSxcbi8qIDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxudmFyIFZ1ZSA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG52YXIgYXBwID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcblxudmFyIHZ1ZV9lbmdpbmUgPSBuZXcgVnVlKGFwcCk7XG5cbm1vZHVsZS5leHBvcnRzID0gdnVlX2VuZ2luZTtcblxuLyoqKi8gfSksXG4vKiA0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqLyhmdW5jdGlvbihnbG9iYWwsIHNldEltbWVkaWF0ZSkgey8qIVxuICogVnVlLmpzIHYyLjUuMTNcbiAqIChjKSAyMDE0LTIwMTcgRXZhbiBZb3VcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuIWZ1bmN0aW9uKHQsZSl7IHRydWU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6dC5WdWU9ZSgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdCh0KXtyZXR1cm4gdm9pZCAwPT09dHx8bnVsbD09PXR9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdm9pZCAwIT09dCYmbnVsbCE9PXR9ZnVuY3Rpb24gbih0KXtyZXR1cm4hMD09PXR9ZnVuY3Rpb24gcih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdHx8XCJudW1iZXJcIj09dHlwZW9mIHR8fFwic3ltYm9sXCI9PXR5cGVvZiB0fHxcImJvb2xlYW5cIj09dHlwZW9mIHR9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gbnVsbCE9PXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0fWZ1bmN0aW9uIG8odCl7cmV0dXJuXCJbb2JqZWN0IE9iamVjdF1cIj09PU5uLmNhbGwodCl9ZnVuY3Rpb24gYSh0KXt2YXIgZT1wYXJzZUZsb2F0KFN0cmluZyh0KSk7cmV0dXJuIGU+PTAmJk1hdGguZmxvb3IoZSk9PT1lJiZpc0Zpbml0ZSh0KX1mdW5jdGlvbiBzKHQpe3JldHVybiBudWxsPT10P1wiXCI6XCJvYmplY3RcIj09dHlwZW9mIHQ/SlNPTi5zdHJpbmdpZnkodCxudWxsLDIpOlN0cmluZyh0KX1mdW5jdGlvbiBjKHQpe3ZhciBlPXBhcnNlRmxvYXQodCk7cmV0dXJuIGlzTmFOKGUpP3Q6ZX1mdW5jdGlvbiB1KHQsZSl7Zm9yKHZhciBuPU9iamVjdC5jcmVhdGUobnVsbCkscj10LnNwbGl0KFwiLFwiKSxpPTA7aTxyLmxlbmd0aDtpKyspbltyW2ldXT0hMDtyZXR1cm4gZT9mdW5jdGlvbih0KXtyZXR1cm4gblt0LnRvTG93ZXJDYXNlKCldfTpmdW5jdGlvbih0KXtyZXR1cm4gblt0XX19ZnVuY3Rpb24gbCh0LGUpe2lmKHQubGVuZ3RoKXt2YXIgbj10LmluZGV4T2YoZSk7aWYobj4tMSlyZXR1cm4gdC5zcGxpY2UobiwxKX19ZnVuY3Rpb24gZih0LGUpe3JldHVybiBNbi5jYWxsKHQsZSl9ZnVuY3Rpb24gcCh0KXt2YXIgZT1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gZVtuXXx8KGVbbl09dChuKSl9fWZ1bmN0aW9uIGQodCxlKXtmdW5jdGlvbiBuKG4pe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg7cmV0dXJuIHI/cj4xP3QuYXBwbHkoZSxhcmd1bWVudHMpOnQuY2FsbChlLG4pOnQuY2FsbChlKX1yZXR1cm4gbi5fbGVuZ3RoPXQubGVuZ3RoLG59ZnVuY3Rpb24gdih0LGUpe2U9ZXx8MDtmb3IodmFyIG49dC5sZW5ndGgtZSxyPW5ldyBBcnJheShuKTtuLS07KXJbbl09dFtuK2VdO3JldHVybiByfWZ1bmN0aW9uIGgodCxlKXtmb3IodmFyIG4gaW4gZSl0W25dPWVbbl07cmV0dXJuIHR9ZnVuY3Rpb24gbSh0KXtmb3IodmFyIGU9e30sbj0wO248dC5sZW5ndGg7bisrKXRbbl0mJmgoZSx0W25dKTtyZXR1cm4gZX1mdW5jdGlvbiB5KHQsZSxuKXt9ZnVuY3Rpb24gZyh0LGUpe2lmKHQ9PT1lKXJldHVybiEwO3ZhciBuPWkodCkscj1pKGUpO2lmKCFufHwhcilyZXR1cm4hbiYmIXImJlN0cmluZyh0KT09PVN0cmluZyhlKTt0cnl7dmFyIG89QXJyYXkuaXNBcnJheSh0KSxhPUFycmF5LmlzQXJyYXkoZSk7aWYobyYmYSlyZXR1cm4gdC5sZW5ndGg9PT1lLmxlbmd0aCYmdC5ldmVyeShmdW5jdGlvbih0LG4pe3JldHVybiBnKHQsZVtuXSl9KTtpZihvfHxhKXJldHVybiExO3ZhciBzPU9iamVjdC5rZXlzKHQpLGM9T2JqZWN0LmtleXMoZSk7cmV0dXJuIHMubGVuZ3RoPT09Yy5sZW5ndGgmJnMuZXZlcnkoZnVuY3Rpb24obil7cmV0dXJuIGcodFtuXSxlW25dKX0pfWNhdGNoKHQpe3JldHVybiExfX1mdW5jdGlvbiBfKHQsZSl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspaWYoZyh0W25dLGUpKXJldHVybiBuO3JldHVybi0xfWZ1bmN0aW9uIGIodCl7dmFyIGU9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7ZXx8KGU9ITAsdC5hcHBseSh0aGlzLGFyZ3VtZW50cykpfX1mdW5jdGlvbiAkKHQpe3ZhciBlPSh0K1wiXCIpLmNoYXJDb2RlQXQoMCk7cmV0dXJuIDM2PT09ZXx8OTU9PT1lfWZ1bmN0aW9uIEModCxlLG4scil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEhcix3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9KX1mdW5jdGlvbiB3KHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJi9uYXRpdmUgY29kZS8udGVzdCh0LnRvU3RyaW5nKCkpfWZ1bmN0aW9uIHgodCl7cmV0dXJuIG5ldyBtcih2b2lkIDAsdm9pZCAwLHZvaWQgMCxTdHJpbmcodCkpfWZ1bmN0aW9uIGsodCxlKXt2YXIgbj10LmNvbXBvbmVudE9wdGlvbnMscj1uZXcgbXIodC50YWcsdC5kYXRhLHQuY2hpbGRyZW4sdC50ZXh0LHQuZWxtLHQuY29udGV4dCxuLHQuYXN5bmNGYWN0b3J5KTtyZXR1cm4gci5ucz10Lm5zLHIuaXNTdGF0aWM9dC5pc1N0YXRpYyxyLmtleT10LmtleSxyLmlzQ29tbWVudD10LmlzQ29tbWVudCxyLmZuQ29udGV4dD10LmZuQ29udGV4dCxyLmZuT3B0aW9ucz10LmZuT3B0aW9ucyxyLmZuU2NvcGVJZD10LmZuU2NvcGVJZCxyLmlzQ2xvbmVkPSEwLGUmJih0LmNoaWxkcmVuJiYoci5jaGlsZHJlbj1BKHQuY2hpbGRyZW4sITApKSxuJiZuLmNoaWxkcmVuJiYobi5jaGlsZHJlbj1BKG4uY2hpbGRyZW4sITApKSkscn1mdW5jdGlvbiBBKHQsZSl7Zm9yKHZhciBuPXQubGVuZ3RoLHI9bmV3IEFycmF5KG4pLGk9MDtpPG47aSsrKXJbaV09ayh0W2ldLGUpO3JldHVybiByfWZ1bmN0aW9uIE8odCxlLG4pe3QuX19wcm90b19fPWV9ZnVuY3Rpb24gUyh0LGUsbil7Zm9yKHZhciByPTAsaT1uLmxlbmd0aDtyPGk7cisrKXt2YXIgbz1uW3JdO0ModCxvLGVbb10pfX1mdW5jdGlvbiBUKHQsZSl7aWYoaSh0KSYmISh0IGluc3RhbmNlb2YgbXIpKXt2YXIgbjtyZXR1cm4gZih0LFwiX19vYl9fXCIpJiZ0Ll9fb2JfXyBpbnN0YW5jZW9mIHdyP249dC5fX29iX186Q3Iuc2hvdWxkQ29udmVydCYmIXVyKCkmJihBcnJheS5pc0FycmF5KHQpfHxvKHQpKSYmT2JqZWN0LmlzRXh0ZW5zaWJsZSh0KSYmIXQuX2lzVnVlJiYobj1uZXcgd3IodCkpLGUmJm4mJm4udm1Db3VudCsrLG59fWZ1bmN0aW9uIEUodCxlLG4scixpKXt2YXIgbz1uZXcgdnIsYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsZSk7aWYoIWF8fCExIT09YS5jb25maWd1cmFibGUpe3ZhciBzPWEmJmEuZ2V0LGM9YSYmYS5zZXQsdT0haSYmVChuKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXt2YXIgZT1zP3MuY2FsbCh0KTpuO3JldHVybiB2ci50YXJnZXQmJihvLmRlcGVuZCgpLHUmJih1LmRlcC5kZXBlbmQoKSxBcnJheS5pc0FycmF5KGUpJiZJKGUpKSksZX0sc2V0OmZ1bmN0aW9uKGUpe3ZhciByPXM/cy5jYWxsKHQpOm47ZT09PXJ8fGUhPWUmJnIhPXJ8fChjP2MuY2FsbCh0LGUpOm49ZSx1PSFpJiZUKGUpLG8ubm90aWZ5KCkpfX0pfX1mdW5jdGlvbiBqKHQsZSxuKXtpZihBcnJheS5pc0FycmF5KHQpJiZhKGUpKXJldHVybiB0Lmxlbmd0aD1NYXRoLm1heCh0Lmxlbmd0aCxlKSx0LnNwbGljZShlLDEsbiksbjtpZihlIGluIHQmJiEoZSBpbiBPYmplY3QucHJvdG90eXBlKSlyZXR1cm4gdFtlXT1uLG47dmFyIHI9dC5fX29iX187cmV0dXJuIHQuX2lzVnVlfHxyJiZyLnZtQ291bnQ/bjpyPyhFKHIudmFsdWUsZSxuKSxyLmRlcC5ub3RpZnkoKSxuKToodFtlXT1uLG4pfWZ1bmN0aW9uIE4odCxlKXtpZihBcnJheS5pc0FycmF5KHQpJiZhKGUpKXQuc3BsaWNlKGUsMSk7ZWxzZXt2YXIgbj10Ll9fb2JfXzt0Ll9pc1Z1ZXx8biYmbi52bUNvdW50fHxmKHQsZSkmJihkZWxldGUgdFtlXSxuJiZuLmRlcC5ub3RpZnkoKSl9fWZ1bmN0aW9uIEkodCl7Zm9yKHZhciBlPXZvaWQgMCxuPTAscj10Lmxlbmd0aDtuPHI7bisrKShlPXRbbl0pJiZlLl9fb2JfXyYmZS5fX29iX18uZGVwLmRlcGVuZCgpLEFycmF5LmlzQXJyYXkoZSkmJkkoZSl9ZnVuY3Rpb24gTCh0LGUpe2lmKCFlKXJldHVybiB0O2Zvcih2YXIgbixyLGksYT1PYmplY3Qua2V5cyhlKSxzPTA7czxhLmxlbmd0aDtzKyspcj10W249YVtzXV0saT1lW25dLGYodCxuKT9vKHIpJiZvKGkpJiZMKHIsaSk6aih0LG4saSk7cmV0dXJuIHR9ZnVuY3Rpb24gTSh0LGUsbil7cmV0dXJuIG4/ZnVuY3Rpb24oKXt2YXIgcj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UuY2FsbChuLG4pOmUsaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3QuY2FsbChuLG4pOnQ7cmV0dXJuIHI/TChyLGkpOml9OmU/dD9mdW5jdGlvbigpe3JldHVybiBMKFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZS5jYWxsKHRoaXMsdGhpcyk6ZSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3QuY2FsbCh0aGlzLHRoaXMpOnQpfTplOnR9ZnVuY3Rpb24gRCh0LGUpe3JldHVybiBlP3Q/dC5jb25jYXQoZSk6QXJyYXkuaXNBcnJheShlKT9lOltlXTp0fWZ1bmN0aW9uIFAodCxlLG4scil7dmFyIGk9T2JqZWN0LmNyZWF0ZSh0fHxudWxsKTtyZXR1cm4gZT9oKGksZSk6aX1mdW5jdGlvbiBGKHQsZSxuKXtmdW5jdGlvbiByKHIpe3ZhciBpPXhyW3JdfHxPcjt1W3JdPWkodFtyXSxlW3JdLG4scil9XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKGU9ZS5vcHRpb25zKSxmdW5jdGlvbih0LGUpe3ZhciBuPXQucHJvcHM7aWYobil7dmFyIHIsaSxhPXt9O2lmKEFycmF5LmlzQXJyYXkobikpZm9yKHI9bi5sZW5ndGg7ci0tOylcInN0cmluZ1wiPT10eXBlb2YoaT1uW3JdKSYmKGFbUG4oaSldPXt0eXBlOm51bGx9KTtlbHNlIGlmKG8obikpZm9yKHZhciBzIGluIG4paT1uW3NdLGFbUG4ocyldPW8oaSk/aTp7dHlwZTppfTt0LnByb3BzPWF9fShlKSxmdW5jdGlvbih0LGUpe3ZhciBuPXQuaW5qZWN0O2lmKG4pe3ZhciByPXQuaW5qZWN0PXt9O2lmKEFycmF5LmlzQXJyYXkobikpZm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspcltuW2ldXT17ZnJvbTpuW2ldfTtlbHNlIGlmKG8obikpZm9yKHZhciBhIGluIG4pe3ZhciBzPW5bYV07clthXT1vKHMpP2goe2Zyb206YX0scyk6e2Zyb206c319fX0oZSksZnVuY3Rpb24odCl7dmFyIGU9dC5kaXJlY3RpdmVzO2lmKGUpZm9yKHZhciBuIGluIGUpe3ZhciByPWVbbl07XCJmdW5jdGlvblwiPT10eXBlb2YgciYmKGVbbl09e2JpbmQ6cix1cGRhdGU6cn0pfX0oZSk7dmFyIGk9ZS5leHRlbmRzO2lmKGkmJih0PUYodCxpLG4pKSxlLm1peGlucylmb3IodmFyIGE9MCxzPWUubWl4aW5zLmxlbmd0aDthPHM7YSsrKXQ9Rih0LGUubWl4aW5zW2FdLG4pO3ZhciBjLHU9e307Zm9yKGMgaW4gdClyKGMpO2ZvcihjIGluIGUpZih0LGMpfHxyKGMpO3JldHVybiB1fWZ1bmN0aW9uIFIodCxlLG4scil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pe3ZhciBpPXRbZV07aWYoZihpLG4pKXJldHVybiBpW25dO3ZhciBvPVBuKG4pO2lmKGYoaSxvKSlyZXR1cm4gaVtvXTt2YXIgYT1GbihvKTtpZihmKGksYSkpcmV0dXJuIGlbYV07cmV0dXJuIGlbbl18fGlbb118fGlbYV19fWZ1bmN0aW9uIEgodCxlLG4scil7dmFyIGk9ZVt0XSxvPSFmKG4sdCksYT1uW3RdO2lmKFUoQm9vbGVhbixpLnR5cGUpJiYobyYmIWYoaSxcImRlZmF1bHRcIik/YT0hMTpVKFN0cmluZyxpLnR5cGUpfHxcIlwiIT09YSYmYSE9PUhuKHQpfHwoYT0hMCkpLHZvaWQgMD09PWEpe2E9ZnVuY3Rpb24odCxlLG4pe2lmKCFmKGUsXCJkZWZhdWx0XCIpKXJldHVybjt2YXIgcj1lLmRlZmF1bHQ7aWYodCYmdC4kb3B0aW9ucy5wcm9wc0RhdGEmJnZvaWQgMD09PXQuJG9wdGlvbnMucHJvcHNEYXRhW25dJiZ2b2lkIDAhPT10Ll9wcm9wc1tuXSlyZXR1cm4gdC5fcHJvcHNbbl07cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgciYmXCJGdW5jdGlvblwiIT09QihlLnR5cGUpP3IuY2FsbCh0KTpyfShyLGksdCk7dmFyIHM9Q3Iuc2hvdWxkQ29udmVydDtDci5zaG91bGRDb252ZXJ0PSEwLFQoYSksQ3Iuc2hvdWxkQ29udmVydD1zfXJldHVybiBhfWZ1bmN0aW9uIEIodCl7dmFyIGU9dCYmdC50b1N0cmluZygpLm1hdGNoKC9eXFxzKmZ1bmN0aW9uIChcXHcrKS8pO3JldHVybiBlP2VbMV06XCJcIn1mdW5jdGlvbiBVKHQsZSl7aWYoIUFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIEIoZSk9PT1CKHQpO2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGg7bjxyO24rKylpZihCKGVbbl0pPT09Qih0KSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBWKHQsZSxuKXtpZihlKWZvcih2YXIgcj1lO3I9ci4kcGFyZW50Oyl7dmFyIGk9ci4kb3B0aW9ucy5lcnJvckNhcHR1cmVkO2lmKGkpZm9yKHZhciBvPTA7bzxpLmxlbmd0aDtvKyspdHJ5e2lmKCExPT09aVtvXS5jYWxsKHIsdCxlLG4pKXJldHVybn1jYXRjaCh0KXt6KHQscixcImVycm9yQ2FwdHVyZWQgaG9va1wiKX19eih0LGUsbil9ZnVuY3Rpb24geih0LGUsbil7aWYoSm4uZXJyb3JIYW5kbGVyKXRyeXtyZXR1cm4gSm4uZXJyb3JIYW5kbGVyLmNhbGwobnVsbCx0LGUsbil9Y2F0Y2godCl7Syh0LG51bGwsXCJjb25maWcuZXJyb3JIYW5kbGVyXCIpfUsodCxlLG4pfWZ1bmN0aW9uIEsodCxlLG4pe2lmKCFHbiYmIVpufHxcInVuZGVmaW5lZFwiPT10eXBlb2YgY29uc29sZSl0aHJvdyB0O2NvbnNvbGUuZXJyb3IodCl9ZnVuY3Rpb24gSigpe1RyPSExO3ZhciB0PVNyLnNsaWNlKDApO1NyLmxlbmd0aD0wO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV0oKX1mdW5jdGlvbiBxKHQsZSl7dmFyIG47aWYoU3IucHVzaChmdW5jdGlvbigpe2lmKHQpdHJ5e3QuY2FsbChlKX1jYXRjaCh0KXtWKHQsZSxcIm5leHRUaWNrXCIpfWVsc2UgbiYmbihlKX0pLFRyfHwoVHI9ITAsRXI/QXIoKTprcigpKSwhdCYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UpcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe249dH0pfWZ1bmN0aW9uIFcodCl7Ryh0LE1yKSxNci5jbGVhcigpfWZ1bmN0aW9uIEcodCxlKXt2YXIgbixyLG89QXJyYXkuaXNBcnJheSh0KTtpZigob3x8aSh0KSkmJiFPYmplY3QuaXNGcm96ZW4odCkpe2lmKHQuX19vYl9fKXt2YXIgYT10Ll9fb2JfXy5kZXAuaWQ7aWYoZS5oYXMoYSkpcmV0dXJuO2UuYWRkKGEpfWlmKG8pZm9yKG49dC5sZW5ndGg7bi0tOylHKHRbbl0sZSk7ZWxzZSBmb3Iobj0ocj1PYmplY3Qua2V5cyh0KSkubGVuZ3RoO24tLTspRyh0W3Jbbl1dLGUpfX1mdW5jdGlvbiBaKHQpe2Z1bmN0aW9uIGUoKXt2YXIgdD1hcmd1bWVudHMsbj1lLmZucztpZighQXJyYXkuaXNBcnJheShuKSlyZXR1cm4gbi5hcHBseShudWxsLGFyZ3VtZW50cyk7Zm9yKHZhciByPW4uc2xpY2UoKSxpPTA7aTxyLmxlbmd0aDtpKyspcltpXS5hcHBseShudWxsLHQpfXJldHVybiBlLmZucz10LGV9ZnVuY3Rpb24gWChlLG4scixpLG8pe3ZhciBhLHMsYyx1O2ZvcihhIGluIGUpcz1lW2FdLGM9blthXSx1PURyKGEpLHQocyl8fCh0KGMpPyh0KHMuZm5zKSYmKHM9ZVthXT1aKHMpKSxyKHUubmFtZSxzLHUub25jZSx1LmNhcHR1cmUsdS5wYXNzaXZlLHUucGFyYW1zKSk6cyE9PWMmJihjLmZucz1zLGVbYV09YykpO2ZvcihhIGluIG4pdChlW2FdKSYmaSgodT1EcihhKSkubmFtZSxuW2FdLHUuY2FwdHVyZSl9ZnVuY3Rpb24gWShyLGksbyl7ZnVuY3Rpb24gYSgpe28uYXBwbHkodGhpcyxhcmd1bWVudHMpLGwocy5mbnMsYSl9ciBpbnN0YW5jZW9mIG1yJiYocj1yLmRhdGEuaG9va3x8KHIuZGF0YS5ob29rPXt9KSk7dmFyIHMsYz1yW2ldO3QoYyk/cz1aKFthXSk6ZShjLmZucykmJm4oYy5tZXJnZWQpPyhzPWMpLmZucy5wdXNoKGEpOnM9WihbYyxhXSkscy5tZXJnZWQ9ITAscltpXT1zfWZ1bmN0aW9uIFEodCxuLHIsaSxvKXtpZihlKG4pKXtpZihmKG4scikpcmV0dXJuIHRbcl09bltyXSxvfHxkZWxldGUgbltyXSwhMDtpZihmKG4saSkpcmV0dXJuIHRbcl09bltpXSxvfHxkZWxldGUgbltpXSwhMH1yZXR1cm4hMX1mdW5jdGlvbiB0dCh0KXtyZXR1cm4gZSh0KSYmZSh0LnRleHQpJiZmdW5jdGlvbih0KXtyZXR1cm4hMT09PXR9KHQuaXNDb21tZW50KX1mdW5jdGlvbiBldChpLG8pe3ZhciBhLHMsYyx1LGw9W107Zm9yKGE9MDthPGkubGVuZ3RoO2ErKyl0KHM9aVthXSl8fFwiYm9vbGVhblwiPT10eXBlb2Ygc3x8KHU9bFtjPWwubGVuZ3RoLTFdLEFycmF5LmlzQXJyYXkocyk/cy5sZW5ndGg+MCYmKHR0KChzPWV0KHMsKG98fFwiXCIpK1wiX1wiK2EpKVswXSkmJnR0KHUpJiYobFtjXT14KHUudGV4dCtzWzBdLnRleHQpLHMuc2hpZnQoKSksbC5wdXNoLmFwcGx5KGwscykpOnIocyk/dHQodSk/bFtjXT14KHUudGV4dCtzKTpcIlwiIT09cyYmbC5wdXNoKHgocykpOnR0KHMpJiZ0dCh1KT9sW2NdPXgodS50ZXh0K3MudGV4dCk6KG4oaS5faXNWTGlzdCkmJmUocy50YWcpJiZ0KHMua2V5KSYmZShvKSYmKHMua2V5PVwiX192bGlzdFwiK28rXCJfXCIrYStcIl9fXCIpLGwucHVzaChzKSkpO3JldHVybiBsfWZ1bmN0aW9uIG50KHQsZSl7cmV0dXJuKHQuX19lc01vZHVsZXx8ZnImJlwiTW9kdWxlXCI9PT10W1N5bWJvbC50b1N0cmluZ1RhZ10pJiYodD10LmRlZmF1bHQpLGkodCk/ZS5leHRlbmQodCk6dH1mdW5jdGlvbiBydCh0KXtyZXR1cm4gdC5pc0NvbW1lbnQmJnQuYXN5bmNGYWN0b3J5fWZ1bmN0aW9uIGl0KHQpe2lmKEFycmF5LmlzQXJyYXkodCkpZm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07aWYoZShyKSYmKGUoci5jb21wb25lbnRPcHRpb25zKXx8cnQocikpKXJldHVybiByfX1mdW5jdGlvbiBvdCh0LGUsbil7bj9Mci4kb25jZSh0LGUpOkxyLiRvbih0LGUpfWZ1bmN0aW9uIGF0KHQsZSl7THIuJG9mZih0LGUpfWZ1bmN0aW9uIHN0KHQsZSxuKXtMcj10LFgoZSxufHx7fSxvdCxhdCksTHI9dm9pZCAwfWZ1bmN0aW9uIGN0KHQsZSl7dmFyIG49e307aWYoIXQpcmV0dXJuIG47Zm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7cisrKXt2YXIgbz10W3JdLGE9by5kYXRhO2lmKGEmJmEuYXR0cnMmJmEuYXR0cnMuc2xvdCYmZGVsZXRlIGEuYXR0cnMuc2xvdCxvLmNvbnRleHQhPT1lJiZvLmZuQ29udGV4dCE9PWV8fCFhfHxudWxsPT1hLnNsb3QpKG4uZGVmYXVsdHx8KG4uZGVmYXVsdD1bXSkpLnB1c2gobyk7ZWxzZXt2YXIgcz1hLnNsb3QsYz1uW3NdfHwobltzXT1bXSk7XCJ0ZW1wbGF0ZVwiPT09by50YWc/Yy5wdXNoLmFwcGx5KGMsby5jaGlsZHJlbnx8W10pOmMucHVzaChvKX19Zm9yKHZhciB1IGluIG4pblt1XS5ldmVyeSh1dCkmJmRlbGV0ZSBuW3VdO3JldHVybiBufWZ1bmN0aW9uIHV0KHQpe3JldHVybiB0LmlzQ29tbWVudCYmIXQuYXN5bmNGYWN0b3J5fHxcIiBcIj09PXQudGV4dH1mdW5jdGlvbiBsdCh0LGUpe2U9ZXx8e307Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspQXJyYXkuaXNBcnJheSh0W25dKT9sdCh0W25dLGUpOmVbdFtuXS5rZXldPXRbbl0uZm47cmV0dXJuIGV9ZnVuY3Rpb24gZnQodCl7Zm9yKDt0JiYodD10LiRwYXJlbnQpOylpZih0Ll9pbmFjdGl2ZSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBwdCh0LGUpe2lmKGUpe2lmKHQuX2RpcmVjdEluYWN0aXZlPSExLGZ0KHQpKXJldHVybn1lbHNlIGlmKHQuX2RpcmVjdEluYWN0aXZlKXJldHVybjtpZih0Ll9pbmFjdGl2ZXx8bnVsbD09PXQuX2luYWN0aXZlKXt0Ll9pbmFjdGl2ZT0hMTtmb3IodmFyIG49MDtuPHQuJGNoaWxkcmVuLmxlbmd0aDtuKyspcHQodC4kY2hpbGRyZW5bbl0pO3Z0KHQsXCJhY3RpdmF0ZWRcIil9fWZ1bmN0aW9uIGR0KHQsZSl7aWYoIShlJiYodC5fZGlyZWN0SW5hY3RpdmU9ITAsZnQodCkpfHx0Ll9pbmFjdGl2ZSkpe3QuX2luYWN0aXZlPSEwO2Zvcih2YXIgbj0wO248dC4kY2hpbGRyZW4ubGVuZ3RoO24rKylkdCh0LiRjaGlsZHJlbltuXSk7dnQodCxcImRlYWN0aXZhdGVkXCIpfX1mdW5jdGlvbiB2dCh0LGUpe3ZhciBuPXQuJG9wdGlvbnNbZV07aWYobilmb3IodmFyIHI9MCxpPW4ubGVuZ3RoO3I8aTtyKyspdHJ5e25bcl0uY2FsbCh0KX1jYXRjaChuKXtWKG4sdCxlK1wiIGhvb2tcIil9dC5faGFzSG9va0V2ZW50JiZ0LiRlbWl0KFwiaG9vazpcIitlKX1mdW5jdGlvbiBodCgpe1VyPSEwO3ZhciB0LGU7Zm9yKEZyLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5pZC1lLmlkfSksVnI9MDtWcjxGci5sZW5ndGg7VnIrKyllPSh0PUZyW1ZyXSkuaWQsSHJbZV09bnVsbCx0LnJ1bigpO3ZhciBuPVJyLnNsaWNlKCkscj1Gci5zbGljZSgpO1ZyPUZyLmxlbmd0aD1Sci5sZW5ndGg9MCxIcj17fSxCcj1Vcj0hMSxmdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdLl9pbmFjdGl2ZT0hMCxwdCh0W2VdLCEwKX0obiksZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGg7Zm9yKDtlLS07KXt2YXIgbj10W2VdLHI9bi52bTtyLl93YXRjaGVyPT09biYmci5faXNNb3VudGVkJiZ2dChyLFwidXBkYXRlZFwiKX19KHIpLGxyJiZKbi5kZXZ0b29scyYmbHIuZW1pdChcImZsdXNoXCIpfWZ1bmN0aW9uIG10KHQsZSxuKXtKci5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tlXVtuXX0sSnIuc2V0PWZ1bmN0aW9uKHQpe3RoaXNbZV1bbl09dH0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbixKcil9ZnVuY3Rpb24geXQodCl7dC5fd2F0Y2hlcnM9W107dmFyIGU9dC4kb3B0aW9ucztlLnByb3BzJiZmdW5jdGlvbih0LGUpe3ZhciBuPXQuJG9wdGlvbnMucHJvcHNEYXRhfHx7fSxyPXQuX3Byb3BzPXt9LGk9dC4kb3B0aW9ucy5fcHJvcEtleXM9W10sbz0hdC4kcGFyZW50O0NyLnNob3VsZENvbnZlcnQ9bzt2YXIgYT1mdW5jdGlvbihvKXtpLnB1c2gobyk7dmFyIGE9SChvLGUsbix0KTtFKHIsbyxhKSxvIGluIHR8fG10KHQsXCJfcHJvcHNcIixvKX07Zm9yKHZhciBzIGluIGUpYShzKTtDci5zaG91bGRDb252ZXJ0PSEwfSh0LGUucHJvcHMpLGUubWV0aG9kcyYmZnVuY3Rpb24odCxlKXt0LiRvcHRpb25zLnByb3BzO2Zvcih2YXIgbiBpbiBlKXRbbl09bnVsbD09ZVtuXT95OmQoZVtuXSx0KX0odCxlLm1ldGhvZHMpLGUuZGF0YT9mdW5jdGlvbih0KXt2YXIgZT10LiRvcHRpb25zLmRhdGE7ZT10Ll9kYXRhPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZnVuY3Rpb24odCxlKXt0cnl7cmV0dXJuIHQuY2FsbChlLGUpfWNhdGNoKHQpe3JldHVybiBWKHQsZSxcImRhdGEoKVwiKSx7fX19KGUsdCk6ZXx8e30sbyhlKXx8KGU9e30pO3ZhciBuPU9iamVjdC5rZXlzKGUpLHI9dC4kb3B0aW9ucy5wcm9wcyxpPSh0LiRvcHRpb25zLm1ldGhvZHMsbi5sZW5ndGgpO2Zvcig7aS0tOyl7dmFyIGE9bltpXTtyJiZmKHIsYSl8fCQoYSl8fG10KHQsXCJfZGF0YVwiLGEpfVQoZSwhMCl9KHQpOlQodC5fZGF0YT17fSwhMCksZS5jb21wdXRlZCYmZnVuY3Rpb24odCxlKXt2YXIgbj10Ll9jb21wdXRlZFdhdGNoZXJzPU9iamVjdC5jcmVhdGUobnVsbCkscj11cigpO2Zvcih2YXIgaSBpbiBlKXt2YXIgbz1lW2ldLGE9XCJmdW5jdGlvblwiPT10eXBlb2Ygbz9vOm8uZ2V0O3J8fChuW2ldPW5ldyBLcih0LGF8fHkseSxxcikpLGkgaW4gdHx8Z3QodCxpLG8pfX0odCxlLmNvbXB1dGVkKSxlLndhdGNoJiZlLndhdGNoIT09aXImJmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpe3ZhciByPWVbbl07aWYoQXJyYXkuaXNBcnJheShyKSlmb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krKylidCh0LG4scltpXSk7ZWxzZSBidCh0LG4scil9fSh0LGUud2F0Y2gpfWZ1bmN0aW9uIGd0KHQsZSxuKXt2YXIgcj0hdXIoKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBuPyhKci5nZXQ9cj9fdChlKTpuLEpyLnNldD15KTooSnIuZ2V0PW4uZ2V0P3ImJiExIT09bi5jYWNoZT9fdChlKTpuLmdldDp5LEpyLnNldD1uLnNldD9uLnNldDp5KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLEpyKX1mdW5jdGlvbiBfdCh0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9jb21wdXRlZFdhdGNoZXJzJiZ0aGlzLl9jb21wdXRlZFdhdGNoZXJzW3RdO2lmKGUpcmV0dXJuIGUuZGlydHkmJmUuZXZhbHVhdGUoKSx2ci50YXJnZXQmJmUuZGVwZW5kKCksZS52YWx1ZX19ZnVuY3Rpb24gYnQodCxlLG4scil7cmV0dXJuIG8obikmJihyPW4sbj1uLmhhbmRsZXIpLFwic3RyaW5nXCI9PXR5cGVvZiBuJiYobj10W25dKSx0LiR3YXRjaChlLG4scil9ZnVuY3Rpb24gJHQodCxlKXtpZih0KXtmb3IodmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKSxyPWZyP1JlZmxlY3Qub3duS2V5cyh0KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlKS5lbnVtZXJhYmxlfSk6T2JqZWN0LmtleXModCksaT0wO2k8ci5sZW5ndGg7aSsrKXtmb3IodmFyIG89cltpXSxhPXRbb10uZnJvbSxzPWU7czspe2lmKHMuX3Byb3ZpZGVkJiZhIGluIHMuX3Byb3ZpZGVkKXtuW29dPXMuX3Byb3ZpZGVkW2FdO2JyZWFrfXM9cy4kcGFyZW50fWlmKCFzJiZcImRlZmF1bHRcImluIHRbb10pe3ZhciBjPXRbb10uZGVmYXVsdDtuW29dPVwiZnVuY3Rpb25cIj09dHlwZW9mIGM/Yy5jYWxsKGUpOmN9fXJldHVybiBufX1mdW5jdGlvbiBDdCh0LG4pe3ZhciByLG8sYSxzLGM7aWYoQXJyYXkuaXNBcnJheSh0KXx8XCJzdHJpbmdcIj09dHlwZW9mIHQpZm9yKHI9bmV3IEFycmF5KHQubGVuZ3RoKSxvPTAsYT10Lmxlbmd0aDtvPGE7bysrKXJbb109bih0W29dLG8pO2Vsc2UgaWYoXCJudW1iZXJcIj09dHlwZW9mIHQpZm9yKHI9bmV3IEFycmF5KHQpLG89MDtvPHQ7bysrKXJbb109bihvKzEsbyk7ZWxzZSBpZihpKHQpKWZvcihzPU9iamVjdC5rZXlzKHQpLHI9bmV3IEFycmF5KHMubGVuZ3RoKSxvPTAsYT1zLmxlbmd0aDtvPGE7bysrKWM9c1tvXSxyW29dPW4odFtjXSxjLG8pO3JldHVybiBlKHIpJiYoci5faXNWTGlzdD0hMCkscn1mdW5jdGlvbiB3dCh0LGUsbixyKXt2YXIgaSxvPXRoaXMuJHNjb3BlZFNsb3RzW3RdO2lmKG8pbj1ufHx7fSxyJiYobj1oKGgoe30sciksbikpLGk9byhuKXx8ZTtlbHNle3ZhciBhPXRoaXMuJHNsb3RzW3RdO2EmJihhLl9yZW5kZXJlZD0hMCksaT1hfHxlfXZhciBzPW4mJm4uc2xvdDtyZXR1cm4gcz90aGlzLiRjcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIix7c2xvdDpzfSxpKTppfWZ1bmN0aW9uIHh0KHQpe3JldHVybiBSKHRoaXMuJG9wdGlvbnMsXCJmaWx0ZXJzXCIsdCl8fFVufWZ1bmN0aW9uIGt0KHQsZSxuLHIpe3ZhciBpPUpuLmtleUNvZGVzW2VdfHxuO3JldHVybiBpP0FycmF5LmlzQXJyYXkoaSk/LTE9PT1pLmluZGV4T2YodCk6aSE9PXQ6cj9IbihyKSE9PWU6dm9pZCAwfWZ1bmN0aW9uIEF0KHQsZSxuLHIsbyl7aWYobilpZihpKG4pKXtBcnJheS5pc0FycmF5KG4pJiYobj1tKG4pKTt2YXIgYSxzPWZ1bmN0aW9uKGkpe2lmKFwiY2xhc3NcIj09PWl8fFwic3R5bGVcIj09PWl8fExuKGkpKWE9dDtlbHNle3ZhciBzPXQuYXR0cnMmJnQuYXR0cnMudHlwZTthPXJ8fEpuLm11c3RVc2VQcm9wKGUscyxpKT90LmRvbVByb3BzfHwodC5kb21Qcm9wcz17fSk6dC5hdHRyc3x8KHQuYXR0cnM9e30pfWlmKCEoaSBpbiBhKSYmKGFbaV09bltpXSxvKSl7KHQub258fCh0Lm9uPXt9KSlbXCJ1cGRhdGU6XCIraV09ZnVuY3Rpb24odCl7bltpXT10fX19O2Zvcih2YXIgYyBpbiBuKXMoYyl9ZWxzZTtyZXR1cm4gdH1mdW5jdGlvbiBPdCh0LGUpe3ZhciBuPXRoaXMuX3N0YXRpY1RyZWVzfHwodGhpcy5fc3RhdGljVHJlZXM9W10pLHI9blt0XTtyZXR1cm4gciYmIWU/QXJyYXkuaXNBcnJheShyKT9BKHIpOmsocik6KHI9blt0XT10aGlzLiRvcHRpb25zLnN0YXRpY1JlbmRlckZuc1t0XS5jYWxsKHRoaXMuX3JlbmRlclByb3h5LG51bGwsdGhpcyksVHQocixcIl9fc3RhdGljX19cIit0LCExKSxyKX1mdW5jdGlvbiBTdCh0LGUsbil7cmV0dXJuIFR0KHQsXCJfX29uY2VfX1wiK2UrKG4/XCJfXCIrbjpcIlwiKSwhMCksdH1mdW5jdGlvbiBUdCh0LGUsbil7aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl0W3JdJiZcInN0cmluZ1wiIT10eXBlb2YgdFtyXSYmRXQodFtyXSxlK1wiX1wiK3Isbik7ZWxzZSBFdCh0LGUsbil9ZnVuY3Rpb24gRXQodCxlLG4pe3QuaXNTdGF0aWM9ITAsdC5rZXk9ZSx0LmlzT25jZT1ufWZ1bmN0aW9uIGp0KHQsZSl7aWYoZSlpZihvKGUpKXt2YXIgbj10Lm9uPXQub24/aCh7fSx0Lm9uKTp7fTtmb3IodmFyIHIgaW4gZSl7dmFyIGk9bltyXSxhPWVbcl07bltyXT1pP1tdLmNvbmNhdChpLGEpOmF9fWVsc2U7cmV0dXJuIHR9ZnVuY3Rpb24gTnQodCl7dC5fbz1TdCx0Ll9uPWMsdC5fcz1zLHQuX2w9Q3QsdC5fdD13dCx0Ll9xPWcsdC5faT1fLHQuX209T3QsdC5fZj14dCx0Ll9rPWt0LHQuX2I9QXQsdC5fdj14LHQuX2U9Z3IsdC5fdT1sdCx0Ll9nPWp0fWZ1bmN0aW9uIEl0KHQsZSxyLGksbyl7dmFyIGE9by5vcHRpb25zO3RoaXMuZGF0YT10LHRoaXMucHJvcHM9ZSx0aGlzLmNoaWxkcmVuPXIsdGhpcy5wYXJlbnQ9aSx0aGlzLmxpc3RlbmVycz10Lm9ufHxqbix0aGlzLmluamVjdGlvbnM9JHQoYS5pbmplY3QsaSksdGhpcy5zbG90cz1mdW5jdGlvbigpe3JldHVybiBjdChyLGkpfTt2YXIgcz1PYmplY3QuY3JlYXRlKGkpLGM9bihhLl9jb21waWxlZCksdT0hYztjJiYodGhpcy4kb3B0aW9ucz1hLHRoaXMuJHNsb3RzPXRoaXMuc2xvdHMoKSx0aGlzLiRzY29wZWRTbG90cz10LnNjb3BlZFNsb3RzfHxqbiksYS5fc2NvcGVJZD90aGlzLl9jPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBvPUR0KHMsdCxlLG4scix1KTtyZXR1cm4gbyYmKG8uZm5TY29wZUlkPWEuX3Njb3BlSWQsby5mbkNvbnRleHQ9aSksb306dGhpcy5fYz1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gRHQocyx0LGUsbixyLHUpfX1mdW5jdGlvbiBMdCh0LGUpe2Zvcih2YXIgbiBpbiBlKXRbUG4obildPWVbbl19ZnVuY3Rpb24gTXQocixvLGEscyxjKXtpZighdChyKSl7dmFyIHU9YS4kb3B0aW9ucy5fYmFzZTtpZihpKHIpJiYocj11LmV4dGVuZChyKSksXCJmdW5jdGlvblwiPT10eXBlb2Ygcil7dmFyIGw7aWYodChyLmNpZCkmJihsPXIsdm9pZCAwPT09KHI9ZnVuY3Rpb24ocixvLGEpe2lmKG4oci5lcnJvcikmJmUoci5lcnJvckNvbXApKXJldHVybiByLmVycm9yQ29tcDtpZihlKHIucmVzb2x2ZWQpKXJldHVybiByLnJlc29sdmVkO2lmKG4oci5sb2FkaW5nKSYmZShyLmxvYWRpbmdDb21wKSlyZXR1cm4gci5sb2FkaW5nQ29tcDtpZighZShyLmNvbnRleHRzKSl7dmFyIHM9ci5jb250ZXh0cz1bYV0sYz0hMCx1PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT1zLmxlbmd0aDt0PGU7dCsrKXNbdF0uJGZvcmNlVXBkYXRlKCl9LGw9YihmdW5jdGlvbih0KXtyLnJlc29sdmVkPW50KHQsbyksY3x8dSgpfSksZj1iKGZ1bmN0aW9uKHQpe2Uoci5lcnJvckNvbXApJiYoci5lcnJvcj0hMCx1KCkpfSkscD1yKGwsZik7cmV0dXJuIGkocCkmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiBwLnRoZW4/dChyLnJlc29sdmVkKSYmcC50aGVuKGwsZik6ZShwLmNvbXBvbmVudCkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHAuY29tcG9uZW50LnRoZW4mJihwLmNvbXBvbmVudC50aGVuKGwsZiksZShwLmVycm9yKSYmKHIuZXJyb3JDb21wPW50KHAuZXJyb3IsbykpLGUocC5sb2FkaW5nKSYmKHIubG9hZGluZ0NvbXA9bnQocC5sb2FkaW5nLG8pLDA9PT1wLmRlbGF5P3IubG9hZGluZz0hMDpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dChyLnJlc29sdmVkKSYmdChyLmVycm9yKSYmKHIubG9hZGluZz0hMCx1KCkpfSxwLmRlbGF5fHwyMDApKSxlKHAudGltZW91dCkmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0KHIucmVzb2x2ZWQpJiZmKG51bGwpfSxwLnRpbWVvdXQpKSksYz0hMSxyLmxvYWRpbmc/ci5sb2FkaW5nQ29tcDpyLnJlc29sdmVkfXIuY29udGV4dHMucHVzaChhKX0obCx1LGEpKSkpcmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIsaSl7dmFyIG89Z3IoKTtyZXR1cm4gby5hc3luY0ZhY3Rvcnk9dCxvLmFzeW5jTWV0YT17ZGF0YTplLGNvbnRleHQ6bixjaGlsZHJlbjpyLHRhZzppfSxvfShsLG8sYSxzLGMpO289b3x8e30sRnQociksZShvLm1vZGVsKSYmZnVuY3Rpb24odCxuKXt2YXIgcj10Lm1vZGVsJiZ0Lm1vZGVsLnByb3B8fFwidmFsdWVcIixpPXQubW9kZWwmJnQubW9kZWwuZXZlbnR8fFwiaW5wdXRcIjsobi5wcm9wc3x8KG4ucHJvcHM9e30pKVtyXT1uLm1vZGVsLnZhbHVlO3ZhciBvPW4ub258fChuLm9uPXt9KTtlKG9baV0pP29baV09W24ubW9kZWwuY2FsbGJhY2tdLmNvbmNhdChvW2ldKTpvW2ldPW4ubW9kZWwuY2FsbGJhY2t9KHIub3B0aW9ucyxvKTt2YXIgZj1mdW5jdGlvbihuLHIsaSl7dmFyIG89ci5vcHRpb25zLnByb3BzO2lmKCF0KG8pKXt2YXIgYT17fSxzPW4uYXR0cnMsYz1uLnByb3BzO2lmKGUocyl8fGUoYykpZm9yKHZhciB1IGluIG8pe3ZhciBsPUhuKHUpO1EoYSxjLHUsbCwhMCl8fFEoYSxzLHUsbCwhMSl9cmV0dXJuIGF9fShvLHIpO2lmKG4oci5vcHRpb25zLmZ1bmN0aW9uYWwpKXJldHVybiBmdW5jdGlvbih0LG4scixpLG8pe3ZhciBhPXQub3B0aW9ucyxzPXt9LGM9YS5wcm9wcztpZihlKGMpKWZvcih2YXIgdSBpbiBjKXNbdV09SCh1LGMsbnx8am4pO2Vsc2UgZShyLmF0dHJzKSYmTHQocyxyLmF0dHJzKSxlKHIucHJvcHMpJiZMdChzLHIucHJvcHMpO3ZhciBsPW5ldyBJdChyLHMsbyxpLHQpLGY9YS5yZW5kZXIuY2FsbChudWxsLGwuX2MsbCk7cmV0dXJuIGYgaW5zdGFuY2VvZiBtciYmKGYuZm5Db250ZXh0PWksZi5mbk9wdGlvbnM9YSxyLnNsb3QmJigoZi5kYXRhfHwoZi5kYXRhPXt9KSkuc2xvdD1yLnNsb3QpKSxmfShyLGYsbyxhLHMpO3ZhciBwPW8ub247aWYoby5vbj1vLm5hdGl2ZU9uLG4oci5vcHRpb25zLmFic3RyYWN0KSl7dmFyIGQ9by5zbG90O289e30sZCYmKG8uc2xvdD1kKX0hZnVuY3Rpb24odCl7dC5ob29rfHwodC5ob29rPXt9KTtmb3IodmFyIGU9MDtlPEdyLmxlbmd0aDtlKyspe3ZhciBuPUdyW2VdLHI9dC5ob29rW25dLGk9V3Jbbl07dC5ob29rW25dPXI/ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24obixyLGksbyl7dChuLHIsaSxvKSxlKG4scixpLG8pfX0oaSxyKTppfX0obyk7dmFyIHY9ci5vcHRpb25zLm5hbWV8fGM7cmV0dXJuIG5ldyBtcihcInZ1ZS1jb21wb25lbnQtXCIrci5jaWQrKHY/XCItXCIrdjpcIlwiKSxvLHZvaWQgMCx2b2lkIDAsdm9pZCAwLGEse0N0b3I6cixwcm9wc0RhdGE6ZixsaXN0ZW5lcnM6cCx0YWc6YyxjaGlsZHJlbjpzfSxsKX19fWZ1bmN0aW9uIER0KHQsaSxvLGEscyxjKXtyZXR1cm4oQXJyYXkuaXNBcnJheShvKXx8cihvKSkmJihzPWEsYT1vLG89dm9pZCAwKSxuKGMpJiYocz1YciksZnVuY3Rpb24odCxuLGksbyxhKXtpZihlKGkpJiZlKGkuX19vYl9fKSlyZXR1cm4gZ3IoKTtlKGkpJiZlKGkuaXMpJiYobj1pLmlzKTtpZighbilyZXR1cm4gZ3IoKTtBcnJheS5pc0FycmF5KG8pJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvWzBdJiYoKGk9aXx8e30pLnNjb3BlZFNsb3RzPXtkZWZhdWx0Om9bMF19LG8ubGVuZ3RoPTApO2E9PT1Ycj9vPWZ1bmN0aW9uKHQpe3JldHVybiByKHQpP1t4KHQpXTpBcnJheS5pc0FycmF5KHQpP2V0KHQpOnZvaWQgMH0obyk6YT09PVpyJiYobz1mdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKylpZihBcnJheS5pc0FycmF5KHRbZV0pKXJldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLHQpO3JldHVybiB0fShvKSk7dmFyIHMsYztpZihcInN0cmluZ1wiPT10eXBlb2Ygbil7dmFyIHU7Yz10LiR2bm9kZSYmdC4kdm5vZGUubnN8fEpuLmdldFRhZ05hbWVzcGFjZShuKSxzPUpuLmlzUmVzZXJ2ZWRUYWcobik/bmV3IG1yKEpuLnBhcnNlUGxhdGZvcm1UYWdOYW1lKG4pLGksbyx2b2lkIDAsdm9pZCAwLHQpOmUodT1SKHQuJG9wdGlvbnMsXCJjb21wb25lbnRzXCIsbikpP010KHUsaSx0LG8sbik6bmV3IG1yKG4saSxvLHZvaWQgMCx2b2lkIDAsdCl9ZWxzZSBzPU10KG4saSx0LG8pO3JldHVybiBlKHMpPyhjJiZQdChzLGMpLHMpOmdyKCl9KHQsaSxvLGEscyl9ZnVuY3Rpb24gUHQocixpLG8pe2lmKHIubnM9aSxcImZvcmVpZ25PYmplY3RcIj09PXIudGFnJiYoaT12b2lkIDAsbz0hMCksZShyLmNoaWxkcmVuKSlmb3IodmFyIGE9MCxzPXIuY2hpbGRyZW4ubGVuZ3RoO2E8czthKyspe3ZhciBjPXIuY2hpbGRyZW5bYV07ZShjLnRhZykmJih0KGMubnMpfHxuKG8pKSYmUHQoYyxpLG8pfX1mdW5jdGlvbiBGdCh0KXt2YXIgZT10Lm9wdGlvbnM7aWYodC5zdXBlcil7dmFyIG49RnQodC5zdXBlcik7aWYobiE9PXQuc3VwZXJPcHRpb25zKXt0LnN1cGVyT3B0aW9ucz1uO3ZhciByPWZ1bmN0aW9uKHQpe3ZhciBlLG49dC5vcHRpb25zLHI9dC5leHRlbmRPcHRpb25zLGk9dC5zZWFsZWRPcHRpb25zO2Zvcih2YXIgbyBpbiBuKW5bb10hPT1pW29dJiYoZXx8KGU9e30pLGVbb109ZnVuY3Rpb24odCxlLG4pe3tpZihBcnJheS5pc0FycmF5KHQpKXt2YXIgcj1bXTtuPUFycmF5LmlzQXJyYXkobik/bjpbbl0sZT1BcnJheS5pc0FycmF5KGUpP2U6W2VdO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKShlLmluZGV4T2YodFtpXSk+PTB8fG4uaW5kZXhPZih0W2ldKTwwKSYmci5wdXNoKHRbaV0pO3JldHVybiByfXJldHVybiB0fX0obltvXSxyW29dLGlbb10pKTtyZXR1cm4gZX0odCk7ciYmaCh0LmV4dGVuZE9wdGlvbnMsciksKGU9dC5vcHRpb25zPUYobix0LmV4dGVuZE9wdGlvbnMpKS5uYW1lJiYoZS5jb21wb25lbnRzW2UubmFtZV09dCl9fXJldHVybiBlfWZ1bmN0aW9uIFJ0KHQpe3RoaXMuX2luaXQodCl9ZnVuY3Rpb24gSHQodCl7dC5jaWQ9MDt2YXIgZT0xO3QuZXh0ZW5kPWZ1bmN0aW9uKHQpe3Q9dHx8e307dmFyIG49dGhpcyxyPW4uY2lkLGk9dC5fQ3Rvcnx8KHQuX0N0b3I9e30pO2lmKGlbcl0pcmV0dXJuIGlbcl07dmFyIG89dC5uYW1lfHxuLm9wdGlvbnMubmFtZSxhPWZ1bmN0aW9uKHQpe3RoaXMuX2luaXQodCl9O3JldHVybiBhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG4ucHJvdG90eXBlKSxhLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hLGEuY2lkPWUrKyxhLm9wdGlvbnM9RihuLm9wdGlvbnMsdCksYS5zdXBlcj1uLGEub3B0aW9ucy5wcm9wcyYmZnVuY3Rpb24odCl7dmFyIGU9dC5vcHRpb25zLnByb3BzO2Zvcih2YXIgbiBpbiBlKW10KHQucHJvdG90eXBlLFwiX3Byb3BzXCIsbil9KGEpLGEub3B0aW9ucy5jb21wdXRlZCYmZnVuY3Rpb24odCl7dmFyIGU9dC5vcHRpb25zLmNvbXB1dGVkO2Zvcih2YXIgbiBpbiBlKWd0KHQucHJvdG90eXBlLG4sZVtuXSl9KGEpLGEuZXh0ZW5kPW4uZXh0ZW5kLGEubWl4aW49bi5taXhpbixhLnVzZT1uLnVzZSx6bi5mb3JFYWNoKGZ1bmN0aW9uKHQpe2FbdF09blt0XX0pLG8mJihhLm9wdGlvbnMuY29tcG9uZW50c1tvXT1hKSxhLnN1cGVyT3B0aW9ucz1uLm9wdGlvbnMsYS5leHRlbmRPcHRpb25zPXQsYS5zZWFsZWRPcHRpb25zPWgoe30sYS5vcHRpb25zKSxpW3JdPWEsYX19ZnVuY3Rpb24gQnQodCl7cmV0dXJuIHQmJih0LkN0b3Iub3B0aW9ucy5uYW1lfHx0LnRhZyl9ZnVuY3Rpb24gVXQodCxlKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT90LmluZGV4T2YoZSk+LTE6XCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5zcGxpdChcIixcIikuaW5kZXhPZihlKT4tMTohIWZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBSZWdFeHBdXCI9PT1Obi5jYWxsKHQpfSh0KSYmdC50ZXN0KGUpfWZ1bmN0aW9uIFZ0KHQsZSl7dmFyIG49dC5jYWNoZSxyPXQua2V5cyxpPXQuX3Zub2RlO2Zvcih2YXIgbyBpbiBuKXt2YXIgYT1uW29dO2lmKGEpe3ZhciBzPUJ0KGEuY29tcG9uZW50T3B0aW9ucyk7cyYmIWUocykmJnp0KG4sbyxyLGkpfX19ZnVuY3Rpb24genQodCxlLG4scil7dmFyIGk9dFtlXTshaXx8ciYmaS50YWc9PT1yLnRhZ3x8aS5jb21wb25lbnRJbnN0YW5jZS4kZGVzdHJveSgpLHRbZV09bnVsbCxsKG4sZSl9ZnVuY3Rpb24gS3QodCl7Zm9yKHZhciBuPXQuZGF0YSxyPXQsaT10O2UoaS5jb21wb25lbnRJbnN0YW5jZSk7KShpPWkuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlKSYmaS5kYXRhJiYobj1KdChpLmRhdGEsbikpO2Zvcig7ZShyPXIucGFyZW50KTspciYmci5kYXRhJiYobj1KdChuLHIuZGF0YSkpO3JldHVybiBmdW5jdGlvbih0LG4pe2lmKGUodCl8fGUobikpcmV0dXJuIHF0KHQsV3QobikpO3JldHVyblwiXCJ9KG4uc3RhdGljQ2xhc3Msbi5jbGFzcyl9ZnVuY3Rpb24gSnQodCxuKXtyZXR1cm57c3RhdGljQ2xhc3M6cXQodC5zdGF0aWNDbGFzcyxuLnN0YXRpY0NsYXNzKSxjbGFzczplKHQuY2xhc3MpP1t0LmNsYXNzLG4uY2xhc3NdOm4uY2xhc3N9fWZ1bmN0aW9uIHF0KHQsZSl7cmV0dXJuIHQ/ZT90K1wiIFwiK2U6dDplfHxcIlwifWZ1bmN0aW9uIFd0KHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpP2Z1bmN0aW9uKHQpe2Zvcih2YXIgbixyPVwiXCIsaT0wLG89dC5sZW5ndGg7aTxvO2krKyllKG49V3QodFtpXSkpJiZcIlwiIT09biYmKHImJihyKz1cIiBcIikscis9bik7cmV0dXJuIHJ9KHQpOmkodCk/ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtmb3IodmFyIG4gaW4gdCl0W25dJiYoZSYmKGUrPVwiIFwiKSxlKz1uKTtyZXR1cm4gZX0odCk6XCJzdHJpbmdcIj09dHlwZW9mIHQ/dDpcIlwifWZ1bmN0aW9uIEd0KHQpe3JldHVybiBiaSh0KT9cInN2Z1wiOlwibWF0aFwiPT09dD9cIm1hdGhcIjp2b2lkIDB9ZnVuY3Rpb24gWnQodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk7cmV0dXJuIGV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIil9cmV0dXJuIHR9ZnVuY3Rpb24gWHQodCxlKXt2YXIgbj10LmRhdGEucmVmO2lmKG4pe3ZhciByPXQuY29udGV4dCxpPXQuY29tcG9uZW50SW5zdGFuY2V8fHQuZWxtLG89ci4kcmVmcztlP0FycmF5LmlzQXJyYXkob1tuXSk/bChvW25dLGkpOm9bbl09PT1pJiYob1tuXT12b2lkIDApOnQuZGF0YS5yZWZJbkZvcj9BcnJheS5pc0FycmF5KG9bbl0pP29bbl0uaW5kZXhPZihpKTwwJiZvW25dLnB1c2goaSk6b1tuXT1baV06b1tuXT1pfX1mdW5jdGlvbiBZdChyLGkpe3JldHVybiByLmtleT09PWkua2V5JiYoci50YWc9PT1pLnRhZyYmci5pc0NvbW1lbnQ9PT1pLmlzQ29tbWVudCYmZShyLmRhdGEpPT09ZShpLmRhdGEpJiZmdW5jdGlvbih0LG4pe2lmKFwiaW5wdXRcIiE9PXQudGFnKXJldHVybiEwO3ZhciByLGk9ZShyPXQuZGF0YSkmJmUocj1yLmF0dHJzKSYmci50eXBlLG89ZShyPW4uZGF0YSkmJmUocj1yLmF0dHJzKSYmci50eXBlO3JldHVybiBpPT09b3x8d2koaSkmJndpKG8pfShyLGkpfHxuKHIuaXNBc3luY1BsYWNlaG9sZGVyKSYmci5hc3luY0ZhY3Rvcnk9PT1pLmFzeW5jRmFjdG9yeSYmdChpLmFzeW5jRmFjdG9yeS5lcnJvcikpfWZ1bmN0aW9uIFF0KHQsbixyKXt2YXIgaSxvLGE9e307Zm9yKGk9bjtpPD1yOysraSllKG89dFtpXS5rZXkpJiYoYVtvXT1pKTtyZXR1cm4gYX1mdW5jdGlvbiB0ZSh0LGUpeyh0LmRhdGEuZGlyZWN0aXZlc3x8ZS5kYXRhLmRpcmVjdGl2ZXMpJiZmdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvPXQ9PT1BaSxhPWU9PT1BaSxzPWVlKHQuZGF0YS5kaXJlY3RpdmVzLHQuY29udGV4dCksYz1lZShlLmRhdGEuZGlyZWN0aXZlcyxlLmNvbnRleHQpLHU9W10sbD1bXTtmb3IobiBpbiBjKXI9c1tuXSxpPWNbbl0scj8oaS5vbGRWYWx1ZT1yLnZhbHVlLG5lKGksXCJ1cGRhdGVcIixlLHQpLGkuZGVmJiZpLmRlZi5jb21wb25lbnRVcGRhdGVkJiZsLnB1c2goaSkpOihuZShpLFwiYmluZFwiLGUsdCksaS5kZWYmJmkuZGVmLmluc2VydGVkJiZ1LnB1c2goaSkpO2lmKHUubGVuZ3RoKXt2YXIgZj1mdW5jdGlvbigpe2Zvcih2YXIgbj0wO248dS5sZW5ndGg7bisrKW5lKHVbbl0sXCJpbnNlcnRlZFwiLGUsdCl9O28/WShlLFwiaW5zZXJ0XCIsZik6ZigpfWwubGVuZ3RoJiZZKGUsXCJwb3N0cGF0Y2hcIixmdW5jdGlvbigpe2Zvcih2YXIgbj0wO248bC5sZW5ndGg7bisrKW5lKGxbbl0sXCJjb21wb25lbnRVcGRhdGVkXCIsZSx0KX0pO2lmKCFvKWZvcihuIGluIHMpY1tuXXx8bmUoc1tuXSxcInVuYmluZFwiLHQsdCxhKX0odCxlKX1mdW5jdGlvbiBlZSh0LGUpe3ZhciBuPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoIXQpcmV0dXJuIG47dmFyIHIsaTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKShpPXRbcl0pLm1vZGlmaWVyc3x8KGkubW9kaWZpZXJzPVRpKSxuW2Z1bmN0aW9uKHQpe3JldHVybiB0LnJhd05hbWV8fHQubmFtZStcIi5cIitPYmplY3Qua2V5cyh0Lm1vZGlmaWVyc3x8e30pLmpvaW4oXCIuXCIpfShpKV09aSxpLmRlZj1SKGUuJG9wdGlvbnMsXCJkaXJlY3RpdmVzXCIsaS5uYW1lKTtyZXR1cm4gbn1mdW5jdGlvbiBuZSh0LGUsbixyLGkpe3ZhciBvPXQuZGVmJiZ0LmRlZltlXTtpZihvKXRyeXtvKG4uZWxtLHQsbixyLGkpfWNhdGNoKHIpe1YocixuLmNvbnRleHQsXCJkaXJlY3RpdmUgXCIrdC5uYW1lK1wiIFwiK2UrXCIgaG9va1wiKX19ZnVuY3Rpb24gcmUobixyKXt2YXIgaT1yLmNvbXBvbmVudE9wdGlvbnM7aWYoIShlKGkpJiYhMT09PWkuQ3Rvci5vcHRpb25zLmluaGVyaXRBdHRyc3x8dChuLmRhdGEuYXR0cnMpJiZ0KHIuZGF0YS5hdHRycykpKXt2YXIgbyxhLHM9ci5lbG0sYz1uLmRhdGEuYXR0cnN8fHt9LHU9ci5kYXRhLmF0dHJzfHx7fTtlKHUuX19vYl9fKSYmKHU9ci5kYXRhLmF0dHJzPWgoe30sdSkpO2ZvcihvIGluIHUpYT11W29dLGNbb10hPT1hJiZpZShzLG8sYSk7KFFufHxlcikmJnUudmFsdWUhPT1jLnZhbHVlJiZpZShzLFwidmFsdWVcIix1LnZhbHVlKTtmb3IobyBpbiBjKXQodVtvXSkmJihoaShvKT9zLnJlbW92ZUF0dHJpYnV0ZU5TKHZpLG1pKG8pKTpwaShvKXx8cy5yZW1vdmVBdHRyaWJ1dGUobykpfX1mdW5jdGlvbiBpZSh0LGUsbil7aWYoZGkoZSkpeWkobik/dC5yZW1vdmVBdHRyaWJ1dGUoZSk6KG49XCJhbGxvd2Z1bGxzY3JlZW5cIj09PWUmJlwiRU1CRURcIj09PXQudGFnTmFtZT9cInRydWVcIjplLHQuc2V0QXR0cmlidXRlKGUsbikpO2Vsc2UgaWYocGkoZSkpdC5zZXRBdHRyaWJ1dGUoZSx5aShuKXx8XCJmYWxzZVwiPT09bj9cImZhbHNlXCI6XCJ0cnVlXCIpO2Vsc2UgaWYoaGkoZSkpeWkobik/dC5yZW1vdmVBdHRyaWJ1dGVOUyh2aSxtaShlKSk6dC5zZXRBdHRyaWJ1dGVOUyh2aSxlLG4pO2Vsc2UgaWYoeWkobikpdC5yZW1vdmVBdHRyaWJ1dGUoZSk7ZWxzZXtpZihRbiYmIXRyJiZcIlRFWFRBUkVBXCI9PT10LnRhZ05hbWUmJlwicGxhY2Vob2xkZXJcIj09PWUmJiF0Ll9faWVwaCl7dmFyIHI9ZnVuY3Rpb24oZSl7ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLHIpfTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLHIpLHQuX19pZXBoPSEwfXQuc2V0QXR0cmlidXRlKGUsbil9fWZ1bmN0aW9uIG9lKG4scil7dmFyIGk9ci5lbG0sbz1yLmRhdGEsYT1uLmRhdGE7aWYoISh0KG8uc3RhdGljQ2xhc3MpJiZ0KG8uY2xhc3MpJiYodChhKXx8dChhLnN0YXRpY0NsYXNzKSYmdChhLmNsYXNzKSkpKXt2YXIgcz1LdChyKSxjPWkuX3RyYW5zaXRpb25DbGFzc2VzO2UoYykmJihzPXF0KHMsV3QoYykpKSxzIT09aS5fcHJldkNsYXNzJiYoaS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLHMpLGkuX3ByZXZDbGFzcz1zKX19ZnVuY3Rpb24gYWUodCl7ZnVuY3Rpb24gZSgpeyhhfHwoYT1bXSkpLnB1c2godC5zbGljZSh2LGkpLnRyaW0oKSksdj1pKzF9dmFyIG4scixpLG8sYSxzPSExLGM9ITEsdT0hMSxsPSExLGY9MCxwPTAsZD0wLHY9MDtmb3IoaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHI9bixuPXQuY2hhckNvZGVBdChpKSxzKTM5PT09biYmOTIhPT1yJiYocz0hMSk7ZWxzZSBpZihjKTM0PT09biYmOTIhPT1yJiYoYz0hMSk7ZWxzZSBpZih1KTk2PT09biYmOTIhPT1yJiYodT0hMSk7ZWxzZSBpZihsKTQ3PT09biYmOTIhPT1yJiYobD0hMSk7ZWxzZSBpZigxMjQhPT1ufHwxMjQ9PT10LmNoYXJDb2RlQXQoaSsxKXx8MTI0PT09dC5jaGFyQ29kZUF0KGktMSl8fGZ8fHB8fGQpe3N3aXRjaChuKXtjYXNlIDM0OmM9ITA7YnJlYWs7Y2FzZSAzOTpzPSEwO2JyZWFrO2Nhc2UgOTY6dT0hMDticmVhaztjYXNlIDQwOmQrKzticmVhaztjYXNlIDQxOmQtLTticmVhaztjYXNlIDkxOnArKzticmVhaztjYXNlIDkzOnAtLTticmVhaztjYXNlIDEyMzpmKys7YnJlYWs7Y2FzZSAxMjU6Zi0tfWlmKDQ3PT09bil7Zm9yKHZhciBoPWktMSxtPXZvaWQgMDtoPj0wJiZcIiBcIj09PShtPXQuY2hhckF0KGgpKTtoLS0pO20mJklpLnRlc3QobSl8fChsPSEwKX19ZWxzZSB2b2lkIDA9PT1vPyh2PWkrMSxvPXQuc2xpY2UoMCxpKS50cmltKCkpOmUoKTtpZih2b2lkIDA9PT1vP289dC5zbGljZSgwLGkpLnRyaW0oKTowIT09diYmZSgpLGEpZm9yKGk9MDtpPGEubGVuZ3RoO2krKylvPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5pbmRleE9mKFwiKFwiKTt7aWYobjwwKXJldHVybidfZihcIicrZSsnXCIpKCcrdCtcIilcIjt2YXIgcj1lLnNsaWNlKDAsbiksaT1lLnNsaWNlKG4rMSk7cmV0dXJuJ19mKFwiJytyKydcIikoJyt0K1wiLFwiK2l9fShvLGFbaV0pO3JldHVybiBvfWZ1bmN0aW9uIHNlKHQpe2NvbnNvbGUuZXJyb3IoXCJbVnVlIGNvbXBpbGVyXTogXCIrdCl9ZnVuY3Rpb24gY2UodCxlKXtyZXR1cm4gdD90Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdFtlXX0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdH0pOltdfWZ1bmN0aW9uIHVlKHQsZSxuKXsodC5wcm9wc3x8KHQucHJvcHM9W10pKS5wdXNoKHtuYW1lOmUsdmFsdWU6bn0pLHQucGxhaW49ITF9ZnVuY3Rpb24gbGUodCxlLG4peyh0LmF0dHJzfHwodC5hdHRycz1bXSkpLnB1c2goe25hbWU6ZSx2YWx1ZTpufSksdC5wbGFpbj0hMX1mdW5jdGlvbiBmZSh0LGUsbil7dC5hdHRyc01hcFtlXT1uLHQuYXR0cnNMaXN0LnB1c2goe25hbWU6ZSx2YWx1ZTpufSl9ZnVuY3Rpb24gcGUodCxlLG4scixpLG8peyh0LmRpcmVjdGl2ZXN8fCh0LmRpcmVjdGl2ZXM9W10pKS5wdXNoKHtuYW1lOmUscmF3TmFtZTpuLHZhbHVlOnIsYXJnOmksbW9kaWZpZXJzOm99KSx0LnBsYWluPSExfWZ1bmN0aW9uIGRlKHQsZSxuLHIsaSxvKXsocj1yfHxqbikuY2FwdHVyZSYmKGRlbGV0ZSByLmNhcHR1cmUsZT1cIiFcIitlKSxyLm9uY2UmJihkZWxldGUgci5vbmNlLGU9XCJ+XCIrZSksci5wYXNzaXZlJiYoZGVsZXRlIHIucGFzc2l2ZSxlPVwiJlwiK2UpLFwiY2xpY2tcIj09PWUmJihyLnJpZ2h0PyhlPVwiY29udGV4dG1lbnVcIixkZWxldGUgci5yaWdodCk6ci5taWRkbGUmJihlPVwibW91c2V1cFwiKSk7dmFyIGE7ci5uYXRpdmU/KGRlbGV0ZSByLm5hdGl2ZSxhPXQubmF0aXZlRXZlbnRzfHwodC5uYXRpdmVFdmVudHM9e30pKTphPXQuZXZlbnRzfHwodC5ldmVudHM9e30pO3ZhciBzPXt2YWx1ZTpufTtyIT09am4mJihzLm1vZGlmaWVycz1yKTt2YXIgYz1hW2VdO0FycmF5LmlzQXJyYXkoYyk/aT9jLnVuc2hpZnQocyk6Yy5wdXNoKHMpOmFbZV09Yz9pP1tzLGNdOltjLHNdOnMsdC5wbGFpbj0hMX1mdW5jdGlvbiB2ZSh0LGUsbil7dmFyIHI9aGUodCxcIjpcIitlKXx8aGUodCxcInYtYmluZDpcIitlKTtpZihudWxsIT1yKXJldHVybiBhZShyKTtpZighMSE9PW4pe3ZhciBpPWhlKHQsZSk7aWYobnVsbCE9aSlyZXR1cm4gSlNPTi5zdHJpbmdpZnkoaSl9fWZ1bmN0aW9uIGhlKHQsZSxuKXt2YXIgcjtpZihudWxsIT0ocj10LmF0dHJzTWFwW2VdKSlmb3IodmFyIGk9dC5hdHRyc0xpc3Qsbz0wLGE9aS5sZW5ndGg7bzxhO28rKylpZihpW29dLm5hbWU9PT1lKXtpLnNwbGljZShvLDEpO2JyZWFrfXJldHVybiBuJiZkZWxldGUgdC5hdHRyc01hcFtlXSxyfWZ1bmN0aW9uIG1lKHQsZSxuKXt2YXIgcj1ufHx7fSxpPVwiJCR2XCI7ci50cmltJiYoaT1cIih0eXBlb2YgJCR2ID09PSAnc3RyaW5nJz8gJCR2LnRyaW0oKTogJCR2KVwiKSxyLm51bWJlciYmKGk9XCJfbihcIitpK1wiKVwiKTt2YXIgbz15ZShlLGkpO3QubW9kZWw9e3ZhbHVlOlwiKFwiK2UrXCIpXCIsZXhwcmVzc2lvbjonXCInK2UrJ1wiJyxjYWxsYmFjazpcImZ1bmN0aW9uICgkJHYpIHtcIitvK1wifVwifX1mdW5jdGlvbiB5ZSh0LGUpe3ZhciBuPWZ1bmN0aW9uKHQpe2lmKGVpPXQubGVuZ3RoLHQuaW5kZXhPZihcIltcIik8MHx8dC5sYXN0SW5kZXhPZihcIl1cIik8ZWktMSlyZXR1cm4oaWk9dC5sYXN0SW5kZXhPZihcIi5cIikpPi0xP3tleHA6dC5zbGljZSgwLGlpKSxrZXk6J1wiJyt0LnNsaWNlKGlpKzEpKydcIid9OntleHA6dCxrZXk6bnVsbH07bmk9dCxpaT1vaT1haT0wO2Zvcig7IV9lKCk7KWJlKHJpPWdlKCkpPyRlKHJpKTo5MT09PXJpJiZmdW5jdGlvbih0KXt2YXIgZT0xO29pPWlpO2Zvcig7IV9lKCk7KWlmKHQ9Z2UoKSxiZSh0KSkkZSh0KTtlbHNlIGlmKDkxPT09dCYmZSsrLDkzPT09dCYmZS0tLDA9PT1lKXthaT1paTticmVha319KHJpKTtyZXR1cm57ZXhwOnQuc2xpY2UoMCxvaSksa2V5OnQuc2xpY2Uob2krMSxhaSl9fSh0KTtyZXR1cm4gbnVsbD09PW4ua2V5P3QrXCI9XCIrZTpcIiRzZXQoXCIrbi5leHArXCIsIFwiK24ua2V5K1wiLCBcIitlK1wiKVwifWZ1bmN0aW9uIGdlKCl7cmV0dXJuIG5pLmNoYXJDb2RlQXQoKytpaSl9ZnVuY3Rpb24gX2UoKXtyZXR1cm4gaWk+PWVpfWZ1bmN0aW9uIGJlKHQpe3JldHVybiAzND09PXR8fDM5PT09dH1mdW5jdGlvbiAkZSh0KXtmb3IodmFyIGU9dDshX2UoKSYmKHQ9Z2UoKSkhPT1lOyk7fWZ1bmN0aW9uIENlKHQsZSxuLHIsaSl7ZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5fd2l0aFRhc2t8fCh0Ll93aXRoVGFzaz1mdW5jdGlvbigpe0VyPSEwO3ZhciBlPXQuYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiBFcj0hMSxlfSl9KGUpLG4mJihlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1zaTtyZXR1cm4gZnVuY3Rpb24gaSgpe251bGwhPT10LmFwcGx5KG51bGwsYXJndW1lbnRzKSYmd2UoZSxpLG4scil9fShlLHQscikpLHNpLmFkZEV2ZW50TGlzdGVuZXIodCxlLG9yP3tjYXB0dXJlOnIscGFzc2l2ZTppfTpyKX1mdW5jdGlvbiB3ZSh0LGUsbixyKXsocnx8c2kpLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxlLl93aXRoVGFza3x8ZSxuKX1mdW5jdGlvbiB4ZShuLHIpe2lmKCF0KG4uZGF0YS5vbil8fCF0KHIuZGF0YS5vbikpe3ZhciBpPXIuZGF0YS5vbnx8e30sbz1uLmRhdGEub258fHt9O3NpPXIuZWxtLGZ1bmN0aW9uKHQpe2lmKGUodFtMaV0pKXt2YXIgbj1Rbj9cImNoYW5nZVwiOlwiaW5wdXRcIjt0W25dPVtdLmNvbmNhdCh0W0xpXSx0W25dfHxbXSksZGVsZXRlIHRbTGldfWUodFtNaV0pJiYodC5jaGFuZ2U9W10uY29uY2F0KHRbTWldLHQuY2hhbmdlfHxbXSksZGVsZXRlIHRbTWldKX0oaSksWChpLG8sQ2Usd2Usci5jb250ZXh0KSxzaT12b2lkIDB9fWZ1bmN0aW9uIGtlKG4scil7aWYoIXQobi5kYXRhLmRvbVByb3BzKXx8IXQoci5kYXRhLmRvbVByb3BzKSl7dmFyIGksbyxhPXIuZWxtLHM9bi5kYXRhLmRvbVByb3BzfHx7fSx1PXIuZGF0YS5kb21Qcm9wc3x8e307ZSh1Ll9fb2JfXykmJih1PXIuZGF0YS5kb21Qcm9wcz1oKHt9LHUpKTtmb3IoaSBpbiBzKXQodVtpXSkmJihhW2ldPVwiXCIpO2ZvcihpIGluIHUpe2lmKG89dVtpXSxcInRleHRDb250ZW50XCI9PT1pfHxcImlubmVySFRNTFwiPT09aSl7aWYoci5jaGlsZHJlbiYmKHIuY2hpbGRyZW4ubGVuZ3RoPTApLG89PT1zW2ldKWNvbnRpbnVlOzE9PT1hLmNoaWxkTm9kZXMubGVuZ3RoJiZhLnJlbW92ZUNoaWxkKGEuY2hpbGROb2Rlc1swXSl9aWYoXCJ2YWx1ZVwiPT09aSl7YS5fdmFsdWU9bzt2YXIgbD10KG8pP1wiXCI6U3RyaW5nKG8pOyhmdW5jdGlvbih0LG4pe3JldHVybiF0LmNvbXBvc2luZyYmKFwiT1BUSU9OXCI9PT10LnRhZ05hbWV8fGZ1bmN0aW9uKHQsZSl7dmFyIG49ITA7dHJ5e249ZG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PXR9Y2F0Y2godCl7fXJldHVybiBuJiZ0LnZhbHVlIT09ZX0odCxuKXx8ZnVuY3Rpb24odCxuKXt2YXIgcj10LnZhbHVlLGk9dC5fdk1vZGlmaWVycztpZihlKGkpKXtpZihpLmxhenkpcmV0dXJuITE7aWYoaS5udW1iZXIpcmV0dXJuIGMocikhPT1jKG4pO2lmKGkudHJpbSlyZXR1cm4gci50cmltKCkhPT1uLnRyaW0oKX1yZXR1cm4gciE9PW59KHQsbikpfSkoYSxsKSYmKGEudmFsdWU9bCl9ZWxzZSBhW2ldPW99fX1mdW5jdGlvbiBBZSh0KXt2YXIgZT1PZSh0LnN0eWxlKTtyZXR1cm4gdC5zdGF0aWNTdHlsZT9oKHQuc3RhdGljU3R5bGUsZSk6ZX1mdW5jdGlvbiBPZSh0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT9tKHQpOlwic3RyaW5nXCI9PXR5cGVvZiB0P0ZpKHQpOnR9ZnVuY3Rpb24gU2UobixyKXt2YXIgaT1yLmRhdGEsbz1uLmRhdGE7aWYoISh0KGkuc3RhdGljU3R5bGUpJiZ0KGkuc3R5bGUpJiZ0KG8uc3RhdGljU3R5bGUpJiZ0KG8uc3R5bGUpKSl7dmFyIGEscyxjPXIuZWxtLHU9by5zdGF0aWNTdHlsZSxsPW8ubm9ybWFsaXplZFN0eWxlfHxvLnN0eWxlfHx7fSxmPXV8fGwscD1PZShyLmRhdGEuc3R5bGUpfHx7fTtyLmRhdGEubm9ybWFsaXplZFN0eWxlPWUocC5fX29iX18pP2goe30scCk6cDt2YXIgZD1mdW5jdGlvbih0LGUpe3ZhciBuLHI9e307aWYoZSlmb3IodmFyIGk9dDtpLmNvbXBvbmVudEluc3RhbmNlOykoaT1pLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZSkmJmkuZGF0YSYmKG49QWUoaS5kYXRhKSkmJmgocixuKTsobj1BZSh0LmRhdGEpKSYmaChyLG4pO2Zvcih2YXIgbz10O289by5wYXJlbnQ7KW8uZGF0YSYmKG49QWUoby5kYXRhKSkmJmgocixuKTtyZXR1cm4gcn0ociwhMCk7Zm9yKHMgaW4gZil0KGRbc10pJiZCaShjLHMsXCJcIik7Zm9yKHMgaW4gZCkoYT1kW3NdKSE9PWZbc10mJkJpKGMscyxudWxsPT1hP1wiXCI6YSl9fWZ1bmN0aW9uIFRlKHQsZSl7aWYoZSYmKGU9ZS50cmltKCkpKWlmKHQuY2xhc3NMaXN0KWUuaW5kZXhPZihcIiBcIik+LTE/ZS5zcGxpdCgvXFxzKy8pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2xhc3NMaXN0LmFkZChlKX0pOnQuY2xhc3NMaXN0LmFkZChlKTtlbHNle3ZhciBuPVwiIFwiKyh0LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKStcIiBcIjtuLmluZGV4T2YoXCIgXCIrZStcIiBcIik8MCYmdC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLChuK2UpLnRyaW0oKSl9fWZ1bmN0aW9uIEVlKHQsZSl7aWYoZSYmKGU9ZS50cmltKCkpKWlmKHQuY2xhc3NMaXN0KWUuaW5kZXhPZihcIiBcIik+LTE/ZS5zcGxpdCgvXFxzKy8pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2xhc3NMaXN0LnJlbW92ZShlKX0pOnQuY2xhc3NMaXN0LnJlbW92ZShlKSx0LmNsYXNzTGlzdC5sZW5ndGh8fHQucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIik7ZWxzZXtmb3IodmFyIG49XCIgXCIrKHQuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCIpK1wiIFwiLHI9XCIgXCIrZStcIiBcIjtuLmluZGV4T2Yocik+PTA7KW49bi5yZXBsYWNlKHIsXCIgXCIpOyhuPW4udHJpbSgpKT90LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsbik6dC5yZW1vdmVBdHRyaWJ1dGUoXCJjbGFzc1wiKX19ZnVuY3Rpb24gamUodCl7aWYodCl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQpe3ZhciBlPXt9O3JldHVybiExIT09dC5jc3MmJmgoZSxLaSh0Lm5hbWV8fFwidlwiKSksaChlLHQpLGV9cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/S2kodCk6dm9pZCAwfX1mdW5jdGlvbiBOZSh0KXtRaShmdW5jdGlvbigpe1FpKHQpfSl9ZnVuY3Rpb24gSWUodCxlKXt2YXIgbj10Ll90cmFuc2l0aW9uQ2xhc3Nlc3x8KHQuX3RyYW5zaXRpb25DbGFzc2VzPVtdKTtuLmluZGV4T2YoZSk8MCYmKG4ucHVzaChlKSxUZSh0LGUpKX1mdW5jdGlvbiBMZSh0LGUpe3QuX3RyYW5zaXRpb25DbGFzc2VzJiZsKHQuX3RyYW5zaXRpb25DbGFzc2VzLGUpLEVlKHQsZSl9ZnVuY3Rpb24gTWUodCxlLG4pe3ZhciByPURlKHQsZSksaT1yLnR5cGUsbz1yLnRpbWVvdXQsYT1yLnByb3BDb3VudDtpZighaSlyZXR1cm4gbigpO3ZhciBzPWk9PT1xaT9aaTpZaSxjPTAsdT1mdW5jdGlvbigpe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihzLGwpLG4oKX0sbD1mdW5jdGlvbihlKXtlLnRhcmdldD09PXQmJisrYz49YSYmdSgpfTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YzxhJiZ1KCl9LG8rMSksdC5hZGRFdmVudExpc3RlbmVyKHMsbCl9ZnVuY3Rpb24gRGUodCxlKXt2YXIgbixyPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpLGk9cltHaStcIkRlbGF5XCJdLnNwbGl0KFwiLCBcIiksbz1yW0dpK1wiRHVyYXRpb25cIl0uc3BsaXQoXCIsIFwiKSxhPVBlKGksbykscz1yW1hpK1wiRGVsYXlcIl0uc3BsaXQoXCIsIFwiKSxjPXJbWGkrXCJEdXJhdGlvblwiXS5zcGxpdChcIiwgXCIpLHU9UGUocyxjKSxsPTAsZj0wO2U9PT1xaT9hPjAmJihuPXFpLGw9YSxmPW8ubGVuZ3RoKTplPT09V2k/dT4wJiYobj1XaSxsPXUsZj1jLmxlbmd0aCk6Zj0obj0obD1NYXRoLm1heChhLHUpKT4wP2E+dT9xaTpXaTpudWxsKT9uPT09cWk/by5sZW5ndGg6Yy5sZW5ndGg6MDtyZXR1cm57dHlwZTpuLHRpbWVvdXQ6bCxwcm9wQ291bnQ6ZixoYXNUcmFuc2Zvcm06bj09PXFpJiZ0by50ZXN0KHJbR2krXCJQcm9wZXJ0eVwiXSl9fWZ1bmN0aW9uIFBlKHQsZSl7Zm9yKDt0Lmxlbmd0aDxlLmxlbmd0aDspdD10LmNvbmNhdCh0KTtyZXR1cm4gTWF0aC5tYXguYXBwbHkobnVsbCxlLm1hcChmdW5jdGlvbihlLG4pe3JldHVybiBGZShlKStGZSh0W25dKX0pKX1mdW5jdGlvbiBGZSh0KXtyZXR1cm4gMWUzKk51bWJlcih0LnNsaWNlKDAsLTEpKX1mdW5jdGlvbiBSZShuLHIpe3ZhciBvPW4uZWxtO2Uoby5fbGVhdmVDYikmJihvLl9sZWF2ZUNiLmNhbmNlbGxlZD0hMCxvLl9sZWF2ZUNiKCkpO3ZhciBhPWplKG4uZGF0YS50cmFuc2l0aW9uKTtpZighdChhKSYmIWUoby5fZW50ZXJDYikmJjE9PT1vLm5vZGVUeXBlKXtmb3IodmFyIHM9YS5jc3MsdT1hLnR5cGUsbD1hLmVudGVyQ2xhc3MsZj1hLmVudGVyVG9DbGFzcyxwPWEuZW50ZXJBY3RpdmVDbGFzcyxkPWEuYXBwZWFyQ2xhc3Msdj1hLmFwcGVhclRvQ2xhc3MsaD1hLmFwcGVhckFjdGl2ZUNsYXNzLG09YS5iZWZvcmVFbnRlcix5PWEuZW50ZXIsZz1hLmFmdGVyRW50ZXIsXz1hLmVudGVyQ2FuY2VsbGVkLCQ9YS5iZWZvcmVBcHBlYXIsQz1hLmFwcGVhcix3PWEuYWZ0ZXJBcHBlYXIseD1hLmFwcGVhckNhbmNlbGxlZCxrPWEuZHVyYXRpb24sQT1QcixPPVByLiR2bm9kZTtPJiZPLnBhcmVudDspQT0oTz1PLnBhcmVudCkuY29udGV4dDt2YXIgUz0hQS5faXNNb3VudGVkfHwhbi5pc1Jvb3RJbnNlcnQ7aWYoIVN8fEN8fFwiXCI9PT1DKXt2YXIgVD1TJiZkP2Q6bCxFPVMmJmg/aDpwLGo9UyYmdj92OmYsTj1TPyR8fG06bSxJPVMmJlwiZnVuY3Rpb25cIj09dHlwZW9mIEM/Qzp5LEw9Uz93fHxnOmcsTT1TP3h8fF86XyxEPWMoaShrKT9rLmVudGVyOmspLFA9ITEhPT1zJiYhdHIsRj1VZShJKSxSPW8uX2VudGVyQ2I9YihmdW5jdGlvbigpe1AmJihMZShvLGopLExlKG8sRSkpLFIuY2FuY2VsbGVkPyhQJiZMZShvLFQpLE0mJk0obykpOkwmJkwobyksby5fZW50ZXJDYj1udWxsfSk7bi5kYXRhLnNob3d8fFkobixcImluc2VydFwiLGZ1bmN0aW9uKCl7dmFyIHQ9by5wYXJlbnROb2RlLGU9dCYmdC5fcGVuZGluZyYmdC5fcGVuZGluZ1tuLmtleV07ZSYmZS50YWc9PT1uLnRhZyYmZS5lbG0uX2xlYXZlQ2ImJmUuZWxtLl9sZWF2ZUNiKCksSSYmSShvLFIpfSksTiYmTihvKSxQJiYoSWUobyxUKSxJZShvLEUpLE5lKGZ1bmN0aW9uKCl7SWUobyxqKSxMZShvLFQpLFIuY2FuY2VsbGVkfHxGfHwoQmUoRCk/c2V0VGltZW91dChSLEQpOk1lKG8sdSxSKSl9KSksbi5kYXRhLnNob3cmJihyJiZyKCksSSYmSShvLFIpKSxQfHxGfHxSKCl9fX1mdW5jdGlvbiBIZShuLHIpe2Z1bmN0aW9uIG8oKXt4LmNhbmNlbGxlZHx8KG4uZGF0YS5zaG93fHwoKGEucGFyZW50Tm9kZS5fcGVuZGluZ3x8KGEucGFyZW50Tm9kZS5fcGVuZGluZz17fSkpW24ua2V5XT1uKSx2JiZ2KGEpLCQmJihJZShhLGYpLEllKGEsZCksTmUoZnVuY3Rpb24oKXtJZShhLHApLExlKGEsZikseC5jYW5jZWxsZWR8fEN8fChCZSh3KT9zZXRUaW1lb3V0KHgsdyk6TWUoYSxsLHgpKX0pKSxoJiZoKGEseCksJHx8Q3x8eCgpKX12YXIgYT1uLmVsbTtlKGEuX2VudGVyQ2IpJiYoYS5fZW50ZXJDYi5jYW5jZWxsZWQ9ITAsYS5fZW50ZXJDYigpKTt2YXIgcz1qZShuLmRhdGEudHJhbnNpdGlvbik7aWYodChzKXx8MSE9PWEubm9kZVR5cGUpcmV0dXJuIHIoKTtpZighZShhLl9sZWF2ZUNiKSl7dmFyIHU9cy5jc3MsbD1zLnR5cGUsZj1zLmxlYXZlQ2xhc3MscD1zLmxlYXZlVG9DbGFzcyxkPXMubGVhdmVBY3RpdmVDbGFzcyx2PXMuYmVmb3JlTGVhdmUsaD1zLmxlYXZlLG09cy5hZnRlckxlYXZlLHk9cy5sZWF2ZUNhbmNlbGxlZCxnPXMuZGVsYXlMZWF2ZSxfPXMuZHVyYXRpb24sJD0hMSE9PXUmJiF0cixDPVVlKGgpLHc9YyhpKF8pP18ubGVhdmU6XykseD1hLl9sZWF2ZUNiPWIoZnVuY3Rpb24oKXthLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5fcGVuZGluZyYmKGEucGFyZW50Tm9kZS5fcGVuZGluZ1tuLmtleV09bnVsbCksJCYmKExlKGEscCksTGUoYSxkKSkseC5jYW5jZWxsZWQ/KCQmJkxlKGEsZikseSYmeShhKSk6KHIoKSxtJiZtKGEpKSxhLl9sZWF2ZUNiPW51bGx9KTtnP2cobyk6bygpfX1mdW5jdGlvbiBCZSh0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmIWlzTmFOKHQpfWZ1bmN0aW9uIFVlKG4pe2lmKHQobikpcmV0dXJuITE7dmFyIHI9bi5mbnM7cmV0dXJuIGUocik/VWUoQXJyYXkuaXNBcnJheShyKT9yWzBdOnIpOihuLl9sZW5ndGh8fG4ubGVuZ3RoKT4xfWZ1bmN0aW9uIFZlKHQsZSl7ITAhPT1lLmRhdGEuc2hvdyYmUmUoZSl9ZnVuY3Rpb24gemUodCxlLG4pe0tlKHQsZSxuKSwoUW58fGVyKSYmc2V0VGltZW91dChmdW5jdGlvbigpe0tlKHQsZSxuKX0sMCl9ZnVuY3Rpb24gS2UodCxlLG4pe3ZhciByPWUudmFsdWUsaT10Lm11bHRpcGxlO2lmKCFpfHxBcnJheS5pc0FycmF5KHIpKXtmb3IodmFyIG8sYSxzPTAsYz10Lm9wdGlvbnMubGVuZ3RoO3M8YztzKyspaWYoYT10Lm9wdGlvbnNbc10saSlvPV8ocixxZShhKSk+LTEsYS5zZWxlY3RlZCE9PW8mJihhLnNlbGVjdGVkPW8pO2Vsc2UgaWYoZyhxZShhKSxyKSlyZXR1cm4gdm9pZCh0LnNlbGVjdGVkSW5kZXghPT1zJiYodC5zZWxlY3RlZEluZGV4PXMpKTtpfHwodC5zZWxlY3RlZEluZGV4PS0xKX19ZnVuY3Rpb24gSmUodCxlKXtyZXR1cm4gZS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4hZyhlLHQpfSl9ZnVuY3Rpb24gcWUodCl7cmV0dXJuXCJfdmFsdWVcImluIHQ/dC5fdmFsdWU6dC52YWx1ZX1mdW5jdGlvbiBXZSh0KXt0LnRhcmdldC5jb21wb3Npbmc9ITB9ZnVuY3Rpb24gR2UodCl7dC50YXJnZXQuY29tcG9zaW5nJiYodC50YXJnZXQuY29tcG9zaW5nPSExLFplKHQudGFyZ2V0LFwiaW5wdXRcIikpfWZ1bmN0aW9uIFplKHQsZSl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJIVE1MRXZlbnRzXCIpO24uaW5pdEV2ZW50KGUsITAsITApLHQuZGlzcGF0Y2hFdmVudChuKX1mdW5jdGlvbiBYZSh0KXtyZXR1cm4hdC5jb21wb25lbnRJbnN0YW5jZXx8dC5kYXRhJiZ0LmRhdGEudHJhbnNpdGlvbj90OlhlKHQuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlKX1mdW5jdGlvbiBZZSh0KXt2YXIgZT10JiZ0LmNvbXBvbmVudE9wdGlvbnM7cmV0dXJuIGUmJmUuQ3Rvci5vcHRpb25zLmFic3RyYWN0P1llKGl0KGUuY2hpbGRyZW4pKTp0fWZ1bmN0aW9uIFFlKHQpe3ZhciBlPXt9LG49dC4kb3B0aW9ucztmb3IodmFyIHIgaW4gbi5wcm9wc0RhdGEpZVtyXT10W3JdO3ZhciBpPW4uX3BhcmVudExpc3RlbmVycztmb3IodmFyIG8gaW4gaSllW1BuKG8pXT1pW29dO3JldHVybiBlfWZ1bmN0aW9uIHRuKHQsZSl7aWYoL1xcZC1rZWVwLWFsaXZlJC8udGVzdChlLnRhZykpcmV0dXJuIHQoXCJrZWVwLWFsaXZlXCIse3Byb3BzOmUuY29tcG9uZW50T3B0aW9ucy5wcm9wc0RhdGF9KX1mdW5jdGlvbiBlbih0KXt0LmVsbS5fbW92ZUNiJiZ0LmVsbS5fbW92ZUNiKCksdC5lbG0uX2VudGVyQ2ImJnQuZWxtLl9lbnRlckNiKCl9ZnVuY3Rpb24gbm4odCl7dC5kYXRhLm5ld1Bvcz10LmVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKX1mdW5jdGlvbiBybih0KXt2YXIgZT10LmRhdGEucG9zLG49dC5kYXRhLm5ld1BvcyxyPWUubGVmdC1uLmxlZnQsaT1lLnRvcC1uLnRvcDtpZihyfHxpKXt0LmRhdGEubW92ZWQ9ITA7dmFyIG89dC5lbG0uc3R5bGU7by50cmFuc2Zvcm09by5XZWJraXRUcmFuc2Zvcm09XCJ0cmFuc2xhdGUoXCIrcitcInB4LFwiK2krXCJweClcIixvLnRyYW5zaXRpb25EdXJhdGlvbj1cIjBzXCJ9fWZ1bmN0aW9uIG9uKHQsZSl7dmFyIG49ZT96bzpWbztyZXR1cm4gdC5yZXBsYWNlKG4sZnVuY3Rpb24odCl7cmV0dXJuIFVvW3RdfSl9ZnVuY3Rpb24gYW4odCxlLG4pe3JldHVybnt0eXBlOjEsdGFnOnQsYXR0cnNMaXN0OmUsYXR0cnNNYXA6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXt9LG49MCxyPXQubGVuZ3RoO248cjtuKyspZVt0W25dLm5hbWVdPXRbbl0udmFsdWU7cmV0dXJuIGV9KGUpLHBhcmVudDpuLGNoaWxkcmVuOltdfX1mdW5jdGlvbiBzbih0LGUpe2Z1bmN0aW9uIG4odCl7dC5wcmUmJihzPSExKSxMbyh0LnRhZykmJihjPSExKTtmb3IodmFyIG49MDtuPElvLmxlbmd0aDtuKyspSW9bbl0odCxlKX1Ubz1lLndhcm58fHNlLExvPWUuaXNQcmVUYWd8fEJuLE1vPWUubXVzdFVzZVByb3B8fEJuLERvPWUuZ2V0VGFnTmFtZXNwYWNlfHxCbixqbz1jZShlLm1vZHVsZXMsXCJ0cmFuc2Zvcm1Ob2RlXCIpLE5vPWNlKGUubW9kdWxlcyxcInByZVRyYW5zZm9ybU5vZGVcIiksSW89Y2UoZS5tb2R1bGVzLFwicG9zdFRyYW5zZm9ybU5vZGVcIiksRW89ZS5kZWxpbWl0ZXJzO3ZhciByLGksbz1bXSxhPSExIT09ZS5wcmVzZXJ2ZVdoaXRlc3BhY2Uscz0hMSxjPSExO3JldHVybiBmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oZSl7bCs9ZSx0PXQuc3Vic3RyaW5nKGUpfWZ1bmN0aW9uIHIodCxuLHIpe3ZhciBpLHM7aWYobnVsbD09biYmKG49bCksbnVsbD09ciYmKHI9bCksdCYmKHM9dC50b0xvd2VyQ2FzZSgpKSx0KWZvcihpPWEubGVuZ3RoLTE7aT49MCYmYVtpXS5sb3dlckNhc2VkVGFnIT09cztpLS0pO2Vsc2UgaT0wO2lmKGk+PTApe2Zvcih2YXIgYz1hLmxlbmd0aC0xO2M+PWk7Yy0tKWUuZW5kJiZlLmVuZChhW2NdLnRhZyxuLHIpO2EubGVuZ3RoPWksbz1pJiZhW2ktMV0udGFnfWVsc2VcImJyXCI9PT1zP2Uuc3RhcnQmJmUuc3RhcnQodCxbXSwhMCxuLHIpOlwicFwiPT09cyYmKGUuc3RhcnQmJmUuc3RhcnQodCxbXSwhMSxuLHIpLGUuZW5kJiZlLmVuZCh0LG4scikpfWZvcih2YXIgaSxvLGE9W10scz1lLmV4cGVjdEhUTUwsYz1lLmlzVW5hcnlUYWd8fEJuLHU9ZS5jYW5CZUxlZnRPcGVuVGFnfHxCbixsPTA7dDspe2lmKGk9dCxvJiZIbyhvKSl7dmFyIGY9MCxwPW8udG9Mb3dlckNhc2UoKSxkPUJvW3BdfHwoQm9bcF09bmV3IFJlZ0V4cChcIihbXFxcXHNcXFxcU10qPykoPC9cIitwK1wiW14+XSo+KVwiLFwiaVwiKSksdj10LnJlcGxhY2UoZCxmdW5jdGlvbih0LG4scil7cmV0dXJuIGY9ci5sZW5ndGgsSG8ocCl8fFwibm9zY3JpcHRcIj09PXB8fChuPW4ucmVwbGFjZSgvPCEtLShbXFxzXFxTXSo/KS0tPi9nLFwiJDFcIikucmVwbGFjZSgvPCFcXFtDREFUQVxcWyhbXFxzXFxTXSo/KV1dPi9nLFwiJDFcIikpLEpvKHAsbikmJihuPW4uc2xpY2UoMSkpLGUuY2hhcnMmJmUuY2hhcnMobiksXCJcIn0pO2wrPXQubGVuZ3RoLXYubGVuZ3RoLHQ9dixyKHAsbC1mLGwpfWVsc2V7dmFyIGg9dC5pbmRleE9mKFwiPFwiKTtpZigwPT09aCl7aWYoQW8udGVzdCh0KSl7dmFyIG09dC5pbmRleE9mKFwiLS1cXHgzZVwiKTtpZihtPj0wKXtlLnNob3VsZEtlZXBDb21tZW50JiZlLmNvbW1lbnQodC5zdWJzdHJpbmcoNCxtKSksbihtKzMpO2NvbnRpbnVlfX1pZihPby50ZXN0KHQpKXt2YXIgeT10LmluZGV4T2YoXCJdPlwiKTtpZih5Pj0wKXtuKHkrMik7Y29udGludWV9fXZhciBnPXQubWF0Y2goa28pO2lmKGcpe24oZ1swXS5sZW5ndGgpO2NvbnRpbnVlfXZhciBfPXQubWF0Y2goeG8pO2lmKF8pe3ZhciBiPWw7bihfWzBdLmxlbmd0aCkscihfWzFdLGIsbCk7Y29udGludWV9dmFyICQ9ZnVuY3Rpb24oKXt2YXIgZT10Lm1hdGNoKENvKTtpZihlKXt2YXIgcj17dGFnTmFtZTplWzFdLGF0dHJzOltdLHN0YXJ0Omx9O24oZVswXS5sZW5ndGgpO2Zvcih2YXIgaSxvOyEoaT10Lm1hdGNoKHdvKSkmJihvPXQubWF0Y2goX28pKTspbihvWzBdLmxlbmd0aCksci5hdHRycy5wdXNoKG8pO2lmKGkpcmV0dXJuIHIudW5hcnlTbGFzaD1pWzFdLG4oaVswXS5sZW5ndGgpLHIuZW5kPWwscn19KCk7aWYoJCl7IWZ1bmN0aW9uKHQpe3ZhciBuPXQudGFnTmFtZSxpPXQudW5hcnlTbGFzaDtzJiYoXCJwXCI9PT1vJiZnbyhuKSYmcihvKSx1KG4pJiZvPT09biYmcihuKSk7Zm9yKHZhciBsPWMobil8fCEhaSxmPXQuYXR0cnMubGVuZ3RoLHA9bmV3IEFycmF5KGYpLGQ9MDtkPGY7ZCsrKXt2YXIgdj10LmF0dHJzW2RdO1NvJiYtMT09PXZbMF0uaW5kZXhPZignXCJcIicpJiYoXCJcIj09PXZbM10mJmRlbGV0ZSB2WzNdLFwiXCI9PT12WzRdJiZkZWxldGUgdls0XSxcIlwiPT09dls1XSYmZGVsZXRlIHZbNV0pO3ZhciBoPXZbM118fHZbNF18fHZbNV18fFwiXCIsbT1cImFcIj09PW4mJlwiaHJlZlwiPT09dlsxXT9lLnNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZjplLnNob3VsZERlY29kZU5ld2xpbmVzO3BbZF09e25hbWU6dlsxXSx2YWx1ZTpvbihoLG0pfX1sfHwoYS5wdXNoKHt0YWc6bixsb3dlckNhc2VkVGFnOm4udG9Mb3dlckNhc2UoKSxhdHRyczpwfSksbz1uKSxlLnN0YXJ0JiZlLnN0YXJ0KG4scCxsLHQuc3RhcnQsdC5lbmQpfSgkKSxKbyhvLHQpJiZuKDEpO2NvbnRpbnVlfX12YXIgQz12b2lkIDAsdz12b2lkIDAseD12b2lkIDA7aWYoaD49MCl7Zm9yKHc9dC5zbGljZShoKTshKHhvLnRlc3Qodyl8fENvLnRlc3Qodyl8fEFvLnRlc3Qodyl8fE9vLnRlc3Qodyl8fCh4PXcuaW5kZXhPZihcIjxcIiwxKSk8MCk7KWgrPXgsdz10LnNsaWNlKGgpO0M9dC5zdWJzdHJpbmcoMCxoKSxuKGgpfWg8MCYmKEM9dCx0PVwiXCIpLGUuY2hhcnMmJkMmJmUuY2hhcnMoQyl9aWYodD09PWkpe2UuY2hhcnMmJmUuY2hhcnModCk7YnJlYWt9fXIoKX0odCx7d2FybjpUbyxleHBlY3RIVE1MOmUuZXhwZWN0SFRNTCxpc1VuYXJ5VGFnOmUuaXNVbmFyeVRhZyxjYW5CZUxlZnRPcGVuVGFnOmUuY2FuQmVMZWZ0T3BlblRhZyxzaG91bGREZWNvZGVOZXdsaW5lczplLnNob3VsZERlY29kZU5ld2xpbmVzLHNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZjplLnNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZixzaG91bGRLZWVwQ29tbWVudDplLmNvbW1lbnRzLHN0YXJ0OmZ1bmN0aW9uKHQsYSx1KXt2YXIgbD1pJiZpLm5zfHxEbyh0KTtRbiYmXCJzdmdcIj09PWwmJihhPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07bmEudGVzdChyLm5hbWUpfHwoci5uYW1lPXIubmFtZS5yZXBsYWNlKHJhLFwiXCIpLGUucHVzaChyKSl9cmV0dXJuIGV9KGEpKTt2YXIgZj1hbih0LGEsaSk7bCYmKGYubnM9bCksZnVuY3Rpb24odCl7cmV0dXJuXCJzdHlsZVwiPT09dC50YWd8fFwic2NyaXB0XCI9PT10LnRhZyYmKCF0LmF0dHJzTWFwLnR5cGV8fFwidGV4dC9qYXZhc2NyaXB0XCI9PT10LmF0dHJzTWFwLnR5cGUpfShmKSYmIXVyKCkmJihmLmZvcmJpZGRlbj0hMCk7Zm9yKHZhciBwPTA7cDxOby5sZW5ndGg7cCsrKWY9Tm9bcF0oZixlKXx8ZjtpZihzfHwoIWZ1bmN0aW9uKHQpe251bGwhPWhlKHQsXCJ2LXByZVwiKSYmKHQucHJlPSEwKX0oZiksZi5wcmUmJihzPSEwKSksTG8oZi50YWcpJiYoYz0hMCkscz9mdW5jdGlvbih0KXt2YXIgZT10LmF0dHJzTGlzdC5sZW5ndGg7aWYoZSlmb3IodmFyIG49dC5hdHRycz1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspbltyXT17bmFtZTp0LmF0dHJzTGlzdFtyXS5uYW1lLHZhbHVlOkpTT04uc3RyaW5naWZ5KHQuYXR0cnNMaXN0W3JdLnZhbHVlKX07ZWxzZSB0LnByZXx8KHQucGxhaW49ITApfShmKTpmLnByb2Nlc3NlZHx8KHVuKGYpLGZ1bmN0aW9uKHQpe3ZhciBlPWhlKHQsXCJ2LWlmXCIpO2lmKGUpdC5pZj1lLGxuKHQse2V4cDplLGJsb2NrOnR9KTtlbHNle251bGwhPWhlKHQsXCJ2LWVsc2VcIikmJih0LmVsc2U9ITApO3ZhciBuPWhlKHQsXCJ2LWVsc2UtaWZcIik7biYmKHQuZWxzZWlmPW4pfX0oZiksZnVuY3Rpb24odCl7bnVsbCE9aGUodCxcInYtb25jZVwiKSYmKHQub25jZT0hMCl9KGYpLGNuKGYsZSkpLHI/by5sZW5ndGh8fHIuaWYmJihmLmVsc2VpZnx8Zi5lbHNlKSYmbG4ocix7ZXhwOmYuZWxzZWlmLGJsb2NrOmZ9KTpyPWYsaSYmIWYuZm9yYmlkZGVuKWlmKGYuZWxzZWlmfHxmLmVsc2UpIWZ1bmN0aW9uKHQsZSl7dmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGg7Zm9yKDtlLS07KXtpZigxPT09dFtlXS50eXBlKXJldHVybiB0W2VdO3QucG9wKCl9fShlLmNoaWxkcmVuKTtuJiZuLmlmJiZsbihuLHtleHA6dC5lbHNlaWYsYmxvY2s6dH0pfShmLGkpO2Vsc2UgaWYoZi5zbG90U2NvcGUpe2kucGxhaW49ITE7dmFyIGQ9Zi5zbG90VGFyZ2V0fHwnXCJkZWZhdWx0XCInOyhpLnNjb3BlZFNsb3RzfHwoaS5zY29wZWRTbG90cz17fSkpW2RdPWZ9ZWxzZSBpLmNoaWxkcmVuLnB1c2goZiksZi5wYXJlbnQ9aTt1P24oZik6KGk9ZixvLnB1c2goZikpfSxlbmQ6ZnVuY3Rpb24oKXt2YXIgdD1vW28ubGVuZ3RoLTFdLGU9dC5jaGlsZHJlblt0LmNoaWxkcmVuLmxlbmd0aC0xXTtlJiYzPT09ZS50eXBlJiZcIiBcIj09PWUudGV4dCYmIWMmJnQuY2hpbGRyZW4ucG9wKCksby5sZW5ndGgtPTEsaT1vW28ubGVuZ3RoLTFdLG4odCl9LGNoYXJzOmZ1bmN0aW9uKHQpe2lmKGkmJighUW58fFwidGV4dGFyZWFcIiE9PWkudGFnfHxpLmF0dHJzTWFwLnBsYWNlaG9sZGVyIT09dCkpe3ZhciBlPWkuY2hpbGRyZW47aWYodD1jfHx0LnRyaW0oKT9mdW5jdGlvbih0KXtyZXR1cm5cInNjcmlwdFwiPT09dC50YWd8fFwic3R5bGVcIj09PXQudGFnfShpKT90OmVhKHQpOmEmJmUubGVuZ3RoP1wiIFwiOlwiXCIpe3ZhciBuOyFzJiZcIiBcIiE9PXQmJihuPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZT9mbyhlKTp1bztpZihuLnRlc3QodCkpe2Zvcih2YXIgcixpLG8sYT1bXSxzPVtdLGM9bi5sYXN0SW5kZXg9MDtyPW4uZXhlYyh0KTspeyhpPXIuaW5kZXgpPmMmJihzLnB1c2gobz10LnNsaWNlKGMsaSkpLGEucHVzaChKU09OLnN0cmluZ2lmeShvKSkpO3ZhciB1PWFlKHJbMV0udHJpbSgpKTthLnB1c2goXCJfcyhcIit1K1wiKVwiKSxzLnB1c2goe1wiQGJpbmRpbmdcIjp1fSksYz1pK3JbMF0ubGVuZ3RofXJldHVybiBjPHQubGVuZ3RoJiYocy5wdXNoKG89dC5zbGljZShjKSksYS5wdXNoKEpTT04uc3RyaW5naWZ5KG8pKSkse2V4cHJlc3Npb246YS5qb2luKFwiK1wiKSx0b2tlbnM6c319fSh0LEVvKSk/ZS5wdXNoKHt0eXBlOjIsZXhwcmVzc2lvbjpuLmV4cHJlc3Npb24sdG9rZW5zOm4udG9rZW5zLHRleHQ6dH0pOlwiIFwiPT09dCYmZS5sZW5ndGgmJlwiIFwiPT09ZVtlLmxlbmd0aC0xXS50ZXh0fHxlLnB1c2goe3R5cGU6Myx0ZXh0OnR9KX19fSxjb21tZW50OmZ1bmN0aW9uKHQpe2kuY2hpbGRyZW4ucHVzaCh7dHlwZTozLHRleHQ6dCxpc0NvbW1lbnQ6ITB9KX19KSxyfWZ1bmN0aW9uIGNuKHQsZSl7IWZ1bmN0aW9uKHQpe3ZhciBlPXZlKHQsXCJrZXlcIik7ZSYmKHQua2V5PWUpfSh0KSx0LnBsYWluPSF0LmtleSYmIXQuYXR0cnNMaXN0Lmxlbmd0aCxmdW5jdGlvbih0KXt2YXIgZT12ZSh0LFwicmVmXCIpO2UmJih0LnJlZj1lLHQucmVmSW5Gb3I9ZnVuY3Rpb24odCl7dmFyIGU9dDtmb3IoO2U7KXtpZih2b2lkIDAhPT1lLmZvcilyZXR1cm4hMDtlPWUucGFyZW50fXJldHVybiExfSh0KSl9KHQpLGZ1bmN0aW9uKHQpe2lmKFwic2xvdFwiPT09dC50YWcpdC5zbG90TmFtZT12ZSh0LFwibmFtZVwiKTtlbHNle3ZhciBlO1widGVtcGxhdGVcIj09PXQudGFnPyhlPWhlKHQsXCJzY29wZVwiKSx0LnNsb3RTY29wZT1lfHxoZSh0LFwic2xvdC1zY29wZVwiKSk6KGU9aGUodCxcInNsb3Qtc2NvcGVcIikpJiYodC5zbG90U2NvcGU9ZSk7dmFyIG49dmUodCxcInNsb3RcIik7biYmKHQuc2xvdFRhcmdldD0nXCJcIic9PT1uPydcImRlZmF1bHRcIic6bixcInRlbXBsYXRlXCI9PT10LnRhZ3x8dC5zbG90U2NvcGV8fGxlKHQsXCJzbG90XCIsbikpfX0odCksZnVuY3Rpb24odCl7dmFyIGU7KGU9dmUodCxcImlzXCIpKSYmKHQuY29tcG9uZW50PWUpO251bGwhPWhlKHQsXCJpbmxpbmUtdGVtcGxhdGVcIikmJih0LmlubGluZVRlbXBsYXRlPSEwKX0odCk7Zm9yKHZhciBuPTA7bjxqby5sZW5ndGg7bisrKXQ9am9bbl0odCxlKXx8dDshZnVuY3Rpb24odCl7dmFyIGUsbixyLGksbyxhLHMsYz10LmF0dHJzTGlzdDtmb3IoZT0wLG49Yy5sZW5ndGg7ZTxuO2UrKylpZihyPWk9Y1tlXS5uYW1lLG89Y1tlXS52YWx1ZSxXby50ZXN0KHIpKWlmKHQuaGFzQmluZGluZ3M9ITAsKGE9ZnVuY3Rpb24odCl7dmFyIGU9dC5tYXRjaCh0YSk7aWYoZSl7dmFyIG49e307cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0KXtuW3Quc2xpY2UoMSldPSEwfSksbn19KHIpKSYmKHI9ci5yZXBsYWNlKHRhLFwiXCIpKSxRby50ZXN0KHIpKXI9ci5yZXBsYWNlKFFvLFwiXCIpLG89YWUobykscz0hMSxhJiYoYS5wcm9wJiYocz0hMCxcImlubmVySHRtbFwiPT09KHI9UG4ocikpJiYocj1cImlubmVySFRNTFwiKSksYS5jYW1lbCYmKHI9UG4ocikpLGEuc3luYyYmZGUodCxcInVwZGF0ZTpcIitQbihyKSx5ZShvLFwiJGV2ZW50XCIpKSksc3x8IXQuY29tcG9uZW50JiZNbyh0LnRhZyx0LmF0dHJzTWFwLnR5cGUscik/dWUodCxyLG8pOmxlKHQscixvKTtlbHNlIGlmKHFvLnRlc3Qocikpcj1yLnJlcGxhY2UocW8sXCJcIiksZGUodCxyLG8sYSwhMSk7ZWxzZXt2YXIgdT0ocj1yLnJlcGxhY2UoV28sXCJcIikpLm1hdGNoKFlvKSxsPXUmJnVbMV07bCYmKHI9ci5zbGljZSgwLC0obC5sZW5ndGgrMSkpKSxwZSh0LHIsaSxvLGwsYSl9ZWxzZSBsZSh0LHIsSlNPTi5zdHJpbmdpZnkobykpLCF0LmNvbXBvbmVudCYmXCJtdXRlZFwiPT09ciYmTW8odC50YWcsdC5hdHRyc01hcC50eXBlLHIpJiZ1ZSh0LHIsXCJ0cnVlXCIpfSh0KX1mdW5jdGlvbiB1bih0KXt2YXIgZTtpZihlPWhlKHQsXCJ2LWZvclwiKSl7dmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9dC5tYXRjaChHbyk7aWYoIWUpcmV0dXJuO3ZhciBuPXt9O24uZm9yPWVbMl0udHJpbSgpO3ZhciByPWVbMV0udHJpbSgpLnJlcGxhY2UoWG8sXCJcIiksaT1yLm1hdGNoKFpvKTtpPyhuLmFsaWFzPXIucmVwbGFjZShabyxcIlwiKSxuLml0ZXJhdG9yMT1pWzFdLnRyaW0oKSxpWzJdJiYobi5pdGVyYXRvcjI9aVsyXS50cmltKCkpKTpuLmFsaWFzPXI7cmV0dXJuIG59KGUpO24mJmgodCxuKX19ZnVuY3Rpb24gbG4odCxlKXt0LmlmQ29uZGl0aW9uc3x8KHQuaWZDb25kaXRpb25zPVtdKSx0LmlmQ29uZGl0aW9ucy5wdXNoKGUpfWZ1bmN0aW9uIGZuKHQpe3JldHVybiBhbih0LnRhZyx0LmF0dHJzTGlzdC5zbGljZSgpLHQucGFyZW50KX1mdW5jdGlvbiBwbih0KXtpZih0LnN0YXRpYz1mdW5jdGlvbih0KXtpZigyPT09dC50eXBlKXJldHVybiExO2lmKDM9PT10LnR5cGUpcmV0dXJuITA7cmV0dXJuISghdC5wcmUmJih0Lmhhc0JpbmRpbmdzfHx0LmlmfHx0LmZvcnx8SW4odC50YWcpfHwhRm8odC50YWcpfHxmdW5jdGlvbih0KXtmb3IoO3QucGFyZW50Oyl7aWYoXCJ0ZW1wbGF0ZVwiIT09KHQ9dC5wYXJlbnQpLnRhZylyZXR1cm4hMTtpZih0LmZvcilyZXR1cm4hMH1yZXR1cm4hMX0odCl8fCFPYmplY3Qua2V5cyh0KS5ldmVyeShQbykpKX0odCksMT09PXQudHlwZSl7aWYoIUZvKHQudGFnKSYmXCJzbG90XCIhPT10LnRhZyYmbnVsbD09dC5hdHRyc01hcFtcImlubGluZS10ZW1wbGF0ZVwiXSlyZXR1cm47Zm9yKHZhciBlPTAsbj10LmNoaWxkcmVuLmxlbmd0aDtlPG47ZSsrKXt2YXIgcj10LmNoaWxkcmVuW2VdO3BuKHIpLHIuc3RhdGljfHwodC5zdGF0aWM9ITEpfWlmKHQuaWZDb25kaXRpb25zKWZvcih2YXIgaT0xLG89dC5pZkNvbmRpdGlvbnMubGVuZ3RoO2k8bztpKyspe3ZhciBhPXQuaWZDb25kaXRpb25zW2ldLmJsb2NrO3BuKGEpLGEuc3RhdGljfHwodC5zdGF0aWM9ITEpfX19ZnVuY3Rpb24gZG4odCxlKXtpZigxPT09dC50eXBlKXtpZigodC5zdGF0aWN8fHQub25jZSkmJih0LnN0YXRpY0luRm9yPWUpLHQuc3RhdGljJiZ0LmNoaWxkcmVuLmxlbmd0aCYmKDEhPT10LmNoaWxkcmVuLmxlbmd0aHx8MyE9PXQuY2hpbGRyZW5bMF0udHlwZSkpcmV0dXJuIHZvaWQodC5zdGF0aWNSb290PSEwKTtpZih0LnN0YXRpY1Jvb3Q9ITEsdC5jaGlsZHJlbilmb3IodmFyIG49MCxyPXQuY2hpbGRyZW4ubGVuZ3RoO248cjtuKyspZG4odC5jaGlsZHJlbltuXSxlfHwhIXQuZm9yKTtpZih0LmlmQ29uZGl0aW9ucylmb3IodmFyIGk9MSxvPXQuaWZDb25kaXRpb25zLmxlbmd0aDtpPG87aSsrKWRuKHQuaWZDb25kaXRpb25zW2ldLmJsb2NrLGUpfX1mdW5jdGlvbiB2bih0LGUsbil7dmFyIHI9ZT9cIm5hdGl2ZU9uOntcIjpcIm9uOntcIjtmb3IodmFyIGkgaW4gdClyKz0nXCInK2krJ1wiOicraG4oaSx0W2ldKStcIixcIjtyZXR1cm4gci5zbGljZSgwLC0xKStcIn1cIn1mdW5jdGlvbiBobih0LGUpe2lmKCFlKXJldHVyblwiZnVuY3Rpb24oKXt9XCI7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm5cIltcIitlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gaG4odCxlKX0pLmpvaW4oXCIsXCIpK1wiXVwiO3ZhciBuPWNhLnRlc3QoZS52YWx1ZSkscj1zYS50ZXN0KGUudmFsdWUpO2lmKGUubW9kaWZpZXJzKXt2YXIgaT1cIlwiLG89XCJcIixhPVtdO2Zvcih2YXIgcyBpbiBlLm1vZGlmaWVycylpZihmYVtzXSlvKz1mYVtzXSx1YVtzXSYmYS5wdXNoKHMpO2Vsc2UgaWYoXCJleGFjdFwiPT09cyl7dmFyIGM9ZS5tb2RpZmllcnM7bys9bGEoW1wiY3RybFwiLFwic2hpZnRcIixcImFsdFwiLFwibWV0YVwiXS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIWNbdF19KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCIkZXZlbnQuXCIrdCtcIktleVwifSkuam9pbihcInx8XCIpKX1lbHNlIGEucHVzaChzKTthLmxlbmd0aCYmKGkrPWZ1bmN0aW9uKHQpe3JldHVyblwiaWYoISgnYnV0dG9uJyBpbiAkZXZlbnQpJiZcIit0Lm1hcChtbikuam9pbihcIiYmXCIpK1wiKXJldHVybiBudWxsO1wifShhKSksbyYmKGkrPW8pO3JldHVyblwiZnVuY3Rpb24oJGV2ZW50KXtcIitpKyhuP2UudmFsdWUrXCIoJGV2ZW50KVwiOnI/XCIoXCIrZS52YWx1ZStcIikoJGV2ZW50KVwiOmUudmFsdWUpK1wifVwifXJldHVybiBufHxyP2UudmFsdWU6XCJmdW5jdGlvbigkZXZlbnQpe1wiK2UudmFsdWUrXCJ9XCJ9ZnVuY3Rpb24gbW4odCl7dmFyIGU9cGFyc2VJbnQodCwxMCk7aWYoZSlyZXR1cm5cIiRldmVudC5rZXlDb2RlIT09XCIrZTt2YXIgbj11YVt0XTtyZXR1cm5cIl9rKCRldmVudC5rZXlDb2RlLFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiLFwiK0pTT04uc3RyaW5naWZ5KG4pK1wiLCRldmVudC5rZXkpXCJ9ZnVuY3Rpb24geW4odCxlKXt2YXIgbj1uZXcgZGEoZSk7cmV0dXJue3JlbmRlcjpcIndpdGgodGhpcyl7cmV0dXJuIFwiKyh0P2duKHQsbik6J19jKFwiZGl2XCIpJykrXCJ9XCIsc3RhdGljUmVuZGVyRm5zOm4uc3RhdGljUmVuZGVyRm5zfX1mdW5jdGlvbiBnbih0LGUpe2lmKHQuc3RhdGljUm9vdCYmIXQuc3RhdGljUHJvY2Vzc2VkKXJldHVybiBfbih0LGUpO2lmKHQub25jZSYmIXQub25jZVByb2Nlc3NlZClyZXR1cm4gYm4odCxlKTtpZih0LmZvciYmIXQuZm9yUHJvY2Vzc2VkKXJldHVybiBmdW5jdGlvbih0LGUsbixyKXt2YXIgaT10LmZvcixvPXQuYWxpYXMsYT10Lml0ZXJhdG9yMT9cIixcIit0Lml0ZXJhdG9yMTpcIlwiLHM9dC5pdGVyYXRvcjI/XCIsXCIrdC5pdGVyYXRvcjI6XCJcIjtyZXR1cm4gdC5mb3JQcm9jZXNzZWQ9ITAsKHJ8fFwiX2xcIikrXCIoKFwiK2krXCIpLGZ1bmN0aW9uKFwiK28rYStzK1wiKXtyZXR1cm4gXCIrKG58fGduKSh0LGUpK1wifSlcIn0odCxlKTtpZih0LmlmJiYhdC5pZlByb2Nlc3NlZClyZXR1cm4gJG4odCxlKTtpZihcInRlbXBsYXRlXCIhPT10LnRhZ3x8dC5zbG90VGFyZ2V0KXtpZihcInNsb3RcIj09PXQudGFnKXJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPXQuc2xvdE5hbWV8fCdcImRlZmF1bHRcIicscj1rbih0LGUpLGk9XCJfdChcIituKyhyP1wiLFwiK3I6XCJcIiksbz10LmF0dHJzJiZcIntcIit0LmF0dHJzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gUG4odC5uYW1lKStcIjpcIit0LnZhbHVlfSkuam9pbihcIixcIikrXCJ9XCIsYT10LmF0dHJzTWFwW1widi1iaW5kXCJdOyFvJiYhYXx8cnx8KGkrPVwiLG51bGxcIik7byYmKGkrPVwiLFwiK28pO2EmJihpKz0obz9cIlwiOlwiLG51bGxcIikrXCIsXCIrYSk7cmV0dXJuIGkrXCIpXCJ9KHQsZSk7dmFyIG47aWYodC5jb21wb25lbnQpbj1mdW5jdGlvbih0LGUsbil7dmFyIHI9ZS5pbmxpbmVUZW1wbGF0ZT9udWxsOmtuKGUsbiwhMCk7cmV0dXJuXCJfYyhcIit0K1wiLFwiK3duKGUsbikrKHI/XCIsXCIrcjpcIlwiKStcIilcIn0odC5jb21wb25lbnQsdCxlKTtlbHNle3ZhciByPXQucGxhaW4/dm9pZCAwOnduKHQsZSksaT10LmlubGluZVRlbXBsYXRlP251bGw6a24odCxlLCEwKTtuPVwiX2MoJ1wiK3QudGFnK1wiJ1wiKyhyP1wiLFwiK3I6XCJcIikrKGk/XCIsXCIraTpcIlwiKStcIilcIn1mb3IodmFyIG89MDtvPGUudHJhbnNmb3Jtcy5sZW5ndGg7bysrKW49ZS50cmFuc2Zvcm1zW29dKHQsbik7cmV0dXJuIG59cmV0dXJuIGtuKHQsZSl8fFwidm9pZCAwXCJ9ZnVuY3Rpb24gX24odCxlKXtyZXR1cm4gdC5zdGF0aWNQcm9jZXNzZWQ9ITAsZS5zdGF0aWNSZW5kZXJGbnMucHVzaChcIndpdGgodGhpcyl7cmV0dXJuIFwiK2duKHQsZSkrXCJ9XCIpLFwiX20oXCIrKGUuc3RhdGljUmVuZGVyRm5zLmxlbmd0aC0xKSsodC5zdGF0aWNJbkZvcj9cIix0cnVlXCI6XCJcIikrXCIpXCJ9ZnVuY3Rpb24gYm4odCxlKXtpZih0Lm9uY2VQcm9jZXNzZWQ9ITAsdC5pZiYmIXQuaWZQcm9jZXNzZWQpcmV0dXJuICRuKHQsZSk7aWYodC5zdGF0aWNJbkZvcil7Zm9yKHZhciBuPVwiXCIscj10LnBhcmVudDtyOyl7aWYoci5mb3Ipe249ci5rZXk7YnJlYWt9cj1yLnBhcmVudH1yZXR1cm4gbj9cIl9vKFwiK2duKHQsZSkrXCIsXCIrZS5vbmNlSWQrKytcIixcIituK1wiKVwiOmduKHQsZSl9cmV0dXJuIF9uKHQsZSl9ZnVuY3Rpb24gJG4odCxlLG4scil7cmV0dXJuIHQuaWZQcm9jZXNzZWQ9ITAsQ24odC5pZkNvbmRpdGlvbnMuc2xpY2UoKSxlLG4scil9ZnVuY3Rpb24gQ24odCxlLG4scil7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gbj9uKHQsZSk6dC5vbmNlP2JuKHQsZSk6Z24odCxlKX1pZighdC5sZW5ndGgpcmV0dXJuIHJ8fFwiX2UoKVwiO3ZhciBvPXQuc2hpZnQoKTtyZXR1cm4gby5leHA/XCIoXCIrby5leHArXCIpP1wiK2koby5ibG9jaykrXCI6XCIrQ24odCxlLG4scik6XCJcIitpKG8uYmxvY2spfWZ1bmN0aW9uIHduKHQsZSl7dmFyIG49XCJ7XCIscj1mdW5jdGlvbih0LGUpe3ZhciBuPXQuZGlyZWN0aXZlcztpZighbilyZXR1cm47dmFyIHIsaSxvLGEscz1cImRpcmVjdGl2ZXM6W1wiLGM9ITE7Zm9yKHI9MCxpPW4ubGVuZ3RoO3I8aTtyKyspe289bltyXSxhPSEwO3ZhciB1PWUuZGlyZWN0aXZlc1tvLm5hbWVdO3UmJihhPSEhdSh0LG8sZS53YXJuKSksYSYmKGM9ITAscys9J3tuYW1lOlwiJytvLm5hbWUrJ1wiLHJhd05hbWU6XCInK28ucmF3TmFtZSsnXCInKyhvLnZhbHVlP1wiLHZhbHVlOihcIitvLnZhbHVlK1wiKSxleHByZXNzaW9uOlwiK0pTT04uc3RyaW5naWZ5KG8udmFsdWUpOlwiXCIpKyhvLmFyZz8nLGFyZzpcIicrby5hcmcrJ1wiJzpcIlwiKSsoby5tb2RpZmllcnM/XCIsbW9kaWZpZXJzOlwiK0pTT04uc3RyaW5naWZ5KG8ubW9kaWZpZXJzKTpcIlwiKStcIn0sXCIpfWlmKGMpcmV0dXJuIHMuc2xpY2UoMCwtMSkrXCJdXCJ9KHQsZSk7ciYmKG4rPXIrXCIsXCIpLHQua2V5JiYobis9XCJrZXk6XCIrdC5rZXkrXCIsXCIpLHQucmVmJiYobis9XCJyZWY6XCIrdC5yZWYrXCIsXCIpLHQucmVmSW5Gb3ImJihuKz1cInJlZkluRm9yOnRydWUsXCIpLHQucHJlJiYobis9XCJwcmU6dHJ1ZSxcIiksdC5jb21wb25lbnQmJihuKz0ndGFnOlwiJyt0LnRhZysnXCIsJyk7Zm9yKHZhciBpPTA7aTxlLmRhdGFHZW5GbnMubGVuZ3RoO2krKyluKz1lLmRhdGFHZW5GbnNbaV0odCk7aWYodC5hdHRycyYmKG4rPVwiYXR0cnM6e1wiK09uKHQuYXR0cnMpK1wifSxcIiksdC5wcm9wcyYmKG4rPVwiZG9tUHJvcHM6e1wiK09uKHQucHJvcHMpK1wifSxcIiksdC5ldmVudHMmJihuKz12bih0LmV2ZW50cywhMSxlLndhcm4pK1wiLFwiKSx0Lm5hdGl2ZUV2ZW50cyYmKG4rPXZuKHQubmF0aXZlRXZlbnRzLCEwLGUud2FybikrXCIsXCIpLHQuc2xvdFRhcmdldCYmIXQuc2xvdFNjb3BlJiYobis9XCJzbG90OlwiK3Quc2xvdFRhcmdldCtcIixcIiksdC5zY29wZWRTbG90cyYmKG4rPWZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJzY29wZWRTbG90czpfdShbXCIrT2JqZWN0LmtleXModCkubWFwKGZ1bmN0aW9uKG4pe3JldHVybiB4bihuLHRbbl0sZSl9KS5qb2luKFwiLFwiKStcIl0pXCJ9KHQuc2NvcGVkU2xvdHMsZSkrXCIsXCIpLHQubW9kZWwmJihuKz1cIm1vZGVsOnt2YWx1ZTpcIit0Lm1vZGVsLnZhbHVlK1wiLGNhbGxiYWNrOlwiK3QubW9kZWwuY2FsbGJhY2srXCIsZXhwcmVzc2lvbjpcIit0Lm1vZGVsLmV4cHJlc3Npb24rXCJ9LFwiKSx0LmlubGluZVRlbXBsYXRlKXt2YXIgbz1mdW5jdGlvbih0LGUpe3ZhciBuPXQuY2hpbGRyZW5bMF07aWYoMT09PW4udHlwZSl7dmFyIHI9eW4obixlLm9wdGlvbnMpO3JldHVyblwiaW5saW5lVGVtcGxhdGU6e3JlbmRlcjpmdW5jdGlvbigpe1wiK3IucmVuZGVyK1wifSxzdGF0aWNSZW5kZXJGbnM6W1wiK3Iuc3RhdGljUmVuZGVyRm5zLm1hcChmdW5jdGlvbih0KXtyZXR1cm5cImZ1bmN0aW9uKCl7XCIrdCtcIn1cIn0pLmpvaW4oXCIsXCIpK1wiXX1cIn19KHQsZSk7byYmKG4rPW8rXCIsXCIpfXJldHVybiBuPW4ucmVwbGFjZSgvLCQvLFwiXCIpK1wifVwiLHQud3JhcERhdGEmJihuPXQud3JhcERhdGEobikpLHQud3JhcExpc3RlbmVycyYmKG49dC53cmFwTGlzdGVuZXJzKG4pKSxufWZ1bmN0aW9uIHhuKHQsZSxuKXtpZihlLmZvciYmIWUuZm9yUHJvY2Vzc2VkKXJldHVybiBmdW5jdGlvbih0LGUsbil7dmFyIHI9ZS5mb3IsaT1lLmFsaWFzLG89ZS5pdGVyYXRvcjE/XCIsXCIrZS5pdGVyYXRvcjE6XCJcIixhPWUuaXRlcmF0b3IyP1wiLFwiK2UuaXRlcmF0b3IyOlwiXCI7cmV0dXJuIGUuZm9yUHJvY2Vzc2VkPSEwLFwiX2woKFwiK3IrXCIpLGZ1bmN0aW9uKFwiK2krbythK1wiKXtyZXR1cm4gXCIreG4odCxlLG4pK1wifSlcIn0odCxlLG4pO3JldHVyblwie2tleTpcIit0K1wiLGZuOlwiKyhcImZ1bmN0aW9uKFwiK1N0cmluZyhlLnNsb3RTY29wZSkrXCIpe3JldHVybiBcIisoXCJ0ZW1wbGF0ZVwiPT09ZS50YWc/ZS5pZj9lLmlmK1wiP1wiKyhrbihlLG4pfHxcInVuZGVmaW5lZFwiKStcIjp1bmRlZmluZWRcIjprbihlLG4pfHxcInVuZGVmaW5lZFwiOmduKGUsbikpK1wifVwiKStcIn1cIn1mdW5jdGlvbiBrbih0LGUsbixyLGkpe3ZhciBvPXQuY2hpbGRyZW47aWYoby5sZW5ndGgpe3ZhciBhPW9bMF07aWYoMT09PW8ubGVuZ3RoJiZhLmZvciYmXCJ0ZW1wbGF0ZVwiIT09YS50YWcmJlwic2xvdFwiIT09YS50YWcpcmV0dXJuKHJ8fGduKShhLGUpO3ZhciBzPW4/ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPXRbcl07aWYoMT09PWkudHlwZSl7aWYoQW4oaSl8fGkuaWZDb25kaXRpb25zJiZpLmlmQ29uZGl0aW9ucy5zb21lKGZ1bmN0aW9uKHQpe3JldHVybiBBbih0LmJsb2NrKX0pKXtuPTI7YnJlYWt9KGUoaSl8fGkuaWZDb25kaXRpb25zJiZpLmlmQ29uZGl0aW9ucy5zb21lKGZ1bmN0aW9uKHQpe3JldHVybiBlKHQuYmxvY2spfSkpJiYobj0xKX19cmV0dXJuIG59KG8sZS5tYXliZUNvbXBvbmVudCk6MCxjPWl8fGZ1bmN0aW9uKHQsZSl7aWYoMT09PXQudHlwZSlyZXR1cm4gZ24odCxlKTtyZXR1cm4gMz09PXQudHlwZSYmdC5pc0NvbW1lbnQ/ZnVuY3Rpb24odCl7cmV0dXJuXCJfZShcIitKU09OLnN0cmluZ2lmeSh0LnRleHQpK1wiKVwifSh0KTpmdW5jdGlvbih0KXtyZXR1cm5cIl92KFwiKygyPT09dC50eXBlP3QuZXhwcmVzc2lvbjpTbihKU09OLnN0cmluZ2lmeSh0LnRleHQpKSkrXCIpXCJ9KHQpfTtyZXR1cm5cIltcIitvLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYyh0LGUpfSkuam9pbihcIixcIikrXCJdXCIrKHM/XCIsXCIrczpcIlwiKX19ZnVuY3Rpb24gQW4odCl7cmV0dXJuIHZvaWQgMCE9PXQuZm9yfHxcInRlbXBsYXRlXCI9PT10LnRhZ3x8XCJzbG90XCI9PT10LnRhZ31mdW5jdGlvbiBPbih0KXtmb3IodmFyIGU9XCJcIixuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ZSs9J1wiJytyLm5hbWUrJ1wiOicrU24oci52YWx1ZSkrXCIsXCJ9cmV0dXJuIGUuc2xpY2UoMCwtMSl9ZnVuY3Rpb24gU24odCl7cmV0dXJuIHQucmVwbGFjZSgvXFx1MjAyOC9nLFwiXFxcXHUyMDI4XCIpLnJlcGxhY2UoL1xcdTIwMjkvZyxcIlxcXFx1MjAyOVwiKX1mdW5jdGlvbiBUbih0LGUpe3RyeXtyZXR1cm4gbmV3IEZ1bmN0aW9uKHQpfWNhdGNoKG4pe3JldHVybiBlLnB1c2goe2VycjpuLGNvZGU6dH0pLHl9fWZ1bmN0aW9uIEVuKHQpe3JldHVybiBSbz1Sb3x8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxSby5pbm5lckhUTUw9dD8nPGEgaHJlZj1cIlxcblwiLz4nOic8ZGl2IGE9XCJcXG5cIi8+JyxSby5pbm5lckhUTUwuaW5kZXhPZihcIiYjMTA7XCIpPjB9dmFyIGpuPU9iamVjdC5mcmVlemUoe30pLE5uPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsSW49dShcInNsb3QsY29tcG9uZW50XCIsITApLExuPXUoXCJrZXkscmVmLHNsb3Qsc2xvdC1zY29wZSxpc1wiKSxNbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LERuPS8tKFxcdykvZyxQbj1wKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoRG4sZnVuY3Rpb24odCxlKXtyZXR1cm4gZT9lLnRvVXBwZXJDYXNlKCk6XCJcIn0pfSksRm49cChmdW5jdGlvbih0KXtyZXR1cm4gdC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSt0LnNsaWNlKDEpfSksUm49L1xcQihbQS1aXSkvZyxIbj1wKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoUm4sXCItJDFcIikudG9Mb3dlckNhc2UoKX0pLEJuPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4hMX0sVW49ZnVuY3Rpb24odCl7cmV0dXJuIHR9LFZuPVwiZGF0YS1zZXJ2ZXItcmVuZGVyZWRcIix6bj1bXCJjb21wb25lbnRcIixcImRpcmVjdGl2ZVwiLFwiZmlsdGVyXCJdLEtuPVtcImJlZm9yZUNyZWF0ZVwiLFwiY3JlYXRlZFwiLFwiYmVmb3JlTW91bnRcIixcIm1vdW50ZWRcIixcImJlZm9yZVVwZGF0ZVwiLFwidXBkYXRlZFwiLFwiYmVmb3JlRGVzdHJveVwiLFwiZGVzdHJveWVkXCIsXCJhY3RpdmF0ZWRcIixcImRlYWN0aXZhdGVkXCIsXCJlcnJvckNhcHR1cmVkXCJdLEpuPXtvcHRpb25NZXJnZVN0cmF0ZWdpZXM6T2JqZWN0LmNyZWF0ZShudWxsKSxzaWxlbnQ6ITEscHJvZHVjdGlvblRpcDohMSxkZXZ0b29sczohMSxwZXJmb3JtYW5jZTohMSxlcnJvckhhbmRsZXI6bnVsbCx3YXJuSGFuZGxlcjpudWxsLGlnbm9yZWRFbGVtZW50czpbXSxrZXlDb2RlczpPYmplY3QuY3JlYXRlKG51bGwpLGlzUmVzZXJ2ZWRUYWc6Qm4saXNSZXNlcnZlZEF0dHI6Qm4saXNVbmtub3duRWxlbWVudDpCbixnZXRUYWdOYW1lc3BhY2U6eSxwYXJzZVBsYXRmb3JtVGFnTmFtZTpVbixtdXN0VXNlUHJvcDpCbixfbGlmZWN5Y2xlSG9va3M6S259LHFuPS9bXlxcdy4kXS8sV249XCJfX3Byb3RvX19cImlue30sR249XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyxabj1cInVuZGVmaW5lZFwiIT10eXBlb2YgV1hFbnZpcm9ubWVudCYmISFXWEVudmlyb25tZW50LnBsYXRmb3JtLFhuPVpuJiZXWEVudmlyb25tZW50LnBsYXRmb3JtLnRvTG93ZXJDYXNlKCksWW49R24mJndpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCksUW49WW4mJi9tc2llfHRyaWRlbnQvLnRlc3QoWW4pLHRyPVluJiZZbi5pbmRleE9mKFwibXNpZSA5LjBcIik+MCxlcj1ZbiYmWW4uaW5kZXhPZihcImVkZ2UvXCIpPjAsbnI9WW4mJlluLmluZGV4T2YoXCJhbmRyb2lkXCIpPjB8fFwiYW5kcm9pZFwiPT09WG4scnI9WW4mJi9pcGhvbmV8aXBhZHxpcG9kfGlvcy8udGVzdChZbil8fFwiaW9zXCI9PT1Ybixpcj0oWW4mJi9jaHJvbWVcXC9cXGQrLy50ZXN0KFluKSx7fS53YXRjaCksb3I9ITE7aWYoR24pdHJ5e3ZhciBhcj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYXIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe29yPSEwfX0pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdC1wYXNzaXZlXCIsbnVsbCxhcil9Y2F0Y2godCl7fXZhciBzcixjcix1cj1mdW5jdGlvbigpe3JldHVybiB2b2lkIDA9PT1zciYmKHNyPSFHbiYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbCYmXCJzZXJ2ZXJcIj09PWdsb2JhbC5wcm9jZXNzLmVudi5WVUVfRU5WKSxzcn0sbHI9R24mJndpbmRvdy5fX1ZVRV9ERVZUT09MU19HTE9CQUxfSE9PS19fLGZyPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJncoU3ltYm9sKSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJncoUmVmbGVjdC5vd25LZXlzKTtjcj1cInVuZGVmaW5lZFwiIT10eXBlb2YgU2V0JiZ3KFNldCk/U2V0OmZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMuc2V0PU9iamVjdC5jcmVhdGUobnVsbCl9cmV0dXJuIHQucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXtyZXR1cm4hMD09PXRoaXMuc2V0W3RdfSx0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7dGhpcy5zZXRbdF09ITB9LHQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5zZXQ9T2JqZWN0LmNyZWF0ZShudWxsKX0sdH0oKTt2YXIgcHI9eSxkcj0wLHZyPWZ1bmN0aW9uKCl7dGhpcy5pZD1kcisrLHRoaXMuc3Vicz1bXX07dnIucHJvdG90eXBlLmFkZFN1Yj1mdW5jdGlvbih0KXt0aGlzLnN1YnMucHVzaCh0KX0sdnIucHJvdG90eXBlLnJlbW92ZVN1Yj1mdW5jdGlvbih0KXtsKHRoaXMuc3Vicyx0KX0sdnIucHJvdG90eXBlLmRlcGVuZD1mdW5jdGlvbigpe3ZyLnRhcmdldCYmdnIudGFyZ2V0LmFkZERlcCh0aGlzKX0sdnIucHJvdG90eXBlLm5vdGlmeT1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLnN1YnMuc2xpY2UoKSxlPTAsbj10Lmxlbmd0aDtlPG47ZSsrKXRbZV0udXBkYXRlKCl9LHZyLnRhcmdldD1udWxsO3ZhciBocj1bXSxtcj1mdW5jdGlvbih0LGUsbixyLGksbyxhLHMpe3RoaXMudGFnPXQsdGhpcy5kYXRhPWUsdGhpcy5jaGlsZHJlbj1uLHRoaXMudGV4dD1yLHRoaXMuZWxtPWksdGhpcy5ucz12b2lkIDAsdGhpcy5jb250ZXh0PW8sdGhpcy5mbkNvbnRleHQ9dm9pZCAwLHRoaXMuZm5PcHRpb25zPXZvaWQgMCx0aGlzLmZuU2NvcGVJZD12b2lkIDAsdGhpcy5rZXk9ZSYmZS5rZXksdGhpcy5jb21wb25lbnRPcHRpb25zPWEsdGhpcy5jb21wb25lbnRJbnN0YW5jZT12b2lkIDAsdGhpcy5wYXJlbnQ9dm9pZCAwLHRoaXMucmF3PSExLHRoaXMuaXNTdGF0aWM9ITEsdGhpcy5pc1Jvb3RJbnNlcnQ9ITAsdGhpcy5pc0NvbW1lbnQ9ITEsdGhpcy5pc0Nsb25lZD0hMSx0aGlzLmlzT25jZT0hMSx0aGlzLmFzeW5jRmFjdG9yeT1zLHRoaXMuYXN5bmNNZXRhPXZvaWQgMCx0aGlzLmlzQXN5bmNQbGFjZWhvbGRlcj0hMX0seXI9e2NoaWxkOntjb25maWd1cmFibGU6ITB9fTt5ci5jaGlsZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb21wb25lbnRJbnN0YW5jZX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMobXIucHJvdG90eXBlLHlyKTt2YXIgZ3I9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9XCJcIik7dmFyIGU9bmV3IG1yO3JldHVybiBlLnRleHQ9dCxlLmlzQ29tbWVudD0hMCxlfSxfcj1BcnJheS5wcm90b3R5cGUsYnI9T2JqZWN0LmNyZWF0ZShfcik7W1wicHVzaFwiLFwicG9wXCIsXCJzaGlmdFwiLFwidW5zaGlmdFwiLFwic3BsaWNlXCIsXCJzb3J0XCIsXCJyZXZlcnNlXCJdLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9X3JbdF07Qyhicix0LGZ1bmN0aW9uKCl7Zm9yKHZhciBuPVtdLHI9YXJndW1lbnRzLmxlbmd0aDtyLS07KW5bcl09YXJndW1lbnRzW3JdO3ZhciBpLG89ZS5hcHBseSh0aGlzLG4pLGE9dGhpcy5fX29iX187c3dpdGNoKHQpe2Nhc2VcInB1c2hcIjpjYXNlXCJ1bnNoaWZ0XCI6aT1uO2JyZWFrO2Nhc2VcInNwbGljZVwiOmk9bi5zbGljZSgyKX1yZXR1cm4gaSYmYS5vYnNlcnZlQXJyYXkoaSksYS5kZXAubm90aWZ5KCksb30pfSk7dmFyICRyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGJyKSxDcj17c2hvdWxkQ29udmVydDohMH0sd3I9ZnVuY3Rpb24odCl7aWYodGhpcy52YWx1ZT10LHRoaXMuZGVwPW5ldyB2cix0aGlzLnZtQ291bnQ9MCxDKHQsXCJfX29iX19cIix0aGlzKSxBcnJheS5pc0FycmF5KHQpKXsoV24/TzpTKSh0LGJyLCRyKSx0aGlzLm9ic2VydmVBcnJheSh0KX1lbHNlIHRoaXMud2Fsayh0KX07d3IucHJvdG90eXBlLndhbGs9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoO24rKylFKHQsZVtuXSx0W2Vbbl1dKX0sd3IucHJvdG90eXBlLm9ic2VydmVBcnJheT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXQubGVuZ3RoO2U8bjtlKyspVCh0W2VdKX07dmFyIHhyPUpuLm9wdGlvbk1lcmdlU3RyYXRlZ2llczt4ci5kYXRhPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbj9NKHQsZSxuKTplJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP3Q6TSh0LGUpfSxLbi5mb3JFYWNoKGZ1bmN0aW9uKHQpe3hyW3RdPUR9KSx6bi5mb3JFYWNoKGZ1bmN0aW9uKHQpe3hyW3QrXCJzXCJdPVB9KSx4ci53YXRjaD1mdW5jdGlvbih0LGUsbixyKXtpZih0PT09aXImJih0PXZvaWQgMCksZT09PWlyJiYoZT12b2lkIDApLCFlKXJldHVybiBPYmplY3QuY3JlYXRlKHR8fG51bGwpO2lmKCF0KXJldHVybiBlO3ZhciBpPXt9O2goaSx0KTtmb3IodmFyIG8gaW4gZSl7dmFyIGE9aVtvXSxzPWVbb107YSYmIUFycmF5LmlzQXJyYXkoYSkmJihhPVthXSksaVtvXT1hP2EuY29uY2F0KHMpOkFycmF5LmlzQXJyYXkocyk/czpbc119cmV0dXJuIGl9LHhyLnByb3BzPXhyLm1ldGhvZHM9eHIuaW5qZWN0PXhyLmNvbXB1dGVkPWZ1bmN0aW9uKHQsZSxuLHIpe2lmKCF0KXJldHVybiBlO3ZhciBpPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGgoaSx0KSxlJiZoKGksZSksaX0seHIucHJvdmlkZT1NO3ZhciBrcixBcixPcj1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lP3Q6ZX0sU3I9W10sVHI9ITEsRXI9ITE7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNldEltbWVkaWF0ZSYmdyhzZXRJbW1lZGlhdGUpKUFyPWZ1bmN0aW9uKCl7c2V0SW1tZWRpYXRlKEopfTtlbHNlIGlmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbHx8IXcoTWVzc2FnZUNoYW5uZWwpJiZcIltvYmplY3QgTWVzc2FnZUNoYW5uZWxDb25zdHJ1Y3Rvcl1cIiE9PU1lc3NhZ2VDaGFubmVsLnRvU3RyaW5nKCkpQXI9ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KEosMCl9O2Vsc2V7dmFyIGpyPW5ldyBNZXNzYWdlQ2hhbm5lbCxOcj1qci5wb3J0Mjtqci5wb3J0MS5vbm1lc3NhZ2U9SixBcj1mdW5jdGlvbigpe05yLnBvc3RNZXNzYWdlKDEpfX1pZihcInVuZGVmaW5lZFwiIT10eXBlb2YgUHJvbWlzZSYmdyhQcm9taXNlKSl7dmFyIElyPVByb21pc2UucmVzb2x2ZSgpO2tyPWZ1bmN0aW9uKCl7SXIudGhlbihKKSxyciYmc2V0VGltZW91dCh5KX19ZWxzZSBrcj1Bcjt2YXIgTHIsTXI9bmV3IGNyLERyPXAoZnVuY3Rpb24odCl7dmFyIGU9XCImXCI9PT10LmNoYXJBdCgwKSxuPVwiflwiPT09KHQ9ZT90LnNsaWNlKDEpOnQpLmNoYXJBdCgwKSxyPVwiIVwiPT09KHQ9bj90LnNsaWNlKDEpOnQpLmNoYXJBdCgwKTtyZXR1cm4gdD1yP3Quc2xpY2UoMSk6dCx7bmFtZTp0LG9uY2U6bixjYXB0dXJlOnIscGFzc2l2ZTplfX0pLFByPW51bGwsRnI9W10sUnI9W10sSHI9e30sQnI9ITEsVXI9ITEsVnI9MCx6cj0wLEtyPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy52bT10LGkmJih0Ll93YXRjaGVyPXRoaXMpLHQuX3dhdGNoZXJzLnB1c2godGhpcykscj8odGhpcy5kZWVwPSEhci5kZWVwLHRoaXMudXNlcj0hIXIudXNlcix0aGlzLmxhenk9ISFyLmxhenksdGhpcy5zeW5jPSEhci5zeW5jKTp0aGlzLmRlZXA9dGhpcy51c2VyPXRoaXMubGF6eT10aGlzLnN5bmM9ITEsdGhpcy5jYj1uLHRoaXMuaWQ9Kyt6cix0aGlzLmFjdGl2ZT0hMCx0aGlzLmRpcnR5PXRoaXMubGF6eSx0aGlzLmRlcHM9W10sdGhpcy5uZXdEZXBzPVtdLHRoaXMuZGVwSWRzPW5ldyBjcix0aGlzLm5ld0RlcElkcz1uZXcgY3IsdGhpcy5leHByZXNzaW9uPVwiXCIsXCJmdW5jdGlvblwiPT10eXBlb2YgZT90aGlzLmdldHRlcj1lOih0aGlzLmdldHRlcj1mdW5jdGlvbih0KXtpZighcW4udGVzdCh0KSl7dmFyIGU9dC5zcGxpdChcIi5cIik7cmV0dXJuIGZ1bmN0aW9uKHQpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXtpZighdClyZXR1cm47dD10W2Vbbl1dfXJldHVybiB0fX19KGUpLHRoaXMuZ2V0dGVyfHwodGhpcy5nZXR0ZXI9ZnVuY3Rpb24oKXt9KSksdGhpcy52YWx1ZT10aGlzLmxhenk/dm9pZCAwOnRoaXMuZ2V0KCl9O0tyLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXshZnVuY3Rpb24odCl7dnIudGFyZ2V0JiZoci5wdXNoKHZyLnRhcmdldCksdnIudGFyZ2V0PXR9KHRoaXMpO3ZhciB0LGU9dGhpcy52bTt0cnl7dD10aGlzLmdldHRlci5jYWxsKGUsZSl9Y2F0Y2godCl7aWYoIXRoaXMudXNlcil0aHJvdyB0O1YodCxlLCdnZXR0ZXIgZm9yIHdhdGNoZXIgXCInK3RoaXMuZXhwcmVzc2lvbisnXCInKX1maW5hbGx5e3RoaXMuZGVlcCYmVyh0KSx2ci50YXJnZXQ9aHIucG9wKCksdGhpcy5jbGVhbnVwRGVwcygpfXJldHVybiB0fSxLci5wcm90b3R5cGUuYWRkRGVwPWZ1bmN0aW9uKHQpe3ZhciBlPXQuaWQ7dGhpcy5uZXdEZXBJZHMuaGFzKGUpfHwodGhpcy5uZXdEZXBJZHMuYWRkKGUpLHRoaXMubmV3RGVwcy5wdXNoKHQpLHRoaXMuZGVwSWRzLmhhcyhlKXx8dC5hZGRTdWIodGhpcykpfSxLci5wcm90b3R5cGUuY2xlYW51cERlcHM9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5kZXBzLmxlbmd0aDt0LS07KXt2YXIgZT10aGlzLmRlcHNbdF07dGhpcy5uZXdEZXBJZHMuaGFzKGUuaWQpfHxlLnJlbW92ZVN1Yih0aGlzKX12YXIgbj10aGlzLmRlcElkczt0aGlzLmRlcElkcz10aGlzLm5ld0RlcElkcyx0aGlzLm5ld0RlcElkcz1uLHRoaXMubmV3RGVwSWRzLmNsZWFyKCksbj10aGlzLmRlcHMsdGhpcy5kZXBzPXRoaXMubmV3RGVwcyx0aGlzLm5ld0RlcHM9bix0aGlzLm5ld0RlcHMubGVuZ3RoPTB9LEtyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmxhenk/dGhpcy5kaXJ0eT0hMDp0aGlzLnN5bmM/dGhpcy5ydW4oKTpmdW5jdGlvbih0KXt2YXIgZT10LmlkO2lmKG51bGw9PUhyW2VdKXtpZihIcltlXT0hMCxVcil7Zm9yKHZhciBuPUZyLmxlbmd0aC0xO24+VnImJkZyW25dLmlkPnQuaWQ7KW4tLTtGci5zcGxpY2UobisxLDAsdCl9ZWxzZSBGci5wdXNoKHQpO0JyfHwoQnI9ITAscShodCkpfX0odGhpcyl9LEtyLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXtpZih0aGlzLmFjdGl2ZSl7dmFyIHQ9dGhpcy5nZXQoKTtpZih0IT09dGhpcy52YWx1ZXx8aSh0KXx8dGhpcy5kZWVwKXt2YXIgZT10aGlzLnZhbHVlO2lmKHRoaXMudmFsdWU9dCx0aGlzLnVzZXIpdHJ5e3RoaXMuY2IuY2FsbCh0aGlzLnZtLHQsZSl9Y2F0Y2godCl7Vih0LHRoaXMudm0sJ2NhbGxiYWNrIGZvciB3YXRjaGVyIFwiJyt0aGlzLmV4cHJlc3Npb24rJ1wiJyl9ZWxzZSB0aGlzLmNiLmNhbGwodGhpcy52bSx0LGUpfX19LEtyLnByb3RvdHlwZS5ldmFsdWF0ZT1mdW5jdGlvbigpe3RoaXMudmFsdWU9dGhpcy5nZXQoKSx0aGlzLmRpcnR5PSExfSxLci5wcm90b3R5cGUuZGVwZW5kPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuZGVwcy5sZW5ndGg7dC0tOyl0aGlzLmRlcHNbdF0uZGVwZW5kKCl9LEtyLnByb3RvdHlwZS50ZWFyZG93bj1mdW5jdGlvbigpe2lmKHRoaXMuYWN0aXZlKXt0aGlzLnZtLl9pc0JlaW5nRGVzdHJveWVkfHxsKHRoaXMudm0uX3dhdGNoZXJzLHRoaXMpO2Zvcih2YXIgdD10aGlzLmRlcHMubGVuZ3RoO3QtLTspdGhpcy5kZXBzW3RdLnJlbW92ZVN1Yih0aGlzKTt0aGlzLmFjdGl2ZT0hMX19O3ZhciBKcj17ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0Onksc2V0Onl9LHFyPXtsYXp5OiEwfTtOdChJdC5wcm90b3R5cGUpO3ZhciBXcj17aW5pdDpmdW5jdGlvbih0LG4scixpKXtpZighdC5jb21wb25lbnRJbnN0YW5jZXx8dC5jb21wb25lbnRJbnN0YW5jZS5faXNEZXN0cm95ZWQpeyh0LmNvbXBvbmVudEluc3RhbmNlPWZ1bmN0aW9uKHQsbixyLGkpe3ZhciBvPXtfaXNDb21wb25lbnQ6ITAscGFyZW50Om4sX3BhcmVudFZub2RlOnQsX3BhcmVudEVsbTpyfHxudWxsLF9yZWZFbG06aXx8bnVsbH0sYT10LmRhdGEuaW5saW5lVGVtcGxhdGU7cmV0dXJuIGUoYSkmJihvLnJlbmRlcj1hLnJlbmRlcixvLnN0YXRpY1JlbmRlckZucz1hLnN0YXRpY1JlbmRlckZucyksbmV3IHQuY29tcG9uZW50T3B0aW9ucy5DdG9yKG8pfSh0LFByLHIsaSkpLiRtb3VudChuP3QuZWxtOnZvaWQgMCxuKX1lbHNlIGlmKHQuZGF0YS5rZWVwQWxpdmUpe3ZhciBvPXQ7V3IucHJlcGF0Y2gobyxvKX19LHByZXBhdGNoOmZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5jb21wb25lbnRPcHRpb25zOyFmdW5jdGlvbih0LGUsbixyLGkpe3ZhciBvPSEhKGl8fHQuJG9wdGlvbnMuX3JlbmRlckNoaWxkcmVufHxyLmRhdGEuc2NvcGVkU2xvdHN8fHQuJHNjb3BlZFNsb3RzIT09am4pO2lmKHQuJG9wdGlvbnMuX3BhcmVudFZub2RlPXIsdC4kdm5vZGU9cix0Ll92bm9kZSYmKHQuX3Zub2RlLnBhcmVudD1yKSx0LiRvcHRpb25zLl9yZW5kZXJDaGlsZHJlbj1pLHQuJGF0dHJzPXIuZGF0YSYmci5kYXRhLmF0dHJzfHxqbix0LiRsaXN0ZW5lcnM9bnx8am4sZSYmdC4kb3B0aW9ucy5wcm9wcyl7Q3Iuc2hvdWxkQ29udmVydD0hMTtmb3IodmFyIGE9dC5fcHJvcHMscz10LiRvcHRpb25zLl9wcm9wS2V5c3x8W10sYz0wO2M8cy5sZW5ndGg7YysrKXt2YXIgdT1zW2NdO2FbdV09SCh1LHQuJG9wdGlvbnMucHJvcHMsZSx0KX1Dci5zaG91bGRDb252ZXJ0PSEwLHQuJG9wdGlvbnMucHJvcHNEYXRhPWV9aWYobil7dmFyIGw9dC4kb3B0aW9ucy5fcGFyZW50TGlzdGVuZXJzO3QuJG9wdGlvbnMuX3BhcmVudExpc3RlbmVycz1uLHN0KHQsbixsKX1vJiYodC4kc2xvdHM9Y3QoaSxyLmNvbnRleHQpLHQuJGZvcmNlVXBkYXRlKCkpfShlLmNvbXBvbmVudEluc3RhbmNlPXQuY29tcG9uZW50SW5zdGFuY2Usbi5wcm9wc0RhdGEsbi5saXN0ZW5lcnMsZSxuLmNoaWxkcmVuKX0saW5zZXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuY29udGV4dCxuPXQuY29tcG9uZW50SW5zdGFuY2U7bi5faXNNb3VudGVkfHwobi5faXNNb3VudGVkPSEwLHZ0KG4sXCJtb3VudGVkXCIpKSx0LmRhdGEua2VlcEFsaXZlJiYoZS5faXNNb3VudGVkP2Z1bmN0aW9uKHQpe3QuX2luYWN0aXZlPSExLFJyLnB1c2godCl9KG4pOnB0KG4sITApKX0sZGVzdHJveTpmdW5jdGlvbih0KXt2YXIgZT10LmNvbXBvbmVudEluc3RhbmNlO2UuX2lzRGVzdHJveWVkfHwodC5kYXRhLmtlZXBBbGl2ZT9kdChlLCEwKTplLiRkZXN0cm95KCkpfX0sR3I9T2JqZWN0LmtleXMoV3IpLFpyPTEsWHI9MixZcj0wOyFmdW5jdGlvbih0KXt0LnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbih0KXt0aGlzLl91aWQ9WXIrKyx0aGlzLl9pc1Z1ZT0hMCx0JiZ0Ll9pc0NvbXBvbmVudD9mdW5jdGlvbih0LGUpe3ZhciBuPXQuJG9wdGlvbnM9T2JqZWN0LmNyZWF0ZSh0LmNvbnN0cnVjdG9yLm9wdGlvbnMpLHI9ZS5fcGFyZW50Vm5vZGU7bi5wYXJlbnQ9ZS5wYXJlbnQsbi5fcGFyZW50Vm5vZGU9cixuLl9wYXJlbnRFbG09ZS5fcGFyZW50RWxtLG4uX3JlZkVsbT1lLl9yZWZFbG07dmFyIGk9ci5jb21wb25lbnRPcHRpb25zO24ucHJvcHNEYXRhPWkucHJvcHNEYXRhLG4uX3BhcmVudExpc3RlbmVycz1pLmxpc3RlbmVycyxuLl9yZW5kZXJDaGlsZHJlbj1pLmNoaWxkcmVuLG4uX2NvbXBvbmVudFRhZz1pLnRhZyxlLnJlbmRlciYmKG4ucmVuZGVyPWUucmVuZGVyLG4uc3RhdGljUmVuZGVyRm5zPWUuc3RhdGljUmVuZGVyRm5zKX0odGhpcyx0KTp0aGlzLiRvcHRpb25zPUYoRnQodGhpcy5jb25zdHJ1Y3RvciksdHx8e30sdGhpcyksdGhpcy5fcmVuZGVyUHJveHk9dGhpcyx0aGlzLl9zZWxmPXRoaXMsZnVuY3Rpb24odCl7dmFyIGU9dC4kb3B0aW9ucyxuPWUucGFyZW50O2lmKG4mJiFlLmFic3RyYWN0KXtmb3IoO24uJG9wdGlvbnMuYWJzdHJhY3QmJm4uJHBhcmVudDspbj1uLiRwYXJlbnQ7bi4kY2hpbGRyZW4ucHVzaCh0KX10LiRwYXJlbnQ9bix0LiRyb290PW4/bi4kcm9vdDp0LHQuJGNoaWxkcmVuPVtdLHQuJHJlZnM9e30sdC5fd2F0Y2hlcj1udWxsLHQuX2luYWN0aXZlPW51bGwsdC5fZGlyZWN0SW5hY3RpdmU9ITEsdC5faXNNb3VudGVkPSExLHQuX2lzRGVzdHJveWVkPSExLHQuX2lzQmVpbmdEZXN0cm95ZWQ9ITF9KHRoaXMpLGZ1bmN0aW9uKHQpe3QuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHQuX2hhc0hvb2tFdmVudD0hMTt2YXIgZT10LiRvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnM7ZSYmc3QodCxlKX0odGhpcyksZnVuY3Rpb24odCl7dC5fdm5vZGU9bnVsbCx0Ll9zdGF0aWNUcmVlcz1udWxsO3ZhciBlPXQuJG9wdGlvbnMsbj10LiR2bm9kZT1lLl9wYXJlbnRWbm9kZSxyPW4mJm4uY29udGV4dDt0LiRzbG90cz1jdChlLl9yZW5kZXJDaGlsZHJlbixyKSx0LiRzY29wZWRTbG90cz1qbix0Ll9jPWZ1bmN0aW9uKGUsbixyLGkpe3JldHVybiBEdCh0LGUsbixyLGksITEpfSx0LiRjcmVhdGVFbGVtZW50PWZ1bmN0aW9uKGUsbixyLGkpe3JldHVybiBEdCh0LGUsbixyLGksITApfTt2YXIgaT1uJiZuLmRhdGE7RSh0LFwiJGF0dHJzXCIsaSYmaS5hdHRyc3x8am4sMCwhMCksRSh0LFwiJGxpc3RlbmVyc1wiLGUuX3BhcmVudExpc3RlbmVyc3x8am4sMCwhMCl9KHRoaXMpLHZ0KHRoaXMsXCJiZWZvcmVDcmVhdGVcIiksZnVuY3Rpb24odCl7dmFyIGU9JHQodC4kb3B0aW9ucy5pbmplY3QsdCk7ZSYmKENyLnNob3VsZENvbnZlcnQ9ITEsT2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbihuKXtFKHQsbixlW25dKX0pLENyLnNob3VsZENvbnZlcnQ9ITApfSh0aGlzKSx5dCh0aGlzKSxmdW5jdGlvbih0KXt2YXIgZT10LiRvcHRpb25zLnByb3ZpZGU7ZSYmKHQuX3Byb3ZpZGVkPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZS5jYWxsKHQpOmUpfSh0aGlzKSx2dCh0aGlzLFwiY3JlYXRlZFwiKSx0aGlzLiRvcHRpb25zLmVsJiZ0aGlzLiRtb3VudCh0aGlzLiRvcHRpb25zLmVsKX19KFJ0KSxmdW5jdGlvbih0KXt2YXIgZT17fTtlLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfTt2YXIgbj17fTtuLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9wc30sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiJGRhdGFcIixlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCIkcHJvcHNcIixuKSx0LnByb3RvdHlwZS4kc2V0PWosdC5wcm90b3R5cGUuJGRlbGV0ZT1OLHQucHJvdG90eXBlLiR3YXRjaD1mdW5jdGlvbih0LGUsbil7aWYobyhlKSlyZXR1cm4gYnQodGhpcyx0LGUsbik7KG49bnx8e30pLnVzZXI9ITA7dmFyIHI9bmV3IEtyKHRoaXMsdCxlLG4pO3JldHVybiBuLmltbWVkaWF0ZSYmZS5jYWxsKHRoaXMsci52YWx1ZSksZnVuY3Rpb24oKXtyLnRlYXJkb3duKCl9fX0oUnQpLGZ1bmN0aW9uKHQpe3ZhciBlPS9eaG9vazovO3QucHJvdG90eXBlLiRvbj1mdW5jdGlvbih0LG4pe2lmKEFycmF5LmlzQXJyYXkodCkpZm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7cisrKXRoaXMuJG9uKHRbcl0sbik7ZWxzZSh0aGlzLl9ldmVudHNbdF18fCh0aGlzLl9ldmVudHNbdF09W10pKS5wdXNoKG4pLGUudGVzdCh0KSYmKHRoaXMuX2hhc0hvb2tFdmVudD0hMCk7cmV0dXJuIHRoaXN9LHQucHJvdG90eXBlLiRvbmNlPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpe3IuJG9mZih0LG4pLGUuYXBwbHkocixhcmd1bWVudHMpfXZhciByPXRoaXM7cmV0dXJuIG4uZm49ZSxyLiRvbih0LG4pLHJ9LHQucHJvdG90eXBlLiRvZmY9ZnVuY3Rpb24odCxlKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcztpZihBcnJheS5pc0FycmF5KHQpKXtmb3IodmFyIG49MCxyPXQubGVuZ3RoO248cjtuKyspdGhpcy4kb2ZmKHRbbl0sZSk7cmV0dXJuIHRoaXN9dmFyIGk9dGhpcy5fZXZlbnRzW3RdO2lmKCFpKXJldHVybiB0aGlzO2lmKCFlKXJldHVybiB0aGlzLl9ldmVudHNbdF09bnVsbCx0aGlzO2lmKGUpZm9yKHZhciBvLGE9aS5sZW5ndGg7YS0tOylpZigobz1pW2FdKT09PWV8fG8uZm49PT1lKXtpLnNwbGljZShhLDEpO2JyZWFrfXJldHVybiB0aGlzfSx0LnByb3RvdHlwZS4kZW1pdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5fZXZlbnRzW3RdO2lmKG4pe249bi5sZW5ndGg+MT92KG4pOm47Zm9yKHZhciByPXYoYXJndW1lbnRzLDEpLGk9MCxvPW4ubGVuZ3RoO2k8bztpKyspdHJ5e25baV0uYXBwbHkoZSxyKX1jYXRjaChuKXtWKG4sZSwnZXZlbnQgaGFuZGxlciBmb3IgXCInK3QrJ1wiJyl9fXJldHVybiBlfX0oUnQpLGZ1bmN0aW9uKHQpe3QucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxlKXt0aGlzLl9pc01vdW50ZWQmJnZ0KHRoaXMsXCJiZWZvcmVVcGRhdGVcIik7dmFyIG49dGhpcy4kZWwscj10aGlzLl92bm9kZSxpPVByO1ByPXRoaXMsdGhpcy5fdm5vZGU9dCxyP3RoaXMuJGVsPXRoaXMuX19wYXRjaF9fKHIsdCk6KHRoaXMuJGVsPXRoaXMuX19wYXRjaF9fKHRoaXMuJGVsLHQsZSwhMSx0aGlzLiRvcHRpb25zLl9wYXJlbnRFbG0sdGhpcy4kb3B0aW9ucy5fcmVmRWxtKSx0aGlzLiRvcHRpb25zLl9wYXJlbnRFbG09dGhpcy4kb3B0aW9ucy5fcmVmRWxtPW51bGwpLFByPWksbiYmKG4uX192dWVfXz1udWxsKSx0aGlzLiRlbCYmKHRoaXMuJGVsLl9fdnVlX189dGhpcyksdGhpcy4kdm5vZGUmJnRoaXMuJHBhcmVudCYmdGhpcy4kdm5vZGU9PT10aGlzLiRwYXJlbnQuX3Zub2RlJiYodGhpcy4kcGFyZW50LiRlbD10aGlzLiRlbCl9LHQucHJvdG90eXBlLiRmb3JjZVVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuX3dhdGNoZXImJnRoaXMuX3dhdGNoZXIudXBkYXRlKCl9LHQucHJvdG90eXBlLiRkZXN0cm95PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2lzQmVpbmdEZXN0cm95ZWQpe3Z0KHRoaXMsXCJiZWZvcmVEZXN0cm95XCIpLHRoaXMuX2lzQmVpbmdEZXN0cm95ZWQ9ITA7dmFyIHQ9dGhpcy4kcGFyZW50OyF0fHx0Ll9pc0JlaW5nRGVzdHJveWVkfHx0aGlzLiRvcHRpb25zLmFic3RyYWN0fHxsKHQuJGNoaWxkcmVuLHRoaXMpLHRoaXMuX3dhdGNoZXImJnRoaXMuX3dhdGNoZXIudGVhcmRvd24oKTtmb3IodmFyIGU9dGhpcy5fd2F0Y2hlcnMubGVuZ3RoO2UtLTspdGhpcy5fd2F0Y2hlcnNbZV0udGVhcmRvd24oKTt0aGlzLl9kYXRhLl9fb2JfXyYmdGhpcy5fZGF0YS5fX29iX18udm1Db3VudC0tLHRoaXMuX2lzRGVzdHJveWVkPSEwLHRoaXMuX19wYXRjaF9fKHRoaXMuX3Zub2RlLG51bGwpLHZ0KHRoaXMsXCJkZXN0cm95ZWRcIiksdGhpcy4kb2ZmKCksdGhpcy4kZWwmJih0aGlzLiRlbC5fX3Z1ZV9fPW51bGwpLHRoaXMuJHZub2RlJiYodGhpcy4kdm5vZGUucGFyZW50PW51bGwpfX19KFJ0KSxmdW5jdGlvbih0KXtOdCh0LnByb3RvdHlwZSksdC5wcm90b3R5cGUuJG5leHRUaWNrPWZ1bmN0aW9uKHQpe3JldHVybiBxKHQsdGhpcyl9LHQucHJvdG90eXBlLl9yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC4kb3B0aW9ucyxuPWUucmVuZGVyLHI9ZS5fcGFyZW50Vm5vZGU7aWYodC5faXNNb3VudGVkKWZvcih2YXIgaSBpbiB0LiRzbG90cyl7dmFyIG89dC4kc2xvdHNbaV07KG8uX3JlbmRlcmVkfHxvWzBdJiZvWzBdLmVsbSkmJih0LiRzbG90c1tpXT1BKG8sITApKX10LiRzY29wZWRTbG90cz1yJiZyLmRhdGEuc2NvcGVkU2xvdHN8fGpuLHQuJHZub2RlPXI7dmFyIGE7dHJ5e2E9bi5jYWxsKHQuX3JlbmRlclByb3h5LHQuJGNyZWF0ZUVsZW1lbnQpfWNhdGNoKGUpe1YoZSx0LFwicmVuZGVyXCIpLGE9dC5fdm5vZGV9cmV0dXJuIGEgaW5zdGFuY2VvZiBtcnx8KGE9Z3IoKSksYS5wYXJlbnQ9cixhfX0oUnQpO3ZhciBRcj1bU3RyaW5nLFJlZ0V4cCxBcnJheV0sdGk9e0tlZXBBbGl2ZTp7bmFtZTpcImtlZXAtYWxpdmVcIixhYnN0cmFjdDohMCxwcm9wczp7aW5jbHVkZTpRcixleGNsdWRlOlFyLG1heDpbU3RyaW5nLE51bWJlcl19LGNyZWF0ZWQ6ZnVuY3Rpb24oKXt0aGlzLmNhY2hlPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5rZXlzPVtdfSxkZXN0cm95ZWQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcy5jYWNoZSl6dCh0aGlzLmNhY2hlLHQsdGhpcy5rZXlzKX0sd2F0Y2g6e2luY2x1ZGU6ZnVuY3Rpb24odCl7VnQodGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gVXQodCxlKX0pfSxleGNsdWRlOmZ1bmN0aW9uKHQpe1Z0KHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIVV0KHQsZSl9KX19LHJlbmRlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJHNsb3RzLmRlZmF1bHQsZT1pdCh0KSxuPWUmJmUuY29tcG9uZW50T3B0aW9ucztpZihuKXt2YXIgcj1CdChuKSxpPXRoaXMuaW5jbHVkZSxvPXRoaXMuZXhjbHVkZTtpZihpJiYoIXJ8fCFVdChpLHIpKXx8byYmciYmVXQobyxyKSlyZXR1cm4gZTt2YXIgYT10aGlzLmNhY2hlLHM9dGhpcy5rZXlzLGM9bnVsbD09ZS5rZXk/bi5DdG9yLmNpZCsobi50YWc/XCI6OlwiK24udGFnOlwiXCIpOmUua2V5O2FbY10/KGUuY29tcG9uZW50SW5zdGFuY2U9YVtjXS5jb21wb25lbnRJbnN0YW5jZSxsKHMsYykscy5wdXNoKGMpKTooYVtjXT1lLHMucHVzaChjKSx0aGlzLm1heCYmcy5sZW5ndGg+cGFyc2VJbnQodGhpcy5tYXgpJiZ6dChhLHNbMF0scyx0aGlzLl92bm9kZSkpLGUuZGF0YS5rZWVwQWxpdmU9ITB9cmV0dXJuIGV8fHQmJnRbMF19fX07IWZ1bmN0aW9uKHQpe3ZhciBlPXt9O2UuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIEpufSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcImNvbmZpZ1wiLGUpLHQudXRpbD17d2FybjpwcixleHRlbmQ6aCxtZXJnZU9wdGlvbnM6RixkZWZpbmVSZWFjdGl2ZTpFfSx0LnNldD1qLHQuZGVsZXRlPU4sdC5uZXh0VGljaz1xLHQub3B0aW9ucz1PYmplY3QuY3JlYXRlKG51bGwpLHpuLmZvckVhY2goZnVuY3Rpb24oZSl7dC5vcHRpb25zW2UrXCJzXCJdPU9iamVjdC5jcmVhdGUobnVsbCl9KSx0Lm9wdGlvbnMuX2Jhc2U9dCxoKHQub3B0aW9ucy5jb21wb25lbnRzLHRpKSxmdW5jdGlvbih0KXt0LnVzZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9pbnN0YWxsZWRQbHVnaW5zfHwodGhpcy5faW5zdGFsbGVkUGx1Z2lucz1bXSk7aWYoZS5pbmRleE9mKHQpPi0xKXJldHVybiB0aGlzO3ZhciBuPXYoYXJndW1lbnRzLDEpO3JldHVybiBuLnVuc2hpZnQodGhpcyksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5pbnN0YWxsP3QuaW5zdGFsbC5hcHBseSh0LG4pOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQuYXBwbHkobnVsbCxuKSxlLnB1c2godCksdGhpc319KHQpLGZ1bmN0aW9uKHQpe3QubWl4aW49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub3B0aW9ucz1GKHRoaXMub3B0aW9ucyx0KSx0aGlzfX0odCksSHQodCksZnVuY3Rpb24odCl7em4uZm9yRWFjaChmdW5jdGlvbihlKXt0W2VdPWZ1bmN0aW9uKHQsbil7cmV0dXJuIG4/KFwiY29tcG9uZW50XCI9PT1lJiZvKG4pJiYobi5uYW1lPW4ubmFtZXx8dCxuPXRoaXMub3B0aW9ucy5fYmFzZS5leHRlbmQobikpLFwiZGlyZWN0aXZlXCI9PT1lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiYobj17YmluZDpuLHVwZGF0ZTpufSksdGhpcy5vcHRpb25zW2UrXCJzXCJdW3RdPW4sbik6dGhpcy5vcHRpb25zW2UrXCJzXCJdW3RdfX0pfSh0KX0oUnQpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSdC5wcm90b3R5cGUsXCIkaXNTZXJ2ZXJcIix7Z2V0OnVyfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFJ0LnByb3RvdHlwZSxcIiRzc3JDb250ZXh0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLiR2bm9kZSYmdGhpcy4kdm5vZGUuc3NyQ29udGV4dH19KSxSdC52ZXJzaW9uPVwiMi41LjEzXCI7dmFyIGVpLG5pLHJpLGlpLG9pLGFpLHNpLGNpLHVpPXUoXCJzdHlsZSxjbGFzc1wiKSxsaT11KFwiaW5wdXQsdGV4dGFyZWEsb3B0aW9uLHNlbGVjdCxwcm9ncmVzc1wiKSxmaT1mdW5jdGlvbih0LGUsbil7cmV0dXJuXCJ2YWx1ZVwiPT09biYmbGkodCkmJlwiYnV0dG9uXCIhPT1lfHxcInNlbGVjdGVkXCI9PT1uJiZcIm9wdGlvblwiPT09dHx8XCJjaGVja2VkXCI9PT1uJiZcImlucHV0XCI9PT10fHxcIm11dGVkXCI9PT1uJiZcInZpZGVvXCI9PT10fSxwaT11KFwiY29udGVudGVkaXRhYmxlLGRyYWdnYWJsZSxzcGVsbGNoZWNrXCIpLGRpPXUoXCJhbGxvd2Z1bGxzY3JlZW4sYXN5bmMsYXV0b2ZvY3VzLGF1dG9wbGF5LGNoZWNrZWQsY29tcGFjdCxjb250cm9scyxkZWNsYXJlLGRlZmF1bHQsZGVmYXVsdGNoZWNrZWQsZGVmYXVsdG11dGVkLGRlZmF1bHRzZWxlY3RlZCxkZWZlcixkaXNhYmxlZCxlbmFibGVkLGZvcm1ub3ZhbGlkYXRlLGhpZGRlbixpbmRldGVybWluYXRlLGluZXJ0LGlzbWFwLGl0ZW1zY29wZSxsb29wLG11bHRpcGxlLG11dGVkLG5vaHJlZixub3Jlc2l6ZSxub3NoYWRlLG5vdmFsaWRhdGUsbm93cmFwLG9wZW4scGF1c2VvbmV4aXQscmVhZG9ubHkscmVxdWlyZWQscmV2ZXJzZWQsc2NvcGVkLHNlYW1sZXNzLHNlbGVjdGVkLHNvcnRhYmxlLHRyYW5zbGF0ZSx0cnVlc3BlZWQsdHlwZW11c3RtYXRjaCx2aXNpYmxlXCIpLHZpPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLGhpPWZ1bmN0aW9uKHQpe3JldHVyblwiOlwiPT09dC5jaGFyQXQoNSkmJlwieGxpbmtcIj09PXQuc2xpY2UoMCw1KX0sbWk9ZnVuY3Rpb24odCl7cmV0dXJuIGhpKHQpP3Quc2xpY2UoNix0Lmxlbmd0aCk6XCJcIn0seWk9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXR8fCExPT09dH0sZ2k9e3N2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsbWF0aDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIn0sX2k9dShcImh0bWwsYm9keSxiYXNlLGhlYWQsbGluayxtZXRhLHN0eWxlLHRpdGxlLGFkZHJlc3MsYXJ0aWNsZSxhc2lkZSxmb290ZXIsaGVhZGVyLGgxLGgyLGgzLGg0LGg1LGg2LGhncm91cCxuYXYsc2VjdGlvbixkaXYsZGQsZGwsZHQsZmlnY2FwdGlvbixmaWd1cmUscGljdHVyZSxocixpbWcsbGksbWFpbixvbCxwLHByZSx1bCxhLGIsYWJicixiZGksYmRvLGJyLGNpdGUsY29kZSxkYXRhLGRmbixlbSxpLGtiZCxtYXJrLHEscnAscnQscnRjLHJ1YnkscyxzYW1wLHNtYWxsLHNwYW4sc3Ryb25nLHN1YixzdXAsdGltZSx1LHZhcix3YnIsYXJlYSxhdWRpbyxtYXAsdHJhY2ssdmlkZW8sZW1iZWQsb2JqZWN0LHBhcmFtLHNvdXJjZSxjYW52YXMsc2NyaXB0LG5vc2NyaXB0LGRlbCxpbnMsY2FwdGlvbixjb2wsY29sZ3JvdXAsdGFibGUsdGhlYWQsdGJvZHksdGQsdGgsdHIsYnV0dG9uLGRhdGFsaXN0LGZpZWxkc2V0LGZvcm0saW5wdXQsbGFiZWwsbGVnZW5kLG1ldGVyLG9wdGdyb3VwLG9wdGlvbixvdXRwdXQscHJvZ3Jlc3Msc2VsZWN0LHRleHRhcmVhLGRldGFpbHMsZGlhbG9nLG1lbnUsbWVudWl0ZW0sc3VtbWFyeSxjb250ZW50LGVsZW1lbnQsc2hhZG93LHRlbXBsYXRlLGJsb2NrcXVvdGUsaWZyYW1lLHRmb290XCIpLGJpPXUoXCJzdmcsYW5pbWF0ZSxjaXJjbGUsY2xpcHBhdGgsY3Vyc29yLGRlZnMsZGVzYyxlbGxpcHNlLGZpbHRlcixmb250LWZhY2UsZm9yZWlnbk9iamVjdCxnLGdseXBoLGltYWdlLGxpbmUsbWFya2VyLG1hc2ssbWlzc2luZy1nbHlwaCxwYXRoLHBhdHRlcm4scG9seWdvbixwb2x5bGluZSxyZWN0LHN3aXRjaCxzeW1ib2wsdGV4dCx0ZXh0cGF0aCx0c3Bhbix1c2Usdmlld1wiLCEwKSwkaT1mdW5jdGlvbih0KXtyZXR1cm4gX2kodCl8fGJpKHQpfSxDaT1PYmplY3QuY3JlYXRlKG51bGwpLHdpPXUoXCJ0ZXh0LG51bWJlcixwYXNzd29yZCxzZWFyY2gsZW1haWwsdGVsLHVybFwiKSx4aT1PYmplY3QuZnJlZXplKHtjcmVhdGVFbGVtZW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KTtyZXR1cm5cInNlbGVjdFwiIT09dD9uOihlLmRhdGEmJmUuZGF0YS5hdHRycyYmdm9pZCAwIT09ZS5kYXRhLmF0dHJzLm11bHRpcGxlJiZuLnNldEF0dHJpYnV0ZShcIm11bHRpcGxlXCIsXCJtdWx0aXBsZVwiKSxuKX0sY3JlYXRlRWxlbWVudE5TOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhnaVt0XSxlKX0sY3JlYXRlVGV4dE5vZGU6ZnVuY3Rpb24odCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpfSxjcmVhdGVDb21tZW50OmZ1bmN0aW9uKHQpe3JldHVybiBkb2N1bWVudC5jcmVhdGVDb21tZW50KHQpfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24odCxlLG4pe3QuaW5zZXJ0QmVmb3JlKGUsbil9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKHQsZSl7dC5yZW1vdmVDaGlsZChlKX0sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24odCxlKXt0LmFwcGVuZENoaWxkKGUpfSxwYXJlbnROb2RlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnBhcmVudE5vZGV9LG5leHRTaWJsaW5nOmZ1bmN0aW9uKHQpe3JldHVybiB0Lm5leHRTaWJsaW5nfSx0YWdOYW1lOmZ1bmN0aW9uKHQpe3JldHVybiB0LnRhZ05hbWV9LHNldFRleHRDb250ZW50OmZ1bmN0aW9uKHQsZSl7dC50ZXh0Q29udGVudD1lfSxzZXRBdHRyaWJ1dGU6ZnVuY3Rpb24odCxlLG4pe3Quc2V0QXR0cmlidXRlKGUsbil9fSksa2k9e2NyZWF0ZTpmdW5jdGlvbih0LGUpe1h0KGUpfSx1cGRhdGU6ZnVuY3Rpb24odCxlKXt0LmRhdGEucmVmIT09ZS5kYXRhLnJlZiYmKFh0KHQsITApLFh0KGUpKX0sZGVzdHJveTpmdW5jdGlvbih0KXtYdCh0LCEwKX19LEFpPW5ldyBtcihcIlwiLHt9LFtdKSxPaT1bXCJjcmVhdGVcIixcImFjdGl2YXRlXCIsXCJ1cGRhdGVcIixcInJlbW92ZVwiLFwiZGVzdHJveVwiXSxTaT17Y3JlYXRlOnRlLHVwZGF0ZTp0ZSxkZXN0cm95OmZ1bmN0aW9uKHQpe3RlKHQsQWkpfX0sVGk9T2JqZWN0LmNyZWF0ZShudWxsKSxFaT1ba2ksU2ldLGppPXtjcmVhdGU6cmUsdXBkYXRlOnJlfSxOaT17Y3JlYXRlOm9lLHVwZGF0ZTpvZX0sSWk9L1tcXHcpLitcXC1fJFxcXV0vLExpPVwiX19yXCIsTWk9XCJfX2NcIixEaT17Y3JlYXRlOnhlLHVwZGF0ZTp4ZX0sUGk9e2NyZWF0ZTprZSx1cGRhdGU6a2V9LEZpPXAoZnVuY3Rpb24odCl7dmFyIGU9e30sbj0vOiguKykvO3JldHVybiB0LnNwbGl0KC87KD8hW14oXSpcXCkpL2cpLmZvckVhY2goZnVuY3Rpb24odCl7aWYodCl7dmFyIHI9dC5zcGxpdChuKTtyLmxlbmd0aD4xJiYoZVtyWzBdLnRyaW0oKV09clsxXS50cmltKCkpfX0pLGV9KSxSaT0vXi0tLyxIaT0vXFxzKiFpbXBvcnRhbnQkLyxCaT1mdW5jdGlvbih0LGUsbil7aWYoUmkudGVzdChlKSl0LnN0eWxlLnNldFByb3BlcnR5KGUsbik7ZWxzZSBpZihIaS50ZXN0KG4pKXQuc3R5bGUuc2V0UHJvcGVydHkoZSxuLnJlcGxhY2UoSGksXCJcIiksXCJpbXBvcnRhbnRcIik7ZWxzZXt2YXIgcj1WaShlKTtpZihBcnJheS5pc0FycmF5KG4pKWZvcih2YXIgaT0wLG89bi5sZW5ndGg7aTxvO2krKyl0LnN0eWxlW3JdPW5baV07ZWxzZSB0LnN0eWxlW3JdPW59fSxVaT1bXCJXZWJraXRcIixcIk1velwiLFwibXNcIl0sVmk9cChmdW5jdGlvbih0KXtpZihjaT1jaXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcImZpbHRlclwiIT09KHQ9UG4odCkpJiZ0IGluIGNpKXJldHVybiB0O2Zvcih2YXIgZT10LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSksbj0wO248VWkubGVuZ3RoO24rKyl7dmFyIHI9VWlbbl0rZTtpZihyIGluIGNpKXJldHVybiByfX0pLHppPXtjcmVhdGU6U2UsdXBkYXRlOlNlfSxLaT1wKGZ1bmN0aW9uKHQpe3JldHVybntlbnRlckNsYXNzOnQrXCItZW50ZXJcIixlbnRlclRvQ2xhc3M6dCtcIi1lbnRlci10b1wiLGVudGVyQWN0aXZlQ2xhc3M6dCtcIi1lbnRlci1hY3RpdmVcIixsZWF2ZUNsYXNzOnQrXCItbGVhdmVcIixsZWF2ZVRvQ2xhc3M6dCtcIi1sZWF2ZS10b1wiLGxlYXZlQWN0aXZlQ2xhc3M6dCtcIi1sZWF2ZS1hY3RpdmVcIn19KSxKaT1HbiYmIXRyLHFpPVwidHJhbnNpdGlvblwiLFdpPVwiYW5pbWF0aW9uXCIsR2k9XCJ0cmFuc2l0aW9uXCIsWmk9XCJ0cmFuc2l0aW9uZW5kXCIsWGk9XCJhbmltYXRpb25cIixZaT1cImFuaW1hdGlvbmVuZFwiO0ppJiYodm9pZCAwPT09d2luZG93Lm9udHJhbnNpdGlvbmVuZCYmdm9pZCAwIT09d2luZG93Lm9ud2Via2l0dHJhbnNpdGlvbmVuZCYmKEdpPVwiV2Via2l0VHJhbnNpdGlvblwiLFppPVwid2Via2l0VHJhbnNpdGlvbkVuZFwiKSx2b2lkIDA9PT13aW5kb3cub25hbmltYXRpb25lbmQmJnZvaWQgMCE9PXdpbmRvdy5vbndlYmtpdGFuaW1hdGlvbmVuZCYmKFhpPVwiV2Via2l0QW5pbWF0aW9uXCIsWWk9XCJ3ZWJraXRBbmltYXRpb25FbmRcIikpO3ZhciBRaT1Hbj93aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lP3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpOnNldFRpbWVvdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQoKX0sdG89L1xcYih0cmFuc2Zvcm18YWxsKSgsfCQpLyxlbz1mdW5jdGlvbihpKXtmdW5jdGlvbiBvKHQpe3ZhciBuPUEucGFyZW50Tm9kZSh0KTtlKG4pJiZBLnJlbW92ZUNoaWxkKG4sdCl9ZnVuY3Rpb24gYSh0LHIsaSxvLGEpe2lmKHQuaXNSb290SW5zZXJ0PSFhLCFmdW5jdGlvbih0LHIsaSxvKXt2YXIgYT10LmRhdGE7aWYoZShhKSl7dmFyIHU9ZSh0LmNvbXBvbmVudEluc3RhbmNlKSYmYS5rZWVwQWxpdmU7aWYoZShhPWEuaG9vaykmJmUoYT1hLmluaXQpJiZhKHQsITEsaSxvKSxlKHQuY29tcG9uZW50SW5zdGFuY2UpKXJldHVybiBzKHQsciksbih1KSYmZnVuY3Rpb24odCxuLHIsaSl7Zm9yKHZhciBvLGE9dDthLmNvbXBvbmVudEluc3RhbmNlOylpZihhPWEuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlLGUobz1hLmRhdGEpJiZlKG89by50cmFuc2l0aW9uKSl7Zm9yKG89MDtvPHguYWN0aXZhdGUubGVuZ3RoOysrbyl4LmFjdGl2YXRlW29dKEFpLGEpO24ucHVzaChhKTticmVha31jKHIsdC5lbG0saSl9KHQscixpLG8pLCEwfX0odCxyLGksbykpe3ZhciB1PXQuZGF0YSxmPXQuY2hpbGRyZW4sdj10LnRhZztlKHYpPyh0LmVsbT10Lm5zP0EuY3JlYXRlRWxlbWVudE5TKHQubnMsdik6QS5jcmVhdGVFbGVtZW50KHYsdCksZCh0KSxsKHQsZixyKSxlKHUpJiZwKHQsciksYyhpLHQuZWxtLG8pKTpuKHQuaXNDb21tZW50KT8odC5lbG09QS5jcmVhdGVDb21tZW50KHQudGV4dCksYyhpLHQuZWxtLG8pKToodC5lbG09QS5jcmVhdGVUZXh0Tm9kZSh0LnRleHQpLGMoaSx0LmVsbSxvKSl9fWZ1bmN0aW9uIHModCxuKXtlKHQuZGF0YS5wZW5kaW5nSW5zZXJ0KSYmKG4ucHVzaC5hcHBseShuLHQuZGF0YS5wZW5kaW5nSW5zZXJ0KSx0LmRhdGEucGVuZGluZ0luc2VydD1udWxsKSx0LmVsbT10LmNvbXBvbmVudEluc3RhbmNlLiRlbCxmKHQpPyhwKHQsbiksZCh0KSk6KFh0KHQpLG4ucHVzaCh0KSl9ZnVuY3Rpb24gYyh0LG4scil7ZSh0KSYmKGUocik/ci5wYXJlbnROb2RlPT09dCYmQS5pbnNlcnRCZWZvcmUodCxuLHIpOkEuYXBwZW5kQ2hpbGQodCxuKSl9ZnVuY3Rpb24gbCh0LGUsbil7aWYoQXJyYXkuaXNBcnJheShlKSlmb3IodmFyIGk9MDtpPGUubGVuZ3RoOysraSlhKGVbaV0sbix0LmVsbSxudWxsLCEwKTtlbHNlIHIodC50ZXh0KSYmQS5hcHBlbmRDaGlsZCh0LmVsbSxBLmNyZWF0ZVRleHROb2RlKFN0cmluZyh0LnRleHQpKSl9ZnVuY3Rpb24gZih0KXtmb3IoO3QuY29tcG9uZW50SW5zdGFuY2U7KXQ9dC5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGU7cmV0dXJuIGUodC50YWcpfWZ1bmN0aW9uIHAodCxuKXtmb3IodmFyIHI9MDtyPHguY3JlYXRlLmxlbmd0aDsrK3IpeC5jcmVhdGVbcl0oQWksdCk7ZShDPXQuZGF0YS5ob29rKSYmKGUoQy5jcmVhdGUpJiZDLmNyZWF0ZShBaSx0KSxlKEMuaW5zZXJ0KSYmbi5wdXNoKHQpKX1mdW5jdGlvbiBkKHQpe3ZhciBuO2lmKGUobj10LmZuU2NvcGVJZCkpQS5zZXRBdHRyaWJ1dGUodC5lbG0sbixcIlwiKTtlbHNlIGZvcih2YXIgcj10O3I7KWUobj1yLmNvbnRleHQpJiZlKG49bi4kb3B0aW9ucy5fc2NvcGVJZCkmJkEuc2V0QXR0cmlidXRlKHQuZWxtLG4sXCJcIikscj1yLnBhcmVudDtlKG49UHIpJiZuIT09dC5jb250ZXh0JiZuIT09dC5mbkNvbnRleHQmJmUobj1uLiRvcHRpb25zLl9zY29wZUlkKSYmQS5zZXRBdHRyaWJ1dGUodC5lbG0sbixcIlwiKX1mdW5jdGlvbiB2KHQsZSxuLHIsaSxvKXtmb3IoO3I8PWk7KytyKWEobltyXSxvLHQsZSl9ZnVuY3Rpb24gaCh0KXt2YXIgbixyLGk9dC5kYXRhO2lmKGUoaSkpZm9yKGUobj1pLmhvb2spJiZlKG49bi5kZXN0cm95KSYmbih0KSxuPTA7bjx4LmRlc3Ryb3kubGVuZ3RoOysrbil4LmRlc3Ryb3lbbl0odCk7aWYoZShuPXQuY2hpbGRyZW4pKWZvcihyPTA7cjx0LmNoaWxkcmVuLmxlbmd0aDsrK3IpaCh0LmNoaWxkcmVuW3JdKX1mdW5jdGlvbiBtKHQsbixyLGkpe2Zvcig7cjw9aTsrK3Ipe3ZhciBhPW5bcl07ZShhKSYmKGUoYS50YWcpPyh5KGEpLGgoYSkpOm8oYS5lbG0pKX19ZnVuY3Rpb24geSh0LG4pe2lmKGUobil8fGUodC5kYXRhKSl7dmFyIHIsaT14LnJlbW92ZS5sZW5ndGgrMTtmb3IoZShuKT9uLmxpc3RlbmVycys9aTpuPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpezA9PS0tbi5saXN0ZW5lcnMmJm8odCl9cmV0dXJuIG4ubGlzdGVuZXJzPWUsbn0odC5lbG0saSksZShyPXQuY29tcG9uZW50SW5zdGFuY2UpJiZlKHI9ci5fdm5vZGUpJiZlKHIuZGF0YSkmJnkocixuKSxyPTA7cjx4LnJlbW92ZS5sZW5ndGg7KytyKXgucmVtb3ZlW3JdKHQsbik7ZShyPXQuZGF0YS5ob29rKSYmZShyPXIucmVtb3ZlKT9yKHQsbik6bigpfWVsc2Ugbyh0LmVsbSl9ZnVuY3Rpb24gZyhuLHIsaSxvLHMpe2Zvcih2YXIgYyx1LGwsZj0wLHA9MCxkPXIubGVuZ3RoLTEsaD1yWzBdLHk9cltkXSxnPWkubGVuZ3RoLTEsYj1pWzBdLCQ9aVtnXSxDPSFzO2Y8PWQmJnA8PWc7KXQoaCk/aD1yWysrZl06dCh5KT95PXJbLS1kXTpZdChoLGIpPyhfKGgsYixvKSxoPXJbKytmXSxiPWlbKytwXSk6WXQoeSwkKT8oXyh5LCQsbykseT1yWy0tZF0sJD1pWy0tZ10pOll0KGgsJCk/KF8oaCwkLG8pLEMmJkEuaW5zZXJ0QmVmb3JlKG4saC5lbG0sQS5uZXh0U2libGluZyh5LmVsbSkpLGg9clsrK2ZdLCQ9aVstLWddKTpZdCh5LGIpPyhfKHksYixvKSxDJiZBLmluc2VydEJlZm9yZShuLHkuZWxtLGguZWxtKSx5PXJbLS1kXSxiPWlbKytwXSk6KHQoYykmJihjPVF0KHIsZixkKSksdCh1PWUoYi5rZXkpP2NbYi5rZXldOmZ1bmN0aW9uKHQsbixyLGkpe2Zvcih2YXIgbz1yO288aTtvKyspe3ZhciBhPW5bb107aWYoZShhKSYmWXQodCxhKSlyZXR1cm4gb319KGIscixmLGQpKT9hKGIsbyxuLGguZWxtKTpZdChsPXJbdV0sYik/KF8obCxiLG8pLHJbdV09dm9pZCAwLEMmJkEuaW5zZXJ0QmVmb3JlKG4sbC5lbG0saC5lbG0pKTphKGIsbyxuLGguZWxtKSxiPWlbKytwXSk7Zj5kP3Yobix0KGlbZysxXSk/bnVsbDppW2crMV0uZWxtLGkscCxnLG8pOnA+ZyYmbSgwLHIsZixkKX1mdW5jdGlvbiBfKHIsaSxvLGEpe2lmKHIhPT1pKXt2YXIgcz1pLmVsbT1yLmVsbTtpZihuKHIuaXNBc3luY1BsYWNlaG9sZGVyKSllKGkuYXN5bmNGYWN0b3J5LnJlc29sdmVkKT8kKHIuZWxtLGksbyk6aS5pc0FzeW5jUGxhY2Vob2xkZXI9ITA7ZWxzZSBpZihuKGkuaXNTdGF0aWMpJiZuKHIuaXNTdGF0aWMpJiZpLmtleT09PXIua2V5JiYobihpLmlzQ2xvbmVkKXx8bihpLmlzT25jZSkpKWkuY29tcG9uZW50SW5zdGFuY2U9ci5jb21wb25lbnRJbnN0YW5jZTtlbHNle3ZhciBjLHU9aS5kYXRhO2UodSkmJmUoYz11Lmhvb2spJiZlKGM9Yy5wcmVwYXRjaCkmJmMocixpKTt2YXIgbD1yLmNoaWxkcmVuLHA9aS5jaGlsZHJlbjtpZihlKHUpJiZmKGkpKXtmb3IoYz0wO2M8eC51cGRhdGUubGVuZ3RoOysrYyl4LnVwZGF0ZVtjXShyLGkpO2UoYz11Lmhvb2spJiZlKGM9Yy51cGRhdGUpJiZjKHIsaSl9dChpLnRleHQpP2UobCkmJmUocCk/bCE9PXAmJmcocyxsLHAsbyxhKTplKHApPyhlKHIudGV4dCkmJkEuc2V0VGV4dENvbnRlbnQocyxcIlwiKSx2KHMsbnVsbCxwLDAscC5sZW5ndGgtMSxvKSk6ZShsKT9tKDAsbCwwLGwubGVuZ3RoLTEpOmUoci50ZXh0KSYmQS5zZXRUZXh0Q29udGVudChzLFwiXCIpOnIudGV4dCE9PWkudGV4dCYmQS5zZXRUZXh0Q29udGVudChzLGkudGV4dCksZSh1KSYmZShjPXUuaG9vaykmJmUoYz1jLnBvc3RwYXRjaCkmJmMocixpKX19fWZ1bmN0aW9uIGIodCxyLGkpe2lmKG4oaSkmJmUodC5wYXJlbnQpKXQucGFyZW50LmRhdGEucGVuZGluZ0luc2VydD1yO2Vsc2UgZm9yKHZhciBvPTA7bzxyLmxlbmd0aDsrK28pcltvXS5kYXRhLmhvb2suaW5zZXJ0KHJbb10pfWZ1bmN0aW9uICQodCxyLGksbyl7dmFyIGEsYz1yLnRhZyx1PXIuZGF0YSxmPXIuY2hpbGRyZW47aWYobz1vfHx1JiZ1LnByZSxyLmVsbT10LG4oci5pc0NvbW1lbnQpJiZlKHIuYXN5bmNGYWN0b3J5KSlyZXR1cm4gci5pc0FzeW5jUGxhY2Vob2xkZXI9ITAsITA7aWYoZSh1KSYmKGUoYT11Lmhvb2spJiZlKGE9YS5pbml0KSYmYShyLCEwKSxlKGE9ci5jb21wb25lbnRJbnN0YW5jZSkpKXJldHVybiBzKHIsaSksITA7aWYoZShjKSl7aWYoZShmKSlpZih0Lmhhc0NoaWxkTm9kZXMoKSlpZihlKGE9dSkmJmUoYT1hLmRvbVByb3BzKSYmZShhPWEuaW5uZXJIVE1MKSl7aWYoYSE9PXQuaW5uZXJIVE1MKXJldHVybiExfWVsc2V7Zm9yKHZhciBkPSEwLHY9dC5maXJzdENoaWxkLGg9MDtoPGYubGVuZ3RoO2grKyl7aWYoIXZ8fCEkKHYsZltoXSxpLG8pKXtkPSExO2JyZWFrfXY9di5uZXh0U2libGluZ31pZighZHx8dilyZXR1cm4hMX1lbHNlIGwocixmLGkpO2lmKGUodSkpe3ZhciBtPSExO2Zvcih2YXIgeSBpbiB1KWlmKCFPKHkpKXttPSEwLHAocixpKTticmVha30hbSYmdS5jbGFzcyYmVyh1LmNsYXNzKX19ZWxzZSB0LmRhdGEhPT1yLnRleHQmJih0LmRhdGE9ci50ZXh0KTtyZXR1cm4hMH12YXIgQyx3LHg9e30saz1pLm1vZHVsZXMsQT1pLm5vZGVPcHM7Zm9yKEM9MDtDPE9pLmxlbmd0aDsrK0MpZm9yKHhbT2lbQ11dPVtdLHc9MDt3PGsubGVuZ3RoOysrdyllKGtbd11bT2lbQ11dKSYmeFtPaVtDXV0ucHVzaChrW3ddW09pW0NdXSk7dmFyIE89dShcImF0dHJzLGNsYXNzLHN0YXRpY0NsYXNzLHN0YXRpY1N0eWxlLGtleVwiKTtyZXR1cm4gZnVuY3Rpb24ocixpLG8scyxjLHUpe2lmKCF0KGkpKXt2YXIgbD0hMSxwPVtdO2lmKHQocikpbD0hMCxhKGkscCxjLHUpO2Vsc2V7dmFyIGQ9ZShyLm5vZGVUeXBlKTtpZighZCYmWXQocixpKSlfKHIsaSxwLHMpO2Vsc2V7aWYoZCl7aWYoMT09PXIubm9kZVR5cGUmJnIuaGFzQXR0cmlidXRlKFZuKSYmKHIucmVtb3ZlQXR0cmlidXRlKFZuKSxvPSEwKSxuKG8pJiYkKHIsaSxwKSlyZXR1cm4gYihpLHAsITApLHI7cj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG1yKEEudGFnTmFtZSh0KS50b0xvd2VyQ2FzZSgpLHt9LFtdLHZvaWQgMCx0KX0ocil9dmFyIHY9ci5lbG0seT1BLnBhcmVudE5vZGUodik7aWYoYShpLHAsdi5fbGVhdmVDYj9udWxsOnksQS5uZXh0U2libGluZyh2KSksZShpLnBhcmVudCkpZm9yKHZhciBnPWkucGFyZW50LEM9ZihpKTtnOyl7Zm9yKHZhciB3PTA7dzx4LmRlc3Ryb3kubGVuZ3RoOysrdyl4LmRlc3Ryb3lbd10oZyk7aWYoZy5lbG09aS5lbG0sQyl7Zm9yKHZhciBrPTA7azx4LmNyZWF0ZS5sZW5ndGg7KytrKXguY3JlYXRlW2tdKEFpLGcpO3ZhciBPPWcuZGF0YS5ob29rLmluc2VydDtpZihPLm1lcmdlZClmb3IodmFyIFM9MTtTPE8uZm5zLmxlbmd0aDtTKyspTy5mbnNbU10oKX1lbHNlIFh0KGcpO2c9Zy5wYXJlbnR9ZSh5KT9tKDAsW3JdLDAsMCk6ZShyLnRhZykmJmgocil9fXJldHVybiBiKGkscCxsKSxpLmVsbX1lKHIpJiZoKHIpfX0oe25vZGVPcHM6eGksbW9kdWxlczpbamksTmksRGksUGksemksR24/e2NyZWF0ZTpWZSxhY3RpdmF0ZTpWZSxyZW1vdmU6ZnVuY3Rpb24odCxlKXshMCE9PXQuZGF0YS5zaG93P0hlKHQsZSk6ZSgpfX06e31dLmNvbmNhdChFaSl9KTt0ciYmZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInNlbGVjdGlvbmNoYW5nZVwiLGZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDt0JiZ0LnZtb2RlbCYmWmUodCxcImlucHV0XCIpfSk7dmFyIG5vPXtpbnNlcnRlZDpmdW5jdGlvbih0LGUsbixyKXtcInNlbGVjdFwiPT09bi50YWc/KHIuZWxtJiYhci5lbG0uX3ZPcHRpb25zP1kobixcInBvc3RwYXRjaFwiLGZ1bmN0aW9uKCl7bm8uY29tcG9uZW50VXBkYXRlZCh0LGUsbil9KTp6ZSh0LGUsbi5jb250ZXh0KSx0Ll92T3B0aW9ucz1bXS5tYXAuY2FsbCh0Lm9wdGlvbnMscWUpKTooXCJ0ZXh0YXJlYVwiPT09bi50YWd8fHdpKHQudHlwZSkpJiYodC5fdk1vZGlmaWVycz1lLm1vZGlmaWVycyxlLm1vZGlmaWVycy5sYXp5fHwodC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsR2UpLG5yfHwodC5hZGRFdmVudExpc3RlbmVyKFwiY29tcG9zaXRpb25zdGFydFwiLFdlKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJjb21wb3NpdGlvbmVuZFwiLEdlKSksdHImJih0LnZtb2RlbD0hMCkpKX0sY29tcG9uZW50VXBkYXRlZDpmdW5jdGlvbih0LGUsbil7aWYoXCJzZWxlY3RcIj09PW4udGFnKXt6ZSh0LGUsbi5jb250ZXh0KTt2YXIgcj10Ll92T3B0aW9ucyxpPXQuX3ZPcHRpb25zPVtdLm1hcC5jYWxsKHQub3B0aW9ucyxxZSk7aWYoaS5zb21lKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIWcodCxyW2VdKX0pKXsodC5tdWx0aXBsZT9lLnZhbHVlLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIEplKHQsaSl9KTplLnZhbHVlIT09ZS5vbGRWYWx1ZSYmSmUoZS52YWx1ZSxpKSkmJlplKHQsXCJjaGFuZ2VcIil9fX19LHJvPXttb2RlbDpubyxzaG93OntiaW5kOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLnZhbHVlLGk9KG49WGUobikpLmRhdGEmJm4uZGF0YS50cmFuc2l0aW9uLG89dC5fX3ZPcmlnaW5hbERpc3BsYXk9XCJub25lXCI9PT10LnN0eWxlLmRpc3BsYXk/XCJcIjp0LnN0eWxlLmRpc3BsYXk7ciYmaT8obi5kYXRhLnNob3c9ITAsUmUobixmdW5jdGlvbigpe3Quc3R5bGUuZGlzcGxheT1vfSkpOnQuc3R5bGUuZGlzcGxheT1yP286XCJub25lXCJ9LHVwZGF0ZTpmdW5jdGlvbih0LGUsbil7dmFyIHI9ZS52YWx1ZTtpZihyIT09ZS5vbGRWYWx1ZSl7KG49WGUobikpLmRhdGEmJm4uZGF0YS50cmFuc2l0aW9uPyhuLmRhdGEuc2hvdz0hMCxyP1JlKG4sZnVuY3Rpb24oKXt0LnN0eWxlLmRpc3BsYXk9dC5fX3ZPcmlnaW5hbERpc3BsYXl9KTpIZShuLGZ1bmN0aW9uKCl7dC5zdHlsZS5kaXNwbGF5PVwibm9uZVwifSkpOnQuc3R5bGUuZGlzcGxheT1yP3QuX192T3JpZ2luYWxEaXNwbGF5Olwibm9uZVwifX0sdW5iaW5kOmZ1bmN0aW9uKHQsZSxuLHIsaSl7aXx8KHQuc3R5bGUuZGlzcGxheT10Ll9fdk9yaWdpbmFsRGlzcGxheSl9fX0saW89e25hbWU6U3RyaW5nLGFwcGVhcjpCb29sZWFuLGNzczpCb29sZWFuLG1vZGU6U3RyaW5nLHR5cGU6U3RyaW5nLGVudGVyQ2xhc3M6U3RyaW5nLGxlYXZlQ2xhc3M6U3RyaW5nLGVudGVyVG9DbGFzczpTdHJpbmcsbGVhdmVUb0NsYXNzOlN0cmluZyxlbnRlckFjdGl2ZUNsYXNzOlN0cmluZyxsZWF2ZUFjdGl2ZUNsYXNzOlN0cmluZyxhcHBlYXJDbGFzczpTdHJpbmcsYXBwZWFyQWN0aXZlQ2xhc3M6U3RyaW5nLGFwcGVhclRvQ2xhc3M6U3RyaW5nLGR1cmF0aW9uOltOdW1iZXIsU3RyaW5nLE9iamVjdF19LG9vPXtuYW1lOlwidHJhbnNpdGlvblwiLHByb3BzOmlvLGFic3RyYWN0OiEwLHJlbmRlcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcy4kc2xvdHMuZGVmYXVsdDtpZihuJiYobj1uLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC50YWd8fHJ0KHQpfSkpLmxlbmd0aCl7dmFyIGk9dGhpcy5tb2RlLG89blswXTtpZihmdW5jdGlvbih0KXtmb3IoO3Q9dC5wYXJlbnQ7KWlmKHQuZGF0YS50cmFuc2l0aW9uKXJldHVybiEwfSh0aGlzLiR2bm9kZSkpcmV0dXJuIG87dmFyIGE9WWUobyk7aWYoIWEpcmV0dXJuIG87aWYodGhpcy5fbGVhdmluZylyZXR1cm4gdG4odCxvKTt2YXIgcz1cIl9fdHJhbnNpdGlvbi1cIit0aGlzLl91aWQrXCItXCI7YS5rZXk9bnVsbD09YS5rZXk/YS5pc0NvbW1lbnQ/cytcImNvbW1lbnRcIjpzK2EudGFnOnIoYS5rZXkpPzA9PT1TdHJpbmcoYS5rZXkpLmluZGV4T2Yocyk/YS5rZXk6cythLmtleTphLmtleTt2YXIgYz0oYS5kYXRhfHwoYS5kYXRhPXt9KSkudHJhbnNpdGlvbj1RZSh0aGlzKSx1PXRoaXMuX3Zub2RlLGw9WWUodSk7aWYoYS5kYXRhLmRpcmVjdGl2ZXMmJmEuZGF0YS5kaXJlY3RpdmVzLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuXCJzaG93XCI9PT10Lm5hbWV9KSYmKGEuZGF0YS5zaG93PSEwKSxsJiZsLmRhdGEmJiFmdW5jdGlvbih0LGUpe3JldHVybiBlLmtleT09PXQua2V5JiZlLnRhZz09PXQudGFnfShhLGwpJiYhcnQobCkmJighbC5jb21wb25lbnRJbnN0YW5jZXx8IWwuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlLmlzQ29tbWVudCkpe3ZhciBmPWwuZGF0YS50cmFuc2l0aW9uPWgoe30sYyk7aWYoXCJvdXQtaW5cIj09PWkpcmV0dXJuIHRoaXMuX2xlYXZpbmc9ITAsWShmLFwiYWZ0ZXJMZWF2ZVwiLGZ1bmN0aW9uKCl7ZS5fbGVhdmluZz0hMSxlLiRmb3JjZVVwZGF0ZSgpfSksdG4odCxvKTtpZihcImluLW91dFwiPT09aSl7aWYocnQoYSkpcmV0dXJuIHU7dmFyIHAsZD1mdW5jdGlvbigpe3AoKX07WShjLFwiYWZ0ZXJFbnRlclwiLGQpLFkoYyxcImVudGVyQ2FuY2VsbGVkXCIsZCksWShmLFwiZGVsYXlMZWF2ZVwiLGZ1bmN0aW9uKHQpe3A9dH0pfX1yZXR1cm4gb319fSxhbz1oKHt0YWc6U3RyaW5nLG1vdmVDbGFzczpTdHJpbmd9LGlvKTtkZWxldGUgYW8ubW9kZTt2YXIgc289e1RyYW5zaXRpb246b28sVHJhbnNpdGlvbkdyb3VwOntwcm9wczphbyxyZW5kZXI6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMudGFnfHx0aGlzLiR2bm9kZS5kYXRhLnRhZ3x8XCJzcGFuXCIsbj1PYmplY3QuY3JlYXRlKG51bGwpLHI9dGhpcy5wcmV2Q2hpbGRyZW49dGhpcy5jaGlsZHJlbixpPXRoaXMuJHNsb3RzLmRlZmF1bHR8fFtdLG89dGhpcy5jaGlsZHJlbj1bXSxhPVFlKHRoaXMpLHM9MDtzPGkubGVuZ3RoO3MrKyl7dmFyIGM9aVtzXTtjLnRhZyYmbnVsbCE9Yy5rZXkmJjAhPT1TdHJpbmcoYy5rZXkpLmluZGV4T2YoXCJfX3ZsaXN0XCIpJiYoby5wdXNoKGMpLG5bYy5rZXldPWMsKGMuZGF0YXx8KGMuZGF0YT17fSkpLnRyYW5zaXRpb249YSl9aWYocil7Zm9yKHZhciB1PVtdLGw9W10sZj0wO2Y8ci5sZW5ndGg7ZisrKXt2YXIgcD1yW2ZdO3AuZGF0YS50cmFuc2l0aW9uPWEscC5kYXRhLnBvcz1wLmVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxuW3Aua2V5XT91LnB1c2gocCk6bC5wdXNoKHApfXRoaXMua2VwdD10KGUsbnVsbCx1KSx0aGlzLnJlbW92ZWQ9bH1yZXR1cm4gdChlLG51bGwsbyl9LGJlZm9yZVVwZGF0ZTpmdW5jdGlvbigpe3RoaXMuX19wYXRjaF9fKHRoaXMuX3Zub2RlLHRoaXMua2VwdCwhMSwhMCksdGhpcy5fdm5vZGU9dGhpcy5rZXB0fSx1cGRhdGVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wcmV2Q2hpbGRyZW4sZT10aGlzLm1vdmVDbGFzc3x8KHRoaXMubmFtZXx8XCJ2XCIpK1wiLW1vdmVcIjt0Lmxlbmd0aCYmdGhpcy5oYXNNb3ZlKHRbMF0uZWxtLGUpJiYodC5mb3JFYWNoKGVuKSx0LmZvckVhY2gobm4pLHQuZm9yRWFjaChybiksdGhpcy5fcmVmbG93PWRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0LHQuZm9yRWFjaChmdW5jdGlvbih0KXtpZih0LmRhdGEubW92ZWQpe3ZhciBuPXQuZWxtLHI9bi5zdHlsZTtJZShuLGUpLHIudHJhbnNmb3JtPXIuV2Via2l0VHJhbnNmb3JtPXIudHJhbnNpdGlvbkR1cmF0aW9uPVwiXCIsbi5hZGRFdmVudExpc3RlbmVyKFppLG4uX21vdmVDYj1mdW5jdGlvbiB0KHIpe3ImJiEvdHJhbnNmb3JtJC8udGVzdChyLnByb3BlcnR5TmFtZSl8fChuLnJlbW92ZUV2ZW50TGlzdGVuZXIoWmksdCksbi5fbW92ZUNiPW51bGwsTGUobixlKSl9KX19KSl9LG1ldGhvZHM6e2hhc01vdmU6ZnVuY3Rpb24odCxlKXtpZighSmkpcmV0dXJuITE7aWYodGhpcy5faGFzTW92ZSlyZXR1cm4gdGhpcy5faGFzTW92ZTt2YXIgbj10LmNsb25lTm9kZSgpO3QuX3RyYW5zaXRpb25DbGFzc2VzJiZ0Ll90cmFuc2l0aW9uQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe0VlKG4sdCl9KSxUZShuLGUpLG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzLiRlbC5hcHBlbmRDaGlsZChuKTt2YXIgcj1EZShuKTtyZXR1cm4gdGhpcy4kZWwucmVtb3ZlQ2hpbGQobiksdGhpcy5faGFzTW92ZT1yLmhhc1RyYW5zZm9ybX19fX07UnQuY29uZmlnLm11c3RVc2VQcm9wPWZpLFJ0LmNvbmZpZy5pc1Jlc2VydmVkVGFnPSRpLFJ0LmNvbmZpZy5pc1Jlc2VydmVkQXR0cj11aSxSdC5jb25maWcuZ2V0VGFnTmFtZXNwYWNlPUd0LFJ0LmNvbmZpZy5pc1Vua25vd25FbGVtZW50PWZ1bmN0aW9uKHQpe2lmKCFHbilyZXR1cm4hMDtpZigkaSh0KSlyZXR1cm4hMTtpZih0PXQudG9Mb3dlckNhc2UoKSxudWxsIT1DaVt0XSlyZXR1cm4gQ2lbdF07dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KTtyZXR1cm4gdC5pbmRleE9mKFwiLVwiKT4tMT9DaVt0XT1lLmNvbnN0cnVjdG9yPT09d2luZG93LkhUTUxVbmtub3duRWxlbWVudHx8ZS5jb25zdHJ1Y3Rvcj09PXdpbmRvdy5IVE1MRWxlbWVudDpDaVt0XT0vSFRNTFVua25vd25FbGVtZW50Ly50ZXN0KGUudG9TdHJpbmcoKSl9LGgoUnQub3B0aW9ucy5kaXJlY3RpdmVzLHJvKSxoKFJ0Lm9wdGlvbnMuY29tcG9uZW50cyxzbyksUnQucHJvdG90eXBlLl9fcGF0Y2hfXz1Hbj9lbzp5LFJ0LnByb3RvdHlwZS4kbW91bnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD10JiZHbj9adCh0KTp2b2lkIDAsZnVuY3Rpb24odCxlLG4pe3QuJGVsPWUsdC4kb3B0aW9ucy5yZW5kZXJ8fCh0LiRvcHRpb25zLnJlbmRlcj1nciksdnQodCxcImJlZm9yZU1vdW50XCIpO3ZhciByO3JldHVybiByPWZ1bmN0aW9uKCl7dC5fdXBkYXRlKHQuX3JlbmRlcigpLG4pfSxuZXcgS3IodCxyLHksbnVsbCwhMCksbj0hMSxudWxsPT10LiR2bm9kZSYmKHQuX2lzTW91bnRlZD0hMCx2dCh0LFwibW91bnRlZFwiKSksdH0odGhpcyx0LGUpfSxSdC5uZXh0VGljayhmdW5jdGlvbigpe0puLmRldnRvb2xzJiZsciYmbHIuZW1pdChcImluaXRcIixSdCl9LDApO3ZhciBjbyx1bz0vXFx7XFx7KCg/Oi58XFxuKSs/KVxcfVxcfS9nLGxvPS9bLS4qKz9eJHt9KCl8W1xcXVxcL1xcXFxdL2csZm89cChmdW5jdGlvbih0KXt2YXIgZT10WzBdLnJlcGxhY2UobG8sXCJcXFxcJCZcIiksbj10WzFdLnJlcGxhY2UobG8sXCJcXFxcJCZcIik7cmV0dXJuIG5ldyBSZWdFeHAoZStcIigoPzoufFxcXFxuKSs/KVwiK24sXCJnXCIpfSkscG89e3N0YXRpY0tleXM6W1wic3RhdGljQ2xhc3NcIl0sdHJhbnNmb3JtTm9kZTpmdW5jdGlvbih0LGUpe2Uud2Fybjt2YXIgbj1oZSh0LFwiY2xhc3NcIik7biYmKHQuc3RhdGljQ2xhc3M9SlNPTi5zdHJpbmdpZnkobikpO3ZhciByPXZlKHQsXCJjbGFzc1wiLCExKTtyJiYodC5jbGFzc0JpbmRpbmc9cil9LGdlbkRhdGE6ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtyZXR1cm4gdC5zdGF0aWNDbGFzcyYmKGUrPVwic3RhdGljQ2xhc3M6XCIrdC5zdGF0aWNDbGFzcytcIixcIiksdC5jbGFzc0JpbmRpbmcmJihlKz1cImNsYXNzOlwiK3QuY2xhc3NCaW5kaW5nK1wiLFwiKSxlfX0sdm89e3N0YXRpY0tleXM6W1wic3RhdGljU3R5bGVcIl0sdHJhbnNmb3JtTm9kZTpmdW5jdGlvbih0LGUpe2Uud2Fybjt2YXIgbj1oZSh0LFwic3R5bGVcIik7biYmKHQuc3RhdGljU3R5bGU9SlNPTi5zdHJpbmdpZnkoRmkobikpKTt2YXIgcj12ZSh0LFwic3R5bGVcIiwhMSk7ciYmKHQuc3R5bGVCaW5kaW5nPXIpfSxnZW5EYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPVwiXCI7cmV0dXJuIHQuc3RhdGljU3R5bGUmJihlKz1cInN0YXRpY1N0eWxlOlwiK3Quc3RhdGljU3R5bGUrXCIsXCIpLHQuc3R5bGVCaW5kaW5nJiYoZSs9XCJzdHlsZTooXCIrdC5zdHlsZUJpbmRpbmcrXCIpLFwiKSxlfX0saG89ZnVuY3Rpb24odCl7cmV0dXJuIGNvPWNvfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGNvLmlubmVySFRNTD10LGNvLnRleHRDb250ZW50fSxtbz11KFwiYXJlYSxiYXNlLGJyLGNvbCxlbWJlZCxmcmFtZSxocixpbWcsaW5wdXQsaXNpbmRleCxrZXlnZW4sbGluayxtZXRhLHBhcmFtLHNvdXJjZSx0cmFjayx3YnJcIikseW89dShcImNvbGdyb3VwLGRkLGR0LGxpLG9wdGlvbnMscCx0ZCx0Zm9vdCx0aCx0aGVhZCx0cixzb3VyY2VcIiksZ289dShcImFkZHJlc3MsYXJ0aWNsZSxhc2lkZSxiYXNlLGJsb2NrcXVvdGUsYm9keSxjYXB0aW9uLGNvbCxjb2xncm91cCxkZCxkZXRhaWxzLGRpYWxvZyxkaXYsZGwsZHQsZmllbGRzZXQsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGZvcm0saDEsaDIsaDMsaDQsaDUsaDYsaGVhZCxoZWFkZXIsaGdyb3VwLGhyLGh0bWwsbGVnZW5kLGxpLG1lbnVpdGVtLG1ldGEsb3B0Z3JvdXAsb3B0aW9uLHBhcmFtLHJwLHJ0LHNvdXJjZSxzdHlsZSxzdW1tYXJ5LHRib2R5LHRkLHRmb290LHRoLHRoZWFkLHRpdGxlLHRyLHRyYWNrXCIpLF9vPS9eXFxzKihbXlxcc1wiJzw+XFwvPV0rKSg/OlxccyooPSlcXHMqKD86XCIoW15cIl0qKVwiK3wnKFteJ10qKScrfChbXlxcc1wiJz08PmBdKykpKT8vLGJvPVwiW2EtekEtWl9dW1xcXFx3XFxcXC1cXFxcLl0qXCIsJG89XCIoKD86XCIrYm8rXCJcXFxcOik/XCIrYm8rXCIpXCIsQ289bmV3IFJlZ0V4cChcIl48XCIrJG8pLHdvPS9eXFxzKihcXC8/KT4vLHhvPW5ldyBSZWdFeHAoXCJePFxcXFwvXCIrJG8rXCJbXj5dKj5cIiksa289L148IURPQ1RZUEUgW14+XSs+L2ksQW89L148IS0tLyxPbz0vXjwhXFxbLyxTbz0hMTtcInhcIi5yZXBsYWNlKC94KC4pPy9nLGZ1bmN0aW9uKHQsZSl7U289XCJcIj09PWV9KTt2YXIgVG8sRW8sam8sTm8sSW8sTG8sTW8sRG8sUG8sRm8sUm8sSG89dShcInNjcmlwdCxzdHlsZSx0ZXh0YXJlYVwiLCEwKSxCbz17fSxVbz17XCImbHQ7XCI6XCI8XCIsXCImZ3Q7XCI6XCI+XCIsXCImcXVvdDtcIjonXCInLFwiJmFtcDtcIjpcIiZcIixcIiYjMTA7XCI6XCJcXG5cIixcIiYjOTtcIjpcIlxcdFwifSxWbz0vJig/Omx0fGd0fHF1b3R8YW1wKTsvZyx6bz0vJig/Omx0fGd0fHF1b3R8YW1wfCMxMHwjOSk7L2csS289dShcInByZSx0ZXh0YXJlYVwiLCEwKSxKbz1mdW5jdGlvbih0LGUpe3JldHVybiB0JiZLbyh0KSYmXCJcXG5cIj09PWVbMF19LHFvPS9eQHxedi1vbjovLFdvPS9edi18XkB8XjovLEdvPS8oLio/KVxccysoPzppbnxvZilcXHMrKC4qKS8sWm89LywoW14sXFx9XFxdXSopKD86LChbXixcXH1cXF1dKikpPyQvLFhvPS9eXFwofFxcKSQvZyxZbz0vOiguKikkLyxRbz0vXjp8XnYtYmluZDovLHRhPS9cXC5bXi5dKy9nLGVhPXAoaG8pLG5hPS9eeG1sbnM6TlNcXGQrLyxyYT0vXk5TXFxkKzovLGlhPVtwbyx2byx7cHJlVHJhbnNmb3JtTm9kZTpmdW5jdGlvbih0LGUpe2lmKFwiaW5wdXRcIj09PXQudGFnKXt2YXIgbj10LmF0dHJzTWFwO2lmKG5bXCJ2LW1vZGVsXCJdJiYobltcInYtYmluZDp0eXBlXCJdfHxuW1wiOnR5cGVcIl0pKXt2YXIgcj12ZSh0LFwidHlwZVwiKSxpPWhlKHQsXCJ2LWlmXCIsITApLG89aT9cIiYmKFwiK2krXCIpXCI6XCJcIixhPW51bGwhPWhlKHQsXCJ2LWVsc2VcIiwhMCkscz1oZSh0LFwidi1lbHNlLWlmXCIsITApLGM9Zm4odCk7dW4oYyksZmUoYyxcInR5cGVcIixcImNoZWNrYm94XCIpLGNuKGMsZSksYy5wcm9jZXNzZWQ9ITAsYy5pZj1cIihcIityK1wiKT09PSdjaGVja2JveCdcIitvLGxuKGMse2V4cDpjLmlmLGJsb2NrOmN9KTt2YXIgdT1mbih0KTtoZSh1LFwidi1mb3JcIiwhMCksZmUodSxcInR5cGVcIixcInJhZGlvXCIpLGNuKHUsZSksbG4oYyx7ZXhwOlwiKFwiK3IrXCIpPT09J3JhZGlvJ1wiK28sYmxvY2s6dX0pO3ZhciBsPWZuKHQpO3JldHVybiBoZShsLFwidi1mb3JcIiwhMCksZmUobCxcIjp0eXBlXCIsciksY24obCxlKSxsbihjLHtleHA6aSxibG9jazpsfSksYT9jLmVsc2U9ITA6cyYmKGMuZWxzZWlmPXMpLGN9fX19XSxvYT17ZXhwZWN0SFRNTDohMCxtb2R1bGVzOmlhLGRpcmVjdGl2ZXM6e21vZGVsOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLnZhbHVlLGk9ZS5tb2RpZmllcnMsbz10LnRhZyxhPXQuYXR0cnNNYXAudHlwZTtpZih0LmNvbXBvbmVudClyZXR1cm4gbWUodCxyLGkpLCExO2lmKFwic2VsZWN0XCI9PT1vKSFmdW5jdGlvbih0LGUsbil7dmFyIHI9J3ZhciAkJHNlbGVjdGVkVmFsID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucyxmdW5jdGlvbihvKXtyZXR1cm4gby5zZWxlY3RlZH0pLm1hcChmdW5jdGlvbihvKXt2YXIgdmFsID0gXCJfdmFsdWVcIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlO3JldHVybiAnKyhuJiZuLm51bWJlcj9cIl9uKHZhbClcIjpcInZhbFwiKStcIn0pO1wiO3I9citcIiBcIit5ZShlLFwiJGV2ZW50LnRhcmdldC5tdWx0aXBsZSA/ICQkc2VsZWN0ZWRWYWwgOiAkJHNlbGVjdGVkVmFsWzBdXCIpLGRlKHQsXCJjaGFuZ2VcIixyLG51bGwsITApfSh0LHIsaSk7ZWxzZSBpZihcImlucHV0XCI9PT1vJiZcImNoZWNrYm94XCI9PT1hKSFmdW5jdGlvbih0LGUsbil7dmFyIHI9biYmbi5udW1iZXIsaT12ZSh0LFwidmFsdWVcIil8fFwibnVsbFwiLG89dmUodCxcInRydWUtdmFsdWVcIil8fFwidHJ1ZVwiLGE9dmUodCxcImZhbHNlLXZhbHVlXCIpfHxcImZhbHNlXCI7dWUodCxcImNoZWNrZWRcIixcIkFycmF5LmlzQXJyYXkoXCIrZStcIik/X2koXCIrZStcIixcIitpK1wiKT4tMVwiKyhcInRydWVcIj09PW8/XCI6KFwiK2UrXCIpXCI6XCI6X3EoXCIrZStcIixcIitvK1wiKVwiKSksZGUodCxcImNoYW5nZVwiLFwidmFyICQkYT1cIitlK1wiLCQkZWw9JGV2ZW50LnRhcmdldCwkJGM9JCRlbC5jaGVja2VkPyhcIitvK1wiKTooXCIrYStcIik7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PVwiKyhyP1wiX24oXCIraStcIilcIjppKStcIiwkJGk9X2koJCRhLCQkdik7aWYoJCRlbC5jaGVja2VkKXskJGk8MCYmKFwiK2UrXCI9JCRhLmNvbmNhdChbJCR2XSkpfWVsc2V7JCRpPi0xJiYoXCIrZStcIj0kJGEuc2xpY2UoMCwkJGkpLmNvbmNhdCgkJGEuc2xpY2UoJCRpKzEpKSl9fWVsc2V7XCIreWUoZSxcIiQkY1wiKStcIn1cIixudWxsLCEwKX0odCxyLGkpO2Vsc2UgaWYoXCJpbnB1dFwiPT09byYmXCJyYWRpb1wiPT09YSkhZnVuY3Rpb24odCxlLG4pe3ZhciByPW4mJm4ubnVtYmVyLGk9dmUodCxcInZhbHVlXCIpfHxcIm51bGxcIjt1ZSh0LFwiY2hlY2tlZFwiLFwiX3EoXCIrZStcIixcIisoaT1yP1wiX24oXCIraStcIilcIjppKStcIilcIiksZGUodCxcImNoYW5nZVwiLHllKGUsaSksbnVsbCwhMCl9KHQscixpKTtlbHNlIGlmKFwiaW5wdXRcIj09PW98fFwidGV4dGFyZWFcIj09PW8pIWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10LmF0dHJzTWFwLnR5cGUsaT1ufHx7fSxvPWkubGF6eSxhPWkubnVtYmVyLHM9aS50cmltLGM9IW8mJlwicmFuZ2VcIiE9PXIsdT1vP1wiY2hhbmdlXCI6XCJyYW5nZVwiPT09cj9MaTpcImlucHV0XCIsbD1cIiRldmVudC50YXJnZXQudmFsdWVcIjtzJiYobD1cIiRldmVudC50YXJnZXQudmFsdWUudHJpbSgpXCIpLGEmJihsPVwiX24oXCIrbCtcIilcIik7dmFyIGY9eWUoZSxsKTtjJiYoZj1cImlmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXJldHVybjtcIitmKSx1ZSh0LFwidmFsdWVcIixcIihcIitlK1wiKVwiKSxkZSh0LHUsZixudWxsLCEwKSwoc3x8YSkmJmRlKHQsXCJibHVyXCIsXCIkZm9yY2VVcGRhdGUoKVwiKX0odCxyLGkpO2Vsc2UgaWYoIUpuLmlzUmVzZXJ2ZWRUYWcobykpcmV0dXJuIG1lKHQscixpKSwhMTtyZXR1cm4hMH0sdGV4dDpmdW5jdGlvbih0LGUpe2UudmFsdWUmJnVlKHQsXCJ0ZXh0Q29udGVudFwiLFwiX3MoXCIrZS52YWx1ZStcIilcIil9LGh0bWw6ZnVuY3Rpb24odCxlKXtlLnZhbHVlJiZ1ZSh0LFwiaW5uZXJIVE1MXCIsXCJfcyhcIitlLnZhbHVlK1wiKVwiKX19LGlzUHJlVGFnOmZ1bmN0aW9uKHQpe3JldHVyblwicHJlXCI9PT10fSxpc1VuYXJ5VGFnOm1vLG11c3RVc2VQcm9wOmZpLGNhbkJlTGVmdE9wZW5UYWc6eW8saXNSZXNlcnZlZFRhZzokaSxnZXRUYWdOYW1lc3BhY2U6R3Qsc3RhdGljS2V5czpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5jb25jYXQoZS5zdGF0aWNLZXlzfHxbXSl9LFtdKS5qb2luKFwiLFwiKX0oaWEpfSxhYT1wKGZ1bmN0aW9uKHQpe3JldHVybiB1KFwidHlwZSx0YWcsYXR0cnNMaXN0LGF0dHJzTWFwLHBsYWluLHBhcmVudCxjaGlsZHJlbixhdHRyc1wiKyh0P1wiLFwiK3Q6XCJcIikpfSksc2E9L15cXHMqKFtcXHckX10rfFxcKFteKV0qP1xcKSlcXHMqPT58XmZ1bmN0aW9uXFxzKlxcKC8sY2E9L15cXHMqW0EtWmEtel8kXVtcXHckXSooPzpcXC5bQS1aYS16XyRdW1xcdyRdKnxcXFsnLio/J118XFxbXCIuKj9cIl18XFxbXFxkK118XFxbW0EtWmEtel8kXVtcXHckXSpdKSpcXHMqJC8sdWE9e2VzYzoyNyx0YWI6OSxlbnRlcjoxMyxzcGFjZTozMix1cDozOCxsZWZ0OjM3LHJpZ2h0OjM5LGRvd246NDAsZGVsZXRlOls4LDQ2XX0sbGE9ZnVuY3Rpb24odCl7cmV0dXJuXCJpZihcIit0K1wiKXJldHVybiBudWxsO1wifSxmYT17c3RvcDpcIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcIixwcmV2ZW50OlwiJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XCIsc2VsZjpsYShcIiRldmVudC50YXJnZXQgIT09ICRldmVudC5jdXJyZW50VGFyZ2V0XCIpLGN0cmw6bGEoXCIhJGV2ZW50LmN0cmxLZXlcIiksc2hpZnQ6bGEoXCIhJGV2ZW50LnNoaWZ0S2V5XCIpLGFsdDpsYShcIiEkZXZlbnQuYWx0S2V5XCIpLG1ldGE6bGEoXCIhJGV2ZW50Lm1ldGFLZXlcIiksbGVmdDpsYShcIididXR0b24nIGluICRldmVudCAmJiAkZXZlbnQuYnV0dG9uICE9PSAwXCIpLG1pZGRsZTpsYShcIididXR0b24nIGluICRldmVudCAmJiAkZXZlbnQuYnV0dG9uICE9PSAxXCIpLHJpZ2h0OmxhKFwiJ2J1dHRvbicgaW4gJGV2ZW50ICYmICRldmVudC5idXR0b24gIT09IDJcIil9LHBhPXtvbjpmdW5jdGlvbih0LGUpe3Qud3JhcExpc3RlbmVycz1mdW5jdGlvbih0KXtyZXR1cm5cIl9nKFwiK3QrXCIsXCIrZS52YWx1ZStcIilcIn19LGJpbmQ6ZnVuY3Rpb24odCxlKXt0LndyYXBEYXRhPWZ1bmN0aW9uKG4pe3JldHVyblwiX2IoXCIrbitcIiwnXCIrdC50YWcrXCInLFwiK2UudmFsdWUrXCIsXCIrKGUubW9kaWZpZXJzJiZlLm1vZGlmaWVycy5wcm9wP1widHJ1ZVwiOlwiZmFsc2VcIikrKGUubW9kaWZpZXJzJiZlLm1vZGlmaWVycy5zeW5jP1wiLHRydWVcIjpcIlwiKStcIilcIn19LGNsb2FrOnl9LGRhPWZ1bmN0aW9uKHQpe3RoaXMub3B0aW9ucz10LHRoaXMud2Fybj10Lndhcm58fHNlLHRoaXMudHJhbnNmb3Jtcz1jZSh0Lm1vZHVsZXMsXCJ0cmFuc2Zvcm1Db2RlXCIpLHRoaXMuZGF0YUdlbkZucz1jZSh0Lm1vZHVsZXMsXCJnZW5EYXRhXCIpLHRoaXMuZGlyZWN0aXZlcz1oKGgoe30scGEpLHQuZGlyZWN0aXZlcyk7dmFyIGU9dC5pc1Jlc2VydmVkVGFnfHxCbjt0aGlzLm1heWJlQ29tcG9uZW50PWZ1bmN0aW9uKHQpe3JldHVybiFlKHQudGFnKX0sdGhpcy5vbmNlSWQ9MCx0aGlzLnN0YXRpY1JlbmRlckZucz1bXX0sdmE9KG5ldyBSZWdFeHAoXCJcXFxcYlwiK1wiZG8saWYsZm9yLGxldCxuZXcsdHJ5LHZhcixjYXNlLGVsc2Usd2l0aCxhd2FpdCxicmVhayxjYXRjaCxjbGFzcyxjb25zdCxzdXBlcix0aHJvdyx3aGlsZSx5aWVsZCxkZWxldGUsZXhwb3J0LGltcG9ydCxyZXR1cm4sc3dpdGNoLGRlZmF1bHQsZXh0ZW5kcyxmaW5hbGx5LGNvbnRpbnVlLGRlYnVnZ2VyLGZ1bmN0aW9uLGFyZ3VtZW50c1wiLnNwbGl0KFwiLFwiKS5qb2luKFwiXFxcXGJ8XFxcXGJcIikrXCJcXFxcYlwiKSxuZXcgUmVnRXhwKFwiXFxcXGJcIitcImRlbGV0ZSx0eXBlb2Ysdm9pZFwiLnNwbGl0KFwiLFwiKS5qb2luKFwiXFxcXHMqXFxcXChbXlxcXFwpXSpcXFxcKXxcXFxcYlwiKStcIlxcXFxzKlxcXFwoW15cXFxcKV0qXFxcXClcIiksZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4obixyKXt2YXIgaT1PYmplY3QuY3JlYXRlKGUpLG89W10sYT1bXTtpZihpLndhcm49ZnVuY3Rpb24odCxlKXsoZT9hOm8pLnB1c2godCl9LHIpe3IubW9kdWxlcyYmKGkubW9kdWxlcz0oZS5tb2R1bGVzfHxbXSkuY29uY2F0KHIubW9kdWxlcykpLHIuZGlyZWN0aXZlcyYmKGkuZGlyZWN0aXZlcz1oKE9iamVjdC5jcmVhdGUoZS5kaXJlY3RpdmVzfHxudWxsKSxyLmRpcmVjdGl2ZXMpKTtmb3IodmFyIHMgaW4gcilcIm1vZHVsZXNcIiE9PXMmJlwiZGlyZWN0aXZlc1wiIT09cyYmKGlbc109cltzXSl9dmFyIGM9dChuLGkpO3JldHVybiBjLmVycm9ycz1vLGMudGlwcz1hLGN9cmV0dXJue2NvbXBpbGU6bixjb21waWxlVG9GdW5jdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gZnVuY3Rpb24obixyLGkpeyhyPWgoe30scikpLndhcm4sZGVsZXRlIHIud2Fybjt2YXIgbz1yLmRlbGltaXRlcnM/U3RyaW5nKHIuZGVsaW1pdGVycykrbjpuO2lmKGVbb10pcmV0dXJuIGVbb107dmFyIGE9dChuLHIpLHM9e30sYz1bXTtyZXR1cm4gcy5yZW5kZXI9VG4oYS5yZW5kZXIsYykscy5zdGF0aWNSZW5kZXJGbnM9YS5zdGF0aWNSZW5kZXJGbnMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBUbih0LGMpfSksZVtvXT1zfX0obil9fX0oZnVuY3Rpb24odCxlKXt2YXIgbj1zbih0LnRyaW0oKSxlKTshMSE9PWUub3B0aW1pemUmJmZ1bmN0aW9uKHQsZSl7dCYmKFBvPWFhKGUuc3RhdGljS2V5c3x8XCJcIiksRm89ZS5pc1Jlc2VydmVkVGFnfHxCbixwbih0KSxkbih0LCExKSl9KG4sZSk7dmFyIHI9eW4obixlKTtyZXR1cm57YXN0Om4scmVuZGVyOnIucmVuZGVyLHN0YXRpY1JlbmRlckZuczpyLnN0YXRpY1JlbmRlckZuc319KShvYSkuY29tcGlsZVRvRnVuY3Rpb25zKSxoYT0hIUduJiZFbighMSksbWE9ISFHbiYmRW4oITApLHlhPXAoZnVuY3Rpb24odCl7dmFyIGU9WnQodCk7cmV0dXJuIGUmJmUuaW5uZXJIVE1MfSksZ2E9UnQucHJvdG90eXBlLiRtb3VudDtyZXR1cm4gUnQucHJvdG90eXBlLiRtb3VudD1mdW5jdGlvbih0LGUpe2lmKCh0PXQmJlp0KHQpKT09PWRvY3VtZW50LmJvZHl8fHQ9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpcmV0dXJuIHRoaXM7dmFyIG49dGhpcy4kb3B0aW9ucztpZighbi5yZW5kZXIpe3ZhciByPW4udGVtcGxhdGU7aWYocilpZihcInN0cmluZ1wiPT10eXBlb2YgcilcIiNcIj09PXIuY2hhckF0KDApJiYocj15YShyKSk7ZWxzZXtpZighci5ub2RlVHlwZSlyZXR1cm4gdGhpcztyPXIuaW5uZXJIVE1MfWVsc2UgdCYmKHI9ZnVuY3Rpb24odCl7aWYodC5vdXRlckhUTUwpcmV0dXJuIHQub3V0ZXJIVE1MO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJuIGUuYXBwZW5kQ2hpbGQodC5jbG9uZU5vZGUoITApKSxlLmlubmVySFRNTH0odCkpO2lmKHIpe3ZhciBpPXZhKHIse3Nob3VsZERlY29kZU5ld2xpbmVzOmhhLHNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZjptYSxkZWxpbWl0ZXJzOm4uZGVsaW1pdGVycyxjb21tZW50czpuLmNvbW1lbnRzfSx0aGlzKSxvPWkucmVuZGVyLGE9aS5zdGF0aWNSZW5kZXJGbnM7bi5yZW5kZXI9byxuLnN0YXRpY1JlbmRlckZucz1hfX1yZXR1cm4gZ2EuY2FsbCh0aGlzLHQsZSl9LFJ0LmNvbXBpbGU9dmEsUnR9KTtcbi8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqL30uY2FsbChleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpLnNldEltbWVkaWF0ZSkpXG5cbi8qKiovIH0pLFxuLyogNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi8oZnVuY3Rpb24oZ2xvYmFsKSB7dmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbCh3aW5kb3csIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5fX3dlYnBhY2tfcmVxdWlyZV9fKDYpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVpZGF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi99LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXygyKSkpXG5cbi8qKiovIH0pLFxuLyogNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi8oZnVuY3Rpb24oZ2xvYmFsLCBwcm9jZXNzKSB7KGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgcmVnaXN0ZXJJbW1lZGlhdGU7XG5cbiAgICBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbiAgICAgIC8vIENhbGxiYWNrIGNhbiBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhIHN0cmluZ1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbmV3IEZ1bmN0aW9uKFwiXCIgKyBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICAvLyBDb3B5IGZ1bmN0aW9uIGFyZ3VtZW50c1xuICAgICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMV07XG4gICAgICB9XG4gICAgICAvLyBTdG9yZSBhbmQgcmVnaXN0ZXIgdGhlIHRhc2tcbiAgICAgIHZhciB0YXNrID0geyBjYWxsYmFjazogY2FsbGJhY2ssIGFyZ3M6IGFyZ3MgfTtcbiAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSB0YXNrO1xuICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUobmV4dEhhbmRsZSk7XG4gICAgICByZXR1cm4gbmV4dEhhbmRsZSsrO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGhhbmRsZSkge1xuICAgICAgICBkZWxldGUgdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bih0YXNrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IHRhc2suY2FsbGJhY2s7XG4gICAgICAgIHZhciBhcmdzID0gdGFzay5hcmdzO1xuICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bklmUHJlc2VudChoYW5kbGUpIHtcbiAgICAgICAgLy8gRnJvbSB0aGUgc3BlYzogXCJXYWl0IHVudGlsIGFueSBpbnZvY2F0aW9ucyBvZiB0aGlzIGFsZ29yaXRobSBzdGFydGVkIGJlZm9yZSB0aGlzIG9uZSBoYXZlIGNvbXBsZXRlZC5cIlxuICAgICAgICAvLyBTbyBpZiB3ZSdyZSBjdXJyZW50bHkgcnVubmluZyBhIHRhc2ssIHdlJ2xsIG5lZWQgdG8gZGVsYXkgdGhpcyBpbnZvY2F0aW9uLlxuICAgICAgICBpZiAoY3VycmVudGx5UnVubmluZ0FUYXNrKSB7XG4gICAgICAgICAgICAvLyBEZWxheSBieSBkb2luZyBhIHNldFRpbWVvdXQuIHNldEltbWVkaWF0ZSB3YXMgdHJpZWQgaW5zdGVhZCwgYnV0IGluIEZpcmVmb3ggNyBpdCBnZW5lcmF0ZWQgYVxuICAgICAgICAgICAgLy8gXCJ0b28gbXVjaCByZWN1cnNpb25cIiBlcnJvci5cbiAgICAgICAgICAgIHNldFRpbWVvdXQocnVuSWZQcmVzZW50LCAwLCBoYW5kbGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB0YXNrc0J5SGFuZGxlW2hhbmRsZV07XG4gICAgICAgICAgICBpZiAodGFzaykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IHRydWU7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcnVuKHRhc2spO1xuICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW1tZWRpYXRlKGhhbmRsZSk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7IHJ1bklmUHJlc2VudChoYW5kbGUpOyB9KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYW5Vc2VQb3N0TWVzc2FnZSgpIHtcbiAgICAgICAgLy8gVGhlIHRlc3QgYWdhaW5zdCBgaW1wb3J0U2NyaXB0c2AgcHJldmVudHMgdGhpcyBpbXBsZW1lbnRhdGlvbiBmcm9tIGJlaW5nIGluc3RhbGxlZCBpbnNpZGUgYSB3ZWIgd29ya2VyLFxuICAgICAgICAvLyB3aGVyZSBgZ2xvYmFsLnBvc3RNZXNzYWdlYCBtZWFucyBzb21ldGhpbmcgY29tcGxldGVseSBkaWZmZXJlbnQgYW5kIGNhbid0IGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZS5cbiAgICAgICAgaWYgKGdsb2JhbC5wb3N0TWVzc2FnZSAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICAgICAgICAgIHZhciBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBvbGRPbk1lc3NhZ2UgPSBnbG9iYWwub25tZXNzYWdlO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoXCJcIiwgXCIqXCIpO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IG9sZE9uTWVzc2FnZTtcbiAgICAgICAgICAgIHJldHVybiBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIC8vIEluc3RhbGxzIGFuIGV2ZW50IGhhbmRsZXIgb24gYGdsb2JhbGAgZm9yIHRoZSBgbWVzc2FnZWAgZXZlbnQ6IHNlZVxuICAgICAgICAvLyAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS93aW5kb3cucG9zdE1lc3NhZ2VcbiAgICAgICAgLy8gKiBodHRwOi8vd3d3LndoYXR3Zy5vcmcvc3BlY3Mvd2ViLWFwcHMvY3VycmVudC13b3JrL211bHRpcGFnZS9jb21tcy5odG1sI2Nyb3NzRG9jdW1lbnRNZXNzYWdlc1xuXG4gICAgICAgIHZhciBtZXNzYWdlUHJlZml4ID0gXCJzZXRJbW1lZGlhdGUkXCIgKyBNYXRoLnJhbmRvbSgpICsgXCIkXCI7XG4gICAgICAgIHZhciBvbkdsb2JhbE1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnNvdXJjZSA9PT0gZ2xvYmFsICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIGV2ZW50LmRhdGEgPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgICAgICAgICBldmVudC5kYXRhLmluZGV4T2YobWVzc2FnZVByZWZpeCkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoK2V2ZW50LmRhdGEuc2xpY2UobWVzc2FnZVByZWZpeC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdsb2JhbC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShtZXNzYWdlUHJlZml4ICsgaGFuZGxlLCBcIipcIik7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBldmVudC5kYXRhO1xuICAgICAgICAgICAgcnVuSWZQcmVzZW50KGhhbmRsZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoaGFuZGxlKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgYSA8c2NyaXB0PiBlbGVtZW50OyBpdHMgcmVhZHlzdGF0ZWNoYW5nZSBldmVudCB3aWxsIGJlIGZpcmVkIGFzeW5jaHJvbm91c2x5IG9uY2UgaXQgaXMgaW5zZXJ0ZWRcbiAgICAgICAgICAgIC8vIGludG8gdGhlIGRvY3VtZW50LiBEbyBzbywgdGh1cyBxdWV1aW5nIHVwIHRoZSB0YXNrLiBSZW1lbWJlciB0byBjbGVhbiB1cCBvbmNlIGl0J3MgYmVlbiBjYWxsZWQuXG4gICAgICAgICAgICB2YXIgc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudChoYW5kbGUpO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgICAgICAgICBzY3JpcHQgPSBudWxsO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChydW5JZlByZXNlbnQsIDAsIGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSWYgc3VwcG9ydGVkLCB3ZSBzaG91bGQgYXR0YWNoIHRvIHRoZSBwcm90b3R5cGUgb2YgZ2xvYmFsLCBzaW5jZSB0aGF0IGlzIHdoZXJlIHNldFRpbWVvdXQgZXQgYWwuIGxpdmUuXG4gICAgdmFyIGF0dGFjaFRvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihnbG9iYWwpO1xuICAgIGF0dGFjaFRvID0gYXR0YWNoVG8gJiYgYXR0YWNoVG8uc2V0VGltZW91dCA/IGF0dGFjaFRvIDogZ2xvYmFsO1xuXG4gICAgLy8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBlLmcuIGJyb3dzZXJpZnkgZW52aXJvbm1lbnRzLlxuICAgIGlmICh7fS50b1N0cmluZy5jYWxsKGdsb2JhbC5wcm9jZXNzKSA9PT0gXCJbb2JqZWN0IHByb2Nlc3NdXCIpIHtcbiAgICAgICAgLy8gRm9yIE5vZGUuanMgYmVmb3JlIDAuOVxuICAgICAgICBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChjYW5Vc2VQb3N0TWVzc2FnZSgpKSB7XG4gICAgICAgIC8vIEZvciBub24tSUUxMCBtb2Rlcm4gYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLk1lc3NhZ2VDaGFubmVsKSB7XG4gICAgICAgIC8vIEZvciB3ZWIgd29ya2Vycywgd2hlcmUgc3VwcG9ydGVkXG4gICAgICAgIGluc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGRvYyAmJiBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiIGluIGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpKSB7XG4gICAgICAgIC8vIEZvciBJRSA24oCTOFxuICAgICAgICBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGb3Igb2xkZXIgYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpO1xuICAgIH1cblxuICAgIGF0dGFjaFRvLnNldEltbWVkaWF0ZSA9IHNldEltbWVkaWF0ZTtcbiAgICBhdHRhY2hUby5jbGVhckltbWVkaWF0ZSA9IGNsZWFySW1tZWRpYXRlO1xufSh0eXBlb2Ygc2VsZiA9PT0gXCJ1bmRlZmluZWRcIiA/IHR5cGVvZiBnbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgPyB0aGlzIDogZ2xvYmFsIDogc2VsZikpO1xuXG4vKiBXRUJQQUNLIFZBUiBJTkpFQ1RJT04gKi99LmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXygyKSwgX193ZWJwYWNrX3JlcXVpcmVfXyg3KSkpXG5cbi8qKiovIH0pLFxuLyogNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4vLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuXG5cbi8qKiovIH0pLFxuLyogOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxMik7XG5cbnZhciB0ZW1wbGF0ZSA9IF9fd2VicGFja19yZXF1aXJlX18oMTQpO1xudmFyIGxvZ2luID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZSxcbiAgICBlbDogJyNhcHAnLFxuICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgJ2xvZ2luLSc6IGxvZ2luXG4gICAgfVxufTtcblxuLyoqKi8gfSksXG4vKiA5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmksIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihmYWxzZSkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9hcHAubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9hcHAubGVzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cbi8qKiovIH0pLFxuLyogMTAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmksIFwiYm9keXtmb250LWZhbWlseTpBcmlhbDtiYWNrZ3JvdW5kOiNmMWYxZjE7cGFkZGluZzowO21hcmdpbjowO2hlaWdodDoxMDAlO3dpZHRoOjEwMCV9XCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkQ6L0dJVC9wcm9qZWN0L3NyYy9EOi9HSVQvcHJvamVjdC9zcmMvYXBwLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsS0FDSSxrQkFDQSxtQkFDQSxVQUNBLFNBQ0EsWUFDQSxVQUFBLENBQUFcIixcImZpbGVcIjpcImFwcC5sZXNzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgICBmb250LWZhbWlseTogQXJpYWw7XFxuICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7XFxuICAgIHBhZGRpbmc6IDBweDtcXG4gICAgbWFyZ2luOiAwcHg7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuLyoqKi8gfSksXG4vKiAxMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcLykvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcblxuXG4vKioqLyB9KSxcbi8qIDEyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmksIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihmYWxzZSkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9tYXRlcmlhbC1pY29ucy5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL21hdGVyaWFsLWljb25zLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG4vKioqLyB9KSxcbi8qIDEzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMCkodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pLCBcIkBmb250LWZhY2V7Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6NDAwO3NyYzpsb2NhbChcXFwiTWF0ZXJpYWwgSWNvbnNcXFwiKSxsb2NhbChcXFwiTWF0ZXJpYWxJY29ucy1SZWd1bGFyXFxcIiksdXJsKGh0dHBzOi8vcmF3Z2l0LmNvbS9nb29nbGUvbWF0ZXJpYWwtZGVzaWduLWljb25zL21hc3Rlci9pY29uZm9udC9NYXRlcmlhbEljb25zLVJlZ3VsYXIud29mZjIpIGZvcm1hdChcXFwid29mZjJcXFwiKSx1cmwoaHR0cHM6Ly9yYXdnaXQuY29tL2dvb2dsZS9tYXRlcmlhbC1kZXNpZ24taWNvbnMvbWFzdGVyL2ljb25mb250L01hdGVyaWFsSWNvbnMtUmVndWxhci53b2ZmKSBmb3JtYXQoXFxcIndvZmZcXFwiKSx1cmwoaHR0cHM6Ly9yYXdnaXQuY29tL2dvb2dsZS9tYXRlcmlhbC1kZXNpZ24taWNvbnMvbWFzdGVyL2ljb25mb250L01hdGVyaWFsSWNvbnMtUmVndWxhci50dGYpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKX0ubWF0ZXJpYWwtaWNvbnN7Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC13ZWlnaHQ6NDAwO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtc2l6ZToyNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO2xpbmUtaGVpZ2h0OjE7dGV4dC10cmFuc2Zvcm06bm9uZTtsZXR0ZXItc3BhY2luZzpub3JtYWw7d29yZC13cmFwOm5vcm1hbDt3aGl0ZS1zcGFjZTpub3dyYXA7ZGlyZWN0aW9uOmx0cjstd2Via2l0LWZvbnQtc21vb3RoaW5nOmFudGlhbGlhc2VkO3RleHQtcmVuZGVyaW5nOm9wdGltaXplTGVnaWJpbGl0eTstbW96LW9zeC1mb250LXNtb290aGluZzpncmF5c2NhbGU7Zm9udC1mZWF0dXJlLXNldHRpbmdzOlxcXCJsaWdhXFxcIn1cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiRDovR0lUL3Byb2plY3Qvc3JjL0Q6L0dJVC9wcm9qZWN0L3NyYy9tYXRlcmlhbC1pY29ucy5sZXNzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQU1BLFdBQ0UsMkJBQ0Esa0JBQ0EsZ0JBQ0EsNFlBSXNHLENBR3hHLGdCQUNFLDJCQUNBLGdCQUNBLGtCQUNBLGVBQ0EscUJBQ0EsY0FDQSxvQkFDQSxzQkFDQSxpQkFDQSxtQkFDQSxjQUdBLG1DQUVBLGtDQUdBLGtDQUdBLDRCQUF1QixDQUFBXCIsXCJmaWxlXCI6XCJtYXRlcmlhbC1pY29ucy5sZXNzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8vIE1hdGVyaWFsIEljb25zIEJ5IEdvb2dsZVxcbi8vID09PT09PT09PT09PT09PT09PT09PT09PVxcbi8vIENvcGllZCBhdCAyLzcvMjAxN1xcbi8vIFBsZWFzZSB1cGRhdGUgZnJvbSB0aW1lIHRvIHRpbWVcXG5cXG4vKiBmYWxsYmFjayAqL1xcbkBmb250LWZhY2Uge1xcbiAgZm9udC1mYW1pbHk6ICdNYXRlcmlhbCBJY29ucyc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgc3JjOiBsb2NhbCgnTWF0ZXJpYWwgSWNvbnMnKSxcXG4gIGxvY2FsKCdNYXRlcmlhbEljb25zLVJlZ3VsYXInKSxcXG4gIHVybChodHRwczovL3Jhd2dpdC5jb20vZ29vZ2xlL21hdGVyaWFsLWRlc2lnbi1pY29ucy9tYXN0ZXIvaWNvbmZvbnQvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyksXFxuICB1cmwoaHR0cHM6Ly9yYXdnaXQuY29tL2dvb2dsZS9tYXRlcmlhbC1kZXNpZ24taWNvbnMvbWFzdGVyL2ljb25mb250L01hdGVyaWFsSWNvbnMtUmVndWxhci53b2ZmKSBmb3JtYXQoJ3dvZmYnKSxcXG4gIHVybChodHRwczovL3Jhd2dpdC5jb20vZ29vZ2xlL21hdGVyaWFsLWRlc2lnbi1pY29ucy9tYXN0ZXIvaWNvbmZvbnQvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLnR0ZikgZm9ybWF0KCd0cnVldHlwZScpO1xcbn1cXG5cXG4ubWF0ZXJpYWwtaWNvbnMge1xcbiAgZm9udC1mYW1pbHk6ICdNYXRlcmlhbCBJY29ucyc7XFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC1zaXplOiAyNHB4OyAgLyogUHJlZmVycmVkIGljb24gc2l6ZSAqL1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbGluZS1oZWlnaHQ6IDE7XFxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcXG4gIGxldHRlci1zcGFjaW5nOiBub3JtYWw7XFxuICB3b3JkLXdyYXA6IG5vcm1hbDtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICBkaXJlY3Rpb246IGx0cjtcXG5cXG4gIC8qIFN1cHBvcnQgZm9yIGFsbCBXZWJLaXQgYnJvd3NlcnMuICovXFxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcXG4gIC8qIFN1cHBvcnQgZm9yIFNhZmFyaSBhbmQgQ2hyb21lLiAqL1xcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcXG5cXG4gIC8qIFN1cHBvcnQgZm9yIEZpcmVmb3guICovXFxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xcblxcbiAgLyogU3VwcG9ydCBmb3IgSUUuICovXFxuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6ICdsaWdhJztcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG4vKioqLyB9KSxcbi8qIDE0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8ZGl2PiA8bG9naW4tPjwvbG9naW4tPiA8L2Rpdj5cIjtcblxuLyoqKi8gfSksXG4vKiAxNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5fX3dlYnBhY2tfcmVxdWlyZV9fKDE2KTtcblxudmFyIHRlbXBsYXRlID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOCk7XG52YXIgaW5wdXQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIzKTtcbnZhciBidXR0b24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI3KTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxuICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpbnB1dDoge1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBudWxsLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBudWxsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW52YWxpZF9pbnB1dHNfbGlzdDogW10sXG4gICAgICAgICAgICBzdWJtaXRfYnV0dG9uX2lzX2NsaWNrZWQ6IGZhbHNlXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljaygpIHtcbiAgICAgICAgICAgIHRoaXMuc3VibWl0X2J1dHRvbl9pc19jbGlja2VkID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKCF0aGlzLmludmFsaWRfaW5wdXRzX2xpc3QubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkb25lIGNsaWNrZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlSW5wdXREYXRhOiBmdW5jdGlvbiB1cGRhdGVJbnB1dERhdGEodHlwZSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuaW5wdXRbdHlwZV0gPSB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlSW52YWxpZElucHV0c0xpc3Q6IGZ1bmN0aW9uIHVwZGF0ZUludmFsaWRJbnB1dHNMaXN0KGlucHV0X2RhdGFfbmFtZSwgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pbnZhbGlkX2lucHV0c19saXN0LmluY2x1ZGVzKGlucHV0X2RhdGFfbmFtZSkgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmludmFsaWRfaW5wdXRzX2xpc3QucHVzaChpbnB1dF9kYXRhX25hbWUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmludmFsaWRfaW5wdXRzX2xpc3QuaW5jbHVkZXMoaW5wdXRfZGF0YV9uYW1lKSAmJiAhdmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmludmFsaWRfaW5wdXRzX2xpc3Quc3BsaWNlKHRoaXMuaW52YWxpZF9pbnB1dHNfbGlzdC5pbmRleE9mKGlucHV0X2RhdGFfbmFtZSksIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICBjb21wb25lbnRzOiB7XG4gICAgICAgICdpbnB1dC0nOiBpbnB1dCxcbiAgICAgICAgJ2J1dHRvbi0nOiBidXR0b25cbiAgICB9XG59O1xuXG4vKioqLyB9KSxcbi8qIDE2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE3KTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmksIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihmYWxzZSkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9sb2dpbi5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL2xvZ2luLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG4vKioqLyB9KSxcbi8qIDE3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMCkodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pLCBcIi5sb2dpbntiYWNrZ3JvdW5kOiNmZmY7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDAwcHg7bWFyZ2luOjUwcHggYXV0byAwO3BhZGRpbmc6MzBweH1cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiRDovR0lUL3Byb2plY3Qvc3JjL2NvbnRpbmVycy9sb2dpbi9EOi9HSVQvcHJvamVjdC9zcmMvY29udGluZXJzL2xvZ2luL2xvZ2luLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsT0FDSSxnQkFDQSxXQUNBLGdCQUNBLG1CQUNBLFlBQUEsQ0FBQVwiLFwiZmlsZVwiOlwibG9naW4ubGVzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubG9naW4ge1xcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1heC13aWR0aDogNDAwcHg7XFxuICAgIG1hcmdpbjogNTBweCBhdXRvIDAgYXV0bztcXG4gICAgcGFkZGluZzogMzBweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG4vKioqLyB9KSxcbi8qIDE4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8ZGl2IGNsYXNzPWxvZ2luPiA8aW5wdXQtIEB1cGRhdGUtaW5wdXQtZGF0YT11cGRhdGVJbnB1dERhdGEgQHVwZGF0ZS1pbnZhbGlkLWlucHV0cy1saXN0PXVwZGF0ZUludmFsaWRJbnB1dHNMaXN0IDpzdWJtaXQtYnV0dG9uLWlzLWNsaWNrZWQ9c3VibWl0X2J1dHRvbl9pc19jbGlja2VkIDpyZWdleD0vXlxcXFxzKlxcXFxTXFxcXFMvIHJlZ2V4LWVycm9yPVxcXCJUaGlzIGlzIG5vdCBuYW1lIVxcXCIgcGxhY2Vob2xkZXI9VXNlcm5hbWUgaW5wdXQtZGF0YS1uYW1lPXVzZXJuYW1lIGljb249YWNjb3VudF9ib3g+IDwvaW5wdXQtPiA8aW5wdXQtIEB1cGRhdGUtaW5wdXQtZGF0YT11cGRhdGVJbnB1dERhdGEgQHVwZGF0ZS1pbnZhbGlkLWlucHV0cy1saXN0PXVwZGF0ZUludmFsaWRJbnB1dHNMaXN0IDpzdWJtaXQtYnV0dG9uLWlzLWNsaWNrZWQ9c3VibWl0X2J1dHRvbl9pc19jbGlja2VkIDpyZWdleD0vXlxcXFxzKlxcXFxTXFxcXFMvIHJlZ2V4LWVycm9yPVxcXCJUaGlzIGlzIG5vdCBuYW1lIVxcXCIgcGxhY2Vob2xkZXI9UGFzc3dvcmQgaW5wdXQtZGF0YS1uYW1lPXBhc3N3b3JkIGljb249a2V5Ym9hcmRfdm9pY2U+IDwvaW5wdXQtPiA8YnV0dG9uLSBAY2xpY2s9Y2xpY2sgdGV4dD1ET05FIGljb249a2V5Ym9hcmRfdm9pY2Ugc3R5bGU9bWFyZ2luLXRvcDoyMHB4PiA8L2J1dHRvbi0+IDwvZGl2PlwiO1xuXG4vKioqLyB9KSxcbi8qIDE5ICovLFxuLyogMjAgKi8sXG4vKiAyMSAqLyxcbi8qIDIyICovLFxuLyogMjMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuX193ZWJwYWNrX3JlcXVpcmVfXygyNCk7XG5cbnZhciB0ZW1wbGF0ZSA9IF9fd2VicGFja19yZXF1aXJlX18oMjYpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB0ZW1wbGF0ZTogdGVtcGxhdGUsXG4gICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiAnJyxcbiAgICAgICAgICAgIGlucHV0X21zZzogbnVsbCxcbiAgICAgICAgICAgIGRpcnR5OiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2ZvY3VzZWQ6IGZhbHNlXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBwcm9wczogWydzdWJtaXRCdXR0b25Jc0NsaWNrZWQnLCAnaW5wdXREYXRhTmFtZScsICdyZWdleCcsICdyZWdleEVycm9yJywgJ3BsYWNlaG9sZGVyJywgJ2ljb24nXSxcbiAgICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge1xuICAgICAgICB0aGlzLmNoZWNrSW5wdXQodHJ1ZSk7XG4gICAgfSxcbiAgICB3YXRjaDoge1xuICAgICAgICBzdWJtaXRCdXR0b25Jc0NsaWNrZWQ6IGZ1bmN0aW9uIHN1Ym1pdEJ1dHRvbklzQ2xpY2tlZCh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXJ0eSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGVja0lucHV0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIGxhYmVsTG9jYXRpb25VcDogZnVuY3Rpb24gbGFiZWxMb2NhdGlvblVwKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNfZm9jdXNlZCB8fCB0aGlzLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgb25Gb2N1czogZnVuY3Rpb24gb25Gb2N1cygpIHtcbiAgICAgICAgICAgIHRoaXMuaXNfZm9jdXNlZCA9IHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIG9uSW5wdXQ6IGZ1bmN0aW9uIG9uSW5wdXQoKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUlucHV0RGF0YSgpO1xuICAgICAgICAgICAgaWYgKHRoaXMuZGlydHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrSW5wdXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25CbHVyOiBmdW5jdGlvbiBvbkJsdXIoKSB7XG4gICAgICAgICAgICB0aGlzLmlzX2ZvY3VzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuZGlydHkgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5jaGVja0lucHV0KCk7XG4gICAgICAgIH0sXG4gICAgICAgIGNoZWNrSW5wdXQ6IGZ1bmN0aW9uIGNoZWNrSW5wdXQoc2lsZW50X2Vycm9yKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5yZWdleCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy52YWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghc2lsZW50X2Vycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlucHV0X21zZyA9ICdSZXF1aXJlZCBmaWVsZCEnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlSW52YWxpZElucHV0c0xpc3QodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCh0aGlzLnJlZ2V4KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZWdleC50ZXN0KHRoaXMudmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNpbGVudF9lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRfbXNnID0gdGhpcy5yZWdleEVycm9yO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVJbnZhbGlkSW5wdXRzTGlzdCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRfbXNnID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlSW52YWxpZElucHV0c0xpc3QoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB1cGRhdGVJbnB1dERhdGE6IGZ1bmN0aW9uIHVwZGF0ZUlucHV0RGF0YSgpIHtcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZS1pbnB1dC1kYXRhJywgdGhpcy5pbnB1dERhdGFOYW1lLCB0aGlzLnZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlSW52YWxpZElucHV0c0xpc3Q6IGZ1bmN0aW9uIHVwZGF0ZUludmFsaWRJbnB1dHNMaXN0KHZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGUtaW52YWxpZC1pbnB1dHMtbGlzdCcsIHRoaXMuaW5wdXREYXRhTmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxufTtcblxuLyoqKi8gfSksXG4vKiAyNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG4vLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNSk7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7XCJzaW5nbGV0b25cIjp0cnVlLFwiaG1yXCI6dHJ1ZX1cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYoZmFsc2UpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMi0yIS4vaW5wdXQubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9pbnB1dC5sZXNzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuLyoqKi8gfSksXG4vKiAyNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaSwgXCIubWQtaW5wdXR7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzoyM3B4IDAgMTZweH0ubWQtaW5wdXQtd2l0aC1pY29ue3BhZGRpbmctbGVmdDozNXB4fS5tZC1pbnB1dCBpbnB1dHt3aWR0aDoxMDAlO2Rpc3BsYXk6YmxvY2s7Ym9yZGVyOjA7b3V0bGluZTowO2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMwMDA7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjJ9Lm1kLWlucHV0IGxhYmVse2ZvbnQtc2l6ZToxNHB4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MjRweDt6LWluZGV4OjE7Zm9udC13ZWlnaHQ6NDAwO2N1cnNvcjp0ZXh0O3RyYW5zaXRpb246YWxsIC41c30ubWQtaW5wdXQgbGFiZWwud2l0aC1pY29ue3BhZGRpbmctbGVmdDozNXB4fS5tZC1pbnB1dCBsYWJlbC5mb2N1c3tmb250LXNpemU6MTJweDt0b3A6OXB4O2NvbG9yOmJsdWV9Lm1kLWlucHV0IHNwYW57Zm9udC1zaXplOjA7cG9zaXRpb246YWJzb2x1dGU7dGV4dC1hbGlnbjpyaWdodDtsZWZ0OjA7dG9wOjQ2cHg7Zm9udC13ZWlnaHQ6NDAwO3dpZHRoOjEwMCU7Y29sb3I6cmVkO3RyYW5zaXRpb246YWxsIC41c30ubWQtaW5wdXQgc3BhbjphZnRlcntjb250ZW50OlxcXCJcXFwiO3dpZHRoOjEwMCU7ZGlzcGxheTpibG9jaztoZWlnaHQ6MXB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDotM3B4O3JpZ2h0OjA7YmFja2dyb3VuZC1jb2xvcjojODg4O3RyYW5zaXRpb246YWxsIC4yc30ubWQtaW5wdXQgc3Bhbi53aXRoLWljb246YWZ0ZXJ7d2lkdGg6Y2FsYygxMDAlIC0gMzVweCl9Lm1kLWlucHV0IHNwYW4uZXJyb3J7Zm9udC1zaXplOjEycHh9Lm1kLWlucHV0IHNwYW4uZXJyb3I6YWZ0ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZWR9Lm1kLWlucHV0IHNwYW4uZm9jdXNlZDphZnRlcntoZWlnaHQ6M3B4fS5tZC1pbnB1dCBpe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxOHB4O2xlZnQ6MDtmb250LXNpemU6MjdweDt6LWluZGV4OjN9XCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkQ6L0dJVC9wcm9qZWN0L3NyYy9jb250aW5lcnMvY29tcG9uZW50cy9pbnB1dC9EOi9HSVQvcHJvamVjdC9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQubGVzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxVQUNJLGtCQUNBLG1CQUFBLENBR0osb0JBQ0ksaUJBQUEsQ0FHSixnQkFDSSxXQUNBLGNBQ0EsU0FDQSxVQUNBLGVBQ0EsV0FDQSx1QkFDQSxrQkFDQSxTQUFBLENBR0osZ0JBQ0ksZUFDQSxrQkFDQSxPQUNBLFNBQ0EsVUFDQSxnQkFDQSxZQUNBLGtCQUFBLENBR0osMEJBQ0ksaUJBQUEsQ0FHSixzQkFDSSxlQUNBLFFBQ0EsVUFBQSxDQUdKLGVBQ0ksWUFDQSxrQkFDQSxpQkFDQSxPQUNBLFNBQ0EsZ0JBQ0EsV0FDQSxVQUNBLGtCQUFBLENBR0oscUJBQ0ksV0FDQSxXQUNBLGNBQ0EsV0FDQSxrQkFDQSxTQUNBLFFBQ0Esc0JBQ0Esa0JBQUEsQ0FHSiwrQkFDSSx1QkFBTyxDQUdYLHFCQUNJLGNBQUEsQ0FHSiwyQkFDSSxvQkFBQSxDQUdKLDZCQUNJLFVBQUEsQ0FHSixZQUNJLGtCQUNBLFNBQ0EsT0FDQSxlQUNBLFNBQUEsQ0FBQVwiLFwiZmlsZVwiOlwiaW5wdXQubGVzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubWQtaW5wdXQge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHBhZGRpbmc6IDIzcHggMCAxNnB4IDA7XFxufVxcblxcbi5tZC1pbnB1dC13aXRoLWljb24ge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7XFxufVxcblxcbi5tZC1pbnB1dCBpbnB1dCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgYm9yZGVyOiAwO1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIGNvbG9yOiAjMDAwO1xcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB6LWluZGV4OiAyO1xcbn1cXG5cXG4ubWQtaW5wdXQgbGFiZWwge1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAyNHB4O1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBjdXJzb3I6IHRleHQ7XFxuICAgIHRyYW5zaXRpb246IGFsbCAuNXM7XFxufVxcblxcbi5tZC1pbnB1dCBsYWJlbC53aXRoLWljb24ge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7XFxufVxcblxcbi5tZC1pbnB1dCBsYWJlbC5mb2N1cyB7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgdG9wOiA5cHg7XFxuICAgIGNvbG9yOmJsdWU7XFxufVxcblxcbi5tZC1pbnB1dCBzcGFuIHtcXG4gICAgZm9udC1zaXplOiAwO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDQ2cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzO1xcbn1cXG5cXG4ubWQtaW5wdXQgc3Bhbjo6YWZ0ZXIgeyBcXG4gICAgY29udGVudDogXFxcIlxcXCI7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgaGVpZ2h0OiAxcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAtM3B4O1xcbiAgICByaWdodDogMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODg4O1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzO1xcbn1cXG5cXG4ubWQtaW5wdXQgc3Bhbi53aXRoLWljb246OmFmdGVyIHtcXG4gICAgd2lkdGg6IGNhbGMoficxMDAlIC0gMzVweCcpO1xcbn1cXG5cXG4ubWQtaW5wdXQgc3Bhbi5lcnJvciB7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG59XFxuXFxuLm1kLWlucHV0IHNwYW4uZXJyb3I6OmFmdGVyIHsgXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjAwMDA7XFxufVxcblxcbi5tZC1pbnB1dCBzcGFuLmZvY3VzZWQ6OmFmdGVyIHsgXFxuICAgIGhlaWdodDogM3B4O1xcbn1cXG5cXG4ubWQtaW5wdXQgaSB7IFxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMThweDtcXG4gICAgbGVmdDogMHB4O1xcbiAgICBmb250LXNpemU6IDI3cHg7XFxuICAgIHotaW5kZXg6IDM7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuLyoqKi8gfSksXG4vKiAyNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPGRpdiA6Y2xhc3M9XFxcIlsnbWQtaW5wdXQnLCB7ICdtZC1pbnB1dC13aXRoLWljb24nOiBpY29uIH1dXFxcIj4gPGlucHV0IEBmb2N1cz1vbkZvY3VzIEBpbnB1dD1vbklucHV0IEBibHVyPW9uQmx1ciB2LW1vZGVsPXZhbHVlIHR5cGU9dGV4dCAvPiA8bGFiZWwgOmNsYXNzPVxcXCJbeyBmb2N1czogbGFiZWxMb2NhdGlvblVwIH0sIHsgJ3dpdGgtaWNvbic6IGljb24gfV1cXFwiPnt7IHBsYWNlaG9sZGVyIH19PC9sYWJlbD4gPHNwYW4gOmNsYXNzPVxcXCJbeyBlcnJvcjogaW5wdXRfbXNnIH0sIHsgZm9jdXNlZDogaXNfZm9jdXNlZCB9LCB7ICd3aXRoLWljb24nOiBpY29uIH1dXFxcIj57eyBpbnB1dF9tc2cgfX08L3NwYW4+IDxpIGNsYXNzPW1hdGVyaWFsLWljb25zPnt7IGljb24gfX08L2k+IDwvZGl2PlwiO1xuXG4vKioqLyB9KSxcbi8qIDI3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbl9fd2VicGFja19yZXF1aXJlX18oMjgpO1xuXG52YXIgdGVtcGxhdGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMwKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdGVtcGxhdGU6IHRlbXBsYXRlLFxuICAgIHByb3BzOiBbJ3RleHQnLCAnaWNvbiddLFxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NsaWNrJyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG4vKioqLyB9KSxcbi8qIDI4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI5KTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmksIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihmYWxzZSkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9idXR0b24ubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9idXR0b24ubGVzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cbi8qKiovIH0pLFxuLyogMjkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmksIFwiLmJ1dHRvbntiYWNrZ3JvdW5kOiMwMDZlZmY7dGV4dC1hbGlnbjpjZW50ZXI7cGFkZGluZzoxNXB4O2N1cnNvcjpwb2ludGVyfS5idXR0b24gaSwuYnV0dG9uIHNwYW57Y29sb3I6I2ZmZn0uYnV0dG9uIGl7dmVydGljYWwtYWxpZ246c3VifVwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJEOi9HSVQvcHJvamVjdC9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL0Q6L0dJVC9wcm9qZWN0L3NyYy9jb250aW5lcnMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsUUFDSSxtQkFDQSxrQkFDQSxhQUNBLGNBQUEsQ0FHSixBQUlBLHVCQUhJLFVBQUEsQ0FLQSxBQUZKLFVBRUksa0JBQUEsQ0FBQVwiLFwiZmlsZVwiOlwiYnV0dG9uLmxlc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQ6IHJnYigwLCAxMTAsIDI1NSk7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTVweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uYnV0dG9uIHNwYW4ge1xcbiAgICBjb2xvcjpyZ2IoMjU1LCAyNTUsIDI1NSk7XFxufVxcblxcbi5idXR0b24gaSB7XFxuICAgIGNvbG9yOnJnYigyNTUsIDI1NSwgMjU1KTtcXG4gICAgdmVydGljYWwtYWxpZ246IHN1YjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG4vKioqLyB9KSxcbi8qIDMwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8ZGl2IEBjbGljaz1vbkNsaWNrIGNsYXNzPWJ1dHRvbj4gPGkgY2xhc3M9bWF0ZXJpYWwtaWNvbnM+e3sgaWNvbiB9fTwvaT4gPHNwYW4+e3sgdGV4dCB9fTwvc3Bhbj4gPC9kaXY+XCI7XG5cbi8qKiovIH0pXG4vKioqKioqLyBdKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc2NyaXB0LmpzIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMyk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgOGYyMzAzMTc5ZWQzZGZlMjM1MDMiLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24oc2VsZWN0b3IpIHtcblx0XHRpZiAodHlwZW9mIG1lbW9bc2VsZWN0b3JdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBmbi5jYWxsKHRoaXMsIHNlbGVjdG9yKTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAoc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3NlbGVjdG9yXSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1tzZWxlY3Rvcl1cblx0fTtcbn0pKGZ1bmN0aW9uICh0YXJnZXQpIHtcblx0cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KVxufSk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG5cdGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvICsgXCIgXCIgKyBvcHRpb25zLmluc2VydEF0LmJlZm9yZSk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiY29uc3QgVnVlID0gcmVxdWlyZSgndnVlL2Rpc3QvdnVlLm1pbicpO1xyXG5jb25zdCBhcHAgPSByZXF1aXJlKCcuL2FwcCcpO1xyXG5cclxudmFyIHZ1ZV9lbmdpbmUgPSBuZXcgVnVlKGFwcClcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gdnVlX2VuZ2luZTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvdnVlX2VuZ2luZS5qcyIsIi8qIVxuICogVnVlLmpzIHYyLjUuMTNcbiAqIChjKSAyMDE0LTIwMTcgRXZhbiBZb3VcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6dC5WdWU9ZSgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdCh0KXtyZXR1cm4gdm9pZCAwPT09dHx8bnVsbD09PXR9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdm9pZCAwIT09dCYmbnVsbCE9PXR9ZnVuY3Rpb24gbih0KXtyZXR1cm4hMD09PXR9ZnVuY3Rpb24gcih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdHx8XCJudW1iZXJcIj09dHlwZW9mIHR8fFwic3ltYm9sXCI9PXR5cGVvZiB0fHxcImJvb2xlYW5cIj09dHlwZW9mIHR9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gbnVsbCE9PXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0fWZ1bmN0aW9uIG8odCl7cmV0dXJuXCJbb2JqZWN0IE9iamVjdF1cIj09PU5uLmNhbGwodCl9ZnVuY3Rpb24gYSh0KXt2YXIgZT1wYXJzZUZsb2F0KFN0cmluZyh0KSk7cmV0dXJuIGU+PTAmJk1hdGguZmxvb3IoZSk9PT1lJiZpc0Zpbml0ZSh0KX1mdW5jdGlvbiBzKHQpe3JldHVybiBudWxsPT10P1wiXCI6XCJvYmplY3RcIj09dHlwZW9mIHQ/SlNPTi5zdHJpbmdpZnkodCxudWxsLDIpOlN0cmluZyh0KX1mdW5jdGlvbiBjKHQpe3ZhciBlPXBhcnNlRmxvYXQodCk7cmV0dXJuIGlzTmFOKGUpP3Q6ZX1mdW5jdGlvbiB1KHQsZSl7Zm9yKHZhciBuPU9iamVjdC5jcmVhdGUobnVsbCkscj10LnNwbGl0KFwiLFwiKSxpPTA7aTxyLmxlbmd0aDtpKyspbltyW2ldXT0hMDtyZXR1cm4gZT9mdW5jdGlvbih0KXtyZXR1cm4gblt0LnRvTG93ZXJDYXNlKCldfTpmdW5jdGlvbih0KXtyZXR1cm4gblt0XX19ZnVuY3Rpb24gbCh0LGUpe2lmKHQubGVuZ3RoKXt2YXIgbj10LmluZGV4T2YoZSk7aWYobj4tMSlyZXR1cm4gdC5zcGxpY2UobiwxKX19ZnVuY3Rpb24gZih0LGUpe3JldHVybiBNbi5jYWxsKHQsZSl9ZnVuY3Rpb24gcCh0KXt2YXIgZT1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gZVtuXXx8KGVbbl09dChuKSl9fWZ1bmN0aW9uIGQodCxlKXtmdW5jdGlvbiBuKG4pe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg7cmV0dXJuIHI/cj4xP3QuYXBwbHkoZSxhcmd1bWVudHMpOnQuY2FsbChlLG4pOnQuY2FsbChlKX1yZXR1cm4gbi5fbGVuZ3RoPXQubGVuZ3RoLG59ZnVuY3Rpb24gdih0LGUpe2U9ZXx8MDtmb3IodmFyIG49dC5sZW5ndGgtZSxyPW5ldyBBcnJheShuKTtuLS07KXJbbl09dFtuK2VdO3JldHVybiByfWZ1bmN0aW9uIGgodCxlKXtmb3IodmFyIG4gaW4gZSl0W25dPWVbbl07cmV0dXJuIHR9ZnVuY3Rpb24gbSh0KXtmb3IodmFyIGU9e30sbj0wO248dC5sZW5ndGg7bisrKXRbbl0mJmgoZSx0W25dKTtyZXR1cm4gZX1mdW5jdGlvbiB5KHQsZSxuKXt9ZnVuY3Rpb24gZyh0LGUpe2lmKHQ9PT1lKXJldHVybiEwO3ZhciBuPWkodCkscj1pKGUpO2lmKCFufHwhcilyZXR1cm4hbiYmIXImJlN0cmluZyh0KT09PVN0cmluZyhlKTt0cnl7dmFyIG89QXJyYXkuaXNBcnJheSh0KSxhPUFycmF5LmlzQXJyYXkoZSk7aWYobyYmYSlyZXR1cm4gdC5sZW5ndGg9PT1lLmxlbmd0aCYmdC5ldmVyeShmdW5jdGlvbih0LG4pe3JldHVybiBnKHQsZVtuXSl9KTtpZihvfHxhKXJldHVybiExO3ZhciBzPU9iamVjdC5rZXlzKHQpLGM9T2JqZWN0LmtleXMoZSk7cmV0dXJuIHMubGVuZ3RoPT09Yy5sZW5ndGgmJnMuZXZlcnkoZnVuY3Rpb24obil7cmV0dXJuIGcodFtuXSxlW25dKX0pfWNhdGNoKHQpe3JldHVybiExfX1mdW5jdGlvbiBfKHQsZSl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspaWYoZyh0W25dLGUpKXJldHVybiBuO3JldHVybi0xfWZ1bmN0aW9uIGIodCl7dmFyIGU9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7ZXx8KGU9ITAsdC5hcHBseSh0aGlzLGFyZ3VtZW50cykpfX1mdW5jdGlvbiAkKHQpe3ZhciBlPSh0K1wiXCIpLmNoYXJDb2RlQXQoMCk7cmV0dXJuIDM2PT09ZXx8OTU9PT1lfWZ1bmN0aW9uIEModCxlLG4scil7T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7dmFsdWU6bixlbnVtZXJhYmxlOiEhcix3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9KX1mdW5jdGlvbiB3KHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJi9uYXRpdmUgY29kZS8udGVzdCh0LnRvU3RyaW5nKCkpfWZ1bmN0aW9uIHgodCl7cmV0dXJuIG5ldyBtcih2b2lkIDAsdm9pZCAwLHZvaWQgMCxTdHJpbmcodCkpfWZ1bmN0aW9uIGsodCxlKXt2YXIgbj10LmNvbXBvbmVudE9wdGlvbnMscj1uZXcgbXIodC50YWcsdC5kYXRhLHQuY2hpbGRyZW4sdC50ZXh0LHQuZWxtLHQuY29udGV4dCxuLHQuYXN5bmNGYWN0b3J5KTtyZXR1cm4gci5ucz10Lm5zLHIuaXNTdGF0aWM9dC5pc1N0YXRpYyxyLmtleT10LmtleSxyLmlzQ29tbWVudD10LmlzQ29tbWVudCxyLmZuQ29udGV4dD10LmZuQ29udGV4dCxyLmZuT3B0aW9ucz10LmZuT3B0aW9ucyxyLmZuU2NvcGVJZD10LmZuU2NvcGVJZCxyLmlzQ2xvbmVkPSEwLGUmJih0LmNoaWxkcmVuJiYoci5jaGlsZHJlbj1BKHQuY2hpbGRyZW4sITApKSxuJiZuLmNoaWxkcmVuJiYobi5jaGlsZHJlbj1BKG4uY2hpbGRyZW4sITApKSkscn1mdW5jdGlvbiBBKHQsZSl7Zm9yKHZhciBuPXQubGVuZ3RoLHI9bmV3IEFycmF5KG4pLGk9MDtpPG47aSsrKXJbaV09ayh0W2ldLGUpO3JldHVybiByfWZ1bmN0aW9uIE8odCxlLG4pe3QuX19wcm90b19fPWV9ZnVuY3Rpb24gUyh0LGUsbil7Zm9yKHZhciByPTAsaT1uLmxlbmd0aDtyPGk7cisrKXt2YXIgbz1uW3JdO0ModCxvLGVbb10pfX1mdW5jdGlvbiBUKHQsZSl7aWYoaSh0KSYmISh0IGluc3RhbmNlb2YgbXIpKXt2YXIgbjtyZXR1cm4gZih0LFwiX19vYl9fXCIpJiZ0Ll9fb2JfXyBpbnN0YW5jZW9mIHdyP249dC5fX29iX186Q3Iuc2hvdWxkQ29udmVydCYmIXVyKCkmJihBcnJheS5pc0FycmF5KHQpfHxvKHQpKSYmT2JqZWN0LmlzRXh0ZW5zaWJsZSh0KSYmIXQuX2lzVnVlJiYobj1uZXcgd3IodCkpLGUmJm4mJm4udm1Db3VudCsrLG59fWZ1bmN0aW9uIEUodCxlLG4scixpKXt2YXIgbz1uZXcgdnIsYT1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsZSk7aWYoIWF8fCExIT09YS5jb25maWd1cmFibGUpe3ZhciBzPWEmJmEuZ2V0LGM9YSYmYS5zZXQsdT0haSYmVChuKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXt2YXIgZT1zP3MuY2FsbCh0KTpuO3JldHVybiB2ci50YXJnZXQmJihvLmRlcGVuZCgpLHUmJih1LmRlcC5kZXBlbmQoKSxBcnJheS5pc0FycmF5KGUpJiZJKGUpKSksZX0sc2V0OmZ1bmN0aW9uKGUpe3ZhciByPXM/cy5jYWxsKHQpOm47ZT09PXJ8fGUhPWUmJnIhPXJ8fChjP2MuY2FsbCh0LGUpOm49ZSx1PSFpJiZUKGUpLG8ubm90aWZ5KCkpfX0pfX1mdW5jdGlvbiBqKHQsZSxuKXtpZihBcnJheS5pc0FycmF5KHQpJiZhKGUpKXJldHVybiB0Lmxlbmd0aD1NYXRoLm1heCh0Lmxlbmd0aCxlKSx0LnNwbGljZShlLDEsbiksbjtpZihlIGluIHQmJiEoZSBpbiBPYmplY3QucHJvdG90eXBlKSlyZXR1cm4gdFtlXT1uLG47dmFyIHI9dC5fX29iX187cmV0dXJuIHQuX2lzVnVlfHxyJiZyLnZtQ291bnQ/bjpyPyhFKHIudmFsdWUsZSxuKSxyLmRlcC5ub3RpZnkoKSxuKToodFtlXT1uLG4pfWZ1bmN0aW9uIE4odCxlKXtpZihBcnJheS5pc0FycmF5KHQpJiZhKGUpKXQuc3BsaWNlKGUsMSk7ZWxzZXt2YXIgbj10Ll9fb2JfXzt0Ll9pc1Z1ZXx8biYmbi52bUNvdW50fHxmKHQsZSkmJihkZWxldGUgdFtlXSxuJiZuLmRlcC5ub3RpZnkoKSl9fWZ1bmN0aW9uIEkodCl7Zm9yKHZhciBlPXZvaWQgMCxuPTAscj10Lmxlbmd0aDtuPHI7bisrKShlPXRbbl0pJiZlLl9fb2JfXyYmZS5fX29iX18uZGVwLmRlcGVuZCgpLEFycmF5LmlzQXJyYXkoZSkmJkkoZSl9ZnVuY3Rpb24gTCh0LGUpe2lmKCFlKXJldHVybiB0O2Zvcih2YXIgbixyLGksYT1PYmplY3Qua2V5cyhlKSxzPTA7czxhLmxlbmd0aDtzKyspcj10W249YVtzXV0saT1lW25dLGYodCxuKT9vKHIpJiZvKGkpJiZMKHIsaSk6aih0LG4saSk7cmV0dXJuIHR9ZnVuY3Rpb24gTSh0LGUsbil7cmV0dXJuIG4/ZnVuY3Rpb24oKXt2YXIgcj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UuY2FsbChuLG4pOmUsaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3QuY2FsbChuLG4pOnQ7cmV0dXJuIHI/TChyLGkpOml9OmU/dD9mdW5jdGlvbigpe3JldHVybiBMKFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZS5jYWxsKHRoaXMsdGhpcyk6ZSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3QuY2FsbCh0aGlzLHRoaXMpOnQpfTplOnR9ZnVuY3Rpb24gRCh0LGUpe3JldHVybiBlP3Q/dC5jb25jYXQoZSk6QXJyYXkuaXNBcnJheShlKT9lOltlXTp0fWZ1bmN0aW9uIFAodCxlLG4scil7dmFyIGk9T2JqZWN0LmNyZWF0ZSh0fHxudWxsKTtyZXR1cm4gZT9oKGksZSk6aX1mdW5jdGlvbiBGKHQsZSxuKXtmdW5jdGlvbiByKHIpe3ZhciBpPXhyW3JdfHxPcjt1W3JdPWkodFtyXSxlW3JdLG4scil9XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKGU9ZS5vcHRpb25zKSxmdW5jdGlvbih0LGUpe3ZhciBuPXQucHJvcHM7aWYobil7dmFyIHIsaSxhPXt9O2lmKEFycmF5LmlzQXJyYXkobikpZm9yKHI9bi5sZW5ndGg7ci0tOylcInN0cmluZ1wiPT10eXBlb2YoaT1uW3JdKSYmKGFbUG4oaSldPXt0eXBlOm51bGx9KTtlbHNlIGlmKG8obikpZm9yKHZhciBzIGluIG4paT1uW3NdLGFbUG4ocyldPW8oaSk/aTp7dHlwZTppfTt0LnByb3BzPWF9fShlKSxmdW5jdGlvbih0LGUpe3ZhciBuPXQuaW5qZWN0O2lmKG4pe3ZhciByPXQuaW5qZWN0PXt9O2lmKEFycmF5LmlzQXJyYXkobikpZm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspcltuW2ldXT17ZnJvbTpuW2ldfTtlbHNlIGlmKG8obikpZm9yKHZhciBhIGluIG4pe3ZhciBzPW5bYV07clthXT1vKHMpP2goe2Zyb206YX0scyk6e2Zyb206c319fX0oZSksZnVuY3Rpb24odCl7dmFyIGU9dC5kaXJlY3RpdmVzO2lmKGUpZm9yKHZhciBuIGluIGUpe3ZhciByPWVbbl07XCJmdW5jdGlvblwiPT10eXBlb2YgciYmKGVbbl09e2JpbmQ6cix1cGRhdGU6cn0pfX0oZSk7dmFyIGk9ZS5leHRlbmRzO2lmKGkmJih0PUYodCxpLG4pKSxlLm1peGlucylmb3IodmFyIGE9MCxzPWUubWl4aW5zLmxlbmd0aDthPHM7YSsrKXQ9Rih0LGUubWl4aW5zW2FdLG4pO3ZhciBjLHU9e307Zm9yKGMgaW4gdClyKGMpO2ZvcihjIGluIGUpZih0LGMpfHxyKGMpO3JldHVybiB1fWZ1bmN0aW9uIFIodCxlLG4scil7aWYoXCJzdHJpbmdcIj09dHlwZW9mIG4pe3ZhciBpPXRbZV07aWYoZihpLG4pKXJldHVybiBpW25dO3ZhciBvPVBuKG4pO2lmKGYoaSxvKSlyZXR1cm4gaVtvXTt2YXIgYT1GbihvKTtpZihmKGksYSkpcmV0dXJuIGlbYV07cmV0dXJuIGlbbl18fGlbb118fGlbYV19fWZ1bmN0aW9uIEgodCxlLG4scil7dmFyIGk9ZVt0XSxvPSFmKG4sdCksYT1uW3RdO2lmKFUoQm9vbGVhbixpLnR5cGUpJiYobyYmIWYoaSxcImRlZmF1bHRcIik/YT0hMTpVKFN0cmluZyxpLnR5cGUpfHxcIlwiIT09YSYmYSE9PUhuKHQpfHwoYT0hMCkpLHZvaWQgMD09PWEpe2E9ZnVuY3Rpb24odCxlLG4pe2lmKCFmKGUsXCJkZWZhdWx0XCIpKXJldHVybjt2YXIgcj1lLmRlZmF1bHQ7aWYodCYmdC4kb3B0aW9ucy5wcm9wc0RhdGEmJnZvaWQgMD09PXQuJG9wdGlvbnMucHJvcHNEYXRhW25dJiZ2b2lkIDAhPT10Ll9wcm9wc1tuXSlyZXR1cm4gdC5fcHJvcHNbbl07cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgciYmXCJGdW5jdGlvblwiIT09QihlLnR5cGUpP3IuY2FsbCh0KTpyfShyLGksdCk7dmFyIHM9Q3Iuc2hvdWxkQ29udmVydDtDci5zaG91bGRDb252ZXJ0PSEwLFQoYSksQ3Iuc2hvdWxkQ29udmVydD1zfXJldHVybiBhfWZ1bmN0aW9uIEIodCl7dmFyIGU9dCYmdC50b1N0cmluZygpLm1hdGNoKC9eXFxzKmZ1bmN0aW9uIChcXHcrKS8pO3JldHVybiBlP2VbMV06XCJcIn1mdW5jdGlvbiBVKHQsZSl7aWYoIUFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIEIoZSk9PT1CKHQpO2Zvcih2YXIgbj0wLHI9ZS5sZW5ndGg7bjxyO24rKylpZihCKGVbbl0pPT09Qih0KSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBWKHQsZSxuKXtpZihlKWZvcih2YXIgcj1lO3I9ci4kcGFyZW50Oyl7dmFyIGk9ci4kb3B0aW9ucy5lcnJvckNhcHR1cmVkO2lmKGkpZm9yKHZhciBvPTA7bzxpLmxlbmd0aDtvKyspdHJ5e2lmKCExPT09aVtvXS5jYWxsKHIsdCxlLG4pKXJldHVybn1jYXRjaCh0KXt6KHQscixcImVycm9yQ2FwdHVyZWQgaG9va1wiKX19eih0LGUsbil9ZnVuY3Rpb24geih0LGUsbil7aWYoSm4uZXJyb3JIYW5kbGVyKXRyeXtyZXR1cm4gSm4uZXJyb3JIYW5kbGVyLmNhbGwobnVsbCx0LGUsbil9Y2F0Y2godCl7Syh0LG51bGwsXCJjb25maWcuZXJyb3JIYW5kbGVyXCIpfUsodCxlLG4pfWZ1bmN0aW9uIEsodCxlLG4pe2lmKCFHbiYmIVpufHxcInVuZGVmaW5lZFwiPT10eXBlb2YgY29uc29sZSl0aHJvdyB0O2NvbnNvbGUuZXJyb3IodCl9ZnVuY3Rpb24gSigpe1RyPSExO3ZhciB0PVNyLnNsaWNlKDApO1NyLmxlbmd0aD0wO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV0oKX1mdW5jdGlvbiBxKHQsZSl7dmFyIG47aWYoU3IucHVzaChmdW5jdGlvbigpe2lmKHQpdHJ5e3QuY2FsbChlKX1jYXRjaCh0KXtWKHQsZSxcIm5leHRUaWNrXCIpfWVsc2UgbiYmbihlKX0pLFRyfHwoVHI9ITAsRXI/QXIoKTprcigpKSwhdCYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFByb21pc2UpcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHQpe249dH0pfWZ1bmN0aW9uIFcodCl7Ryh0LE1yKSxNci5jbGVhcigpfWZ1bmN0aW9uIEcodCxlKXt2YXIgbixyLG89QXJyYXkuaXNBcnJheSh0KTtpZigob3x8aSh0KSkmJiFPYmplY3QuaXNGcm96ZW4odCkpe2lmKHQuX19vYl9fKXt2YXIgYT10Ll9fb2JfXy5kZXAuaWQ7aWYoZS5oYXMoYSkpcmV0dXJuO2UuYWRkKGEpfWlmKG8pZm9yKG49dC5sZW5ndGg7bi0tOylHKHRbbl0sZSk7ZWxzZSBmb3Iobj0ocj1PYmplY3Qua2V5cyh0KSkubGVuZ3RoO24tLTspRyh0W3Jbbl1dLGUpfX1mdW5jdGlvbiBaKHQpe2Z1bmN0aW9uIGUoKXt2YXIgdD1hcmd1bWVudHMsbj1lLmZucztpZighQXJyYXkuaXNBcnJheShuKSlyZXR1cm4gbi5hcHBseShudWxsLGFyZ3VtZW50cyk7Zm9yKHZhciByPW4uc2xpY2UoKSxpPTA7aTxyLmxlbmd0aDtpKyspcltpXS5hcHBseShudWxsLHQpfXJldHVybiBlLmZucz10LGV9ZnVuY3Rpb24gWChlLG4scixpLG8pe3ZhciBhLHMsYyx1O2ZvcihhIGluIGUpcz1lW2FdLGM9blthXSx1PURyKGEpLHQocyl8fCh0KGMpPyh0KHMuZm5zKSYmKHM9ZVthXT1aKHMpKSxyKHUubmFtZSxzLHUub25jZSx1LmNhcHR1cmUsdS5wYXNzaXZlLHUucGFyYW1zKSk6cyE9PWMmJihjLmZucz1zLGVbYV09YykpO2ZvcihhIGluIG4pdChlW2FdKSYmaSgodT1EcihhKSkubmFtZSxuW2FdLHUuY2FwdHVyZSl9ZnVuY3Rpb24gWShyLGksbyl7ZnVuY3Rpb24gYSgpe28uYXBwbHkodGhpcyxhcmd1bWVudHMpLGwocy5mbnMsYSl9ciBpbnN0YW5jZW9mIG1yJiYocj1yLmRhdGEuaG9va3x8KHIuZGF0YS5ob29rPXt9KSk7dmFyIHMsYz1yW2ldO3QoYyk/cz1aKFthXSk6ZShjLmZucykmJm4oYy5tZXJnZWQpPyhzPWMpLmZucy5wdXNoKGEpOnM9WihbYyxhXSkscy5tZXJnZWQ9ITAscltpXT1zfWZ1bmN0aW9uIFEodCxuLHIsaSxvKXtpZihlKG4pKXtpZihmKG4scikpcmV0dXJuIHRbcl09bltyXSxvfHxkZWxldGUgbltyXSwhMDtpZihmKG4saSkpcmV0dXJuIHRbcl09bltpXSxvfHxkZWxldGUgbltpXSwhMH1yZXR1cm4hMX1mdW5jdGlvbiB0dCh0KXtyZXR1cm4gZSh0KSYmZSh0LnRleHQpJiZmdW5jdGlvbih0KXtyZXR1cm4hMT09PXR9KHQuaXNDb21tZW50KX1mdW5jdGlvbiBldChpLG8pe3ZhciBhLHMsYyx1LGw9W107Zm9yKGE9MDthPGkubGVuZ3RoO2ErKyl0KHM9aVthXSl8fFwiYm9vbGVhblwiPT10eXBlb2Ygc3x8KHU9bFtjPWwubGVuZ3RoLTFdLEFycmF5LmlzQXJyYXkocyk/cy5sZW5ndGg+MCYmKHR0KChzPWV0KHMsKG98fFwiXCIpK1wiX1wiK2EpKVswXSkmJnR0KHUpJiYobFtjXT14KHUudGV4dCtzWzBdLnRleHQpLHMuc2hpZnQoKSksbC5wdXNoLmFwcGx5KGwscykpOnIocyk/dHQodSk/bFtjXT14KHUudGV4dCtzKTpcIlwiIT09cyYmbC5wdXNoKHgocykpOnR0KHMpJiZ0dCh1KT9sW2NdPXgodS50ZXh0K3MudGV4dCk6KG4oaS5faXNWTGlzdCkmJmUocy50YWcpJiZ0KHMua2V5KSYmZShvKSYmKHMua2V5PVwiX192bGlzdFwiK28rXCJfXCIrYStcIl9fXCIpLGwucHVzaChzKSkpO3JldHVybiBsfWZ1bmN0aW9uIG50KHQsZSl7cmV0dXJuKHQuX19lc01vZHVsZXx8ZnImJlwiTW9kdWxlXCI9PT10W1N5bWJvbC50b1N0cmluZ1RhZ10pJiYodD10LmRlZmF1bHQpLGkodCk/ZS5leHRlbmQodCk6dH1mdW5jdGlvbiBydCh0KXtyZXR1cm4gdC5pc0NvbW1lbnQmJnQuYXN5bmNGYWN0b3J5fWZ1bmN0aW9uIGl0KHQpe2lmKEFycmF5LmlzQXJyYXkodCkpZm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07aWYoZShyKSYmKGUoci5jb21wb25lbnRPcHRpb25zKXx8cnQocikpKXJldHVybiByfX1mdW5jdGlvbiBvdCh0LGUsbil7bj9Mci4kb25jZSh0LGUpOkxyLiRvbih0LGUpfWZ1bmN0aW9uIGF0KHQsZSl7THIuJG9mZih0LGUpfWZ1bmN0aW9uIHN0KHQsZSxuKXtMcj10LFgoZSxufHx7fSxvdCxhdCksTHI9dm9pZCAwfWZ1bmN0aW9uIGN0KHQsZSl7dmFyIG49e307aWYoIXQpcmV0dXJuIG47Zm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7cisrKXt2YXIgbz10W3JdLGE9by5kYXRhO2lmKGEmJmEuYXR0cnMmJmEuYXR0cnMuc2xvdCYmZGVsZXRlIGEuYXR0cnMuc2xvdCxvLmNvbnRleHQhPT1lJiZvLmZuQ29udGV4dCE9PWV8fCFhfHxudWxsPT1hLnNsb3QpKG4uZGVmYXVsdHx8KG4uZGVmYXVsdD1bXSkpLnB1c2gobyk7ZWxzZXt2YXIgcz1hLnNsb3QsYz1uW3NdfHwobltzXT1bXSk7XCJ0ZW1wbGF0ZVwiPT09by50YWc/Yy5wdXNoLmFwcGx5KGMsby5jaGlsZHJlbnx8W10pOmMucHVzaChvKX19Zm9yKHZhciB1IGluIG4pblt1XS5ldmVyeSh1dCkmJmRlbGV0ZSBuW3VdO3JldHVybiBufWZ1bmN0aW9uIHV0KHQpe3JldHVybiB0LmlzQ29tbWVudCYmIXQuYXN5bmNGYWN0b3J5fHxcIiBcIj09PXQudGV4dH1mdW5jdGlvbiBsdCh0LGUpe2U9ZXx8e307Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspQXJyYXkuaXNBcnJheSh0W25dKT9sdCh0W25dLGUpOmVbdFtuXS5rZXldPXRbbl0uZm47cmV0dXJuIGV9ZnVuY3Rpb24gZnQodCl7Zm9yKDt0JiYodD10LiRwYXJlbnQpOylpZih0Ll9pbmFjdGl2ZSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBwdCh0LGUpe2lmKGUpe2lmKHQuX2RpcmVjdEluYWN0aXZlPSExLGZ0KHQpKXJldHVybn1lbHNlIGlmKHQuX2RpcmVjdEluYWN0aXZlKXJldHVybjtpZih0Ll9pbmFjdGl2ZXx8bnVsbD09PXQuX2luYWN0aXZlKXt0Ll9pbmFjdGl2ZT0hMTtmb3IodmFyIG49MDtuPHQuJGNoaWxkcmVuLmxlbmd0aDtuKyspcHQodC4kY2hpbGRyZW5bbl0pO3Z0KHQsXCJhY3RpdmF0ZWRcIil9fWZ1bmN0aW9uIGR0KHQsZSl7aWYoIShlJiYodC5fZGlyZWN0SW5hY3RpdmU9ITAsZnQodCkpfHx0Ll9pbmFjdGl2ZSkpe3QuX2luYWN0aXZlPSEwO2Zvcih2YXIgbj0wO248dC4kY2hpbGRyZW4ubGVuZ3RoO24rKylkdCh0LiRjaGlsZHJlbltuXSk7dnQodCxcImRlYWN0aXZhdGVkXCIpfX1mdW5jdGlvbiB2dCh0LGUpe3ZhciBuPXQuJG9wdGlvbnNbZV07aWYobilmb3IodmFyIHI9MCxpPW4ubGVuZ3RoO3I8aTtyKyspdHJ5e25bcl0uY2FsbCh0KX1jYXRjaChuKXtWKG4sdCxlK1wiIGhvb2tcIil9dC5faGFzSG9va0V2ZW50JiZ0LiRlbWl0KFwiaG9vazpcIitlKX1mdW5jdGlvbiBodCgpe1VyPSEwO3ZhciB0LGU7Zm9yKEZyLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5pZC1lLmlkfSksVnI9MDtWcjxGci5sZW5ndGg7VnIrKyllPSh0PUZyW1ZyXSkuaWQsSHJbZV09bnVsbCx0LnJ1bigpO3ZhciBuPVJyLnNsaWNlKCkscj1Gci5zbGljZSgpO1ZyPUZyLmxlbmd0aD1Sci5sZW5ndGg9MCxIcj17fSxCcj1Vcj0hMSxmdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdLl9pbmFjdGl2ZT0hMCxwdCh0W2VdLCEwKX0obiksZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGg7Zm9yKDtlLS07KXt2YXIgbj10W2VdLHI9bi52bTtyLl93YXRjaGVyPT09biYmci5faXNNb3VudGVkJiZ2dChyLFwidXBkYXRlZFwiKX19KHIpLGxyJiZKbi5kZXZ0b29scyYmbHIuZW1pdChcImZsdXNoXCIpfWZ1bmN0aW9uIG10KHQsZSxuKXtKci5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tlXVtuXX0sSnIuc2V0PWZ1bmN0aW9uKHQpe3RoaXNbZV1bbl09dH0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbixKcil9ZnVuY3Rpb24geXQodCl7dC5fd2F0Y2hlcnM9W107dmFyIGU9dC4kb3B0aW9ucztlLnByb3BzJiZmdW5jdGlvbih0LGUpe3ZhciBuPXQuJG9wdGlvbnMucHJvcHNEYXRhfHx7fSxyPXQuX3Byb3BzPXt9LGk9dC4kb3B0aW9ucy5fcHJvcEtleXM9W10sbz0hdC4kcGFyZW50O0NyLnNob3VsZENvbnZlcnQ9bzt2YXIgYT1mdW5jdGlvbihvKXtpLnB1c2gobyk7dmFyIGE9SChvLGUsbix0KTtFKHIsbyxhKSxvIGluIHR8fG10KHQsXCJfcHJvcHNcIixvKX07Zm9yKHZhciBzIGluIGUpYShzKTtDci5zaG91bGRDb252ZXJ0PSEwfSh0LGUucHJvcHMpLGUubWV0aG9kcyYmZnVuY3Rpb24odCxlKXt0LiRvcHRpb25zLnByb3BzO2Zvcih2YXIgbiBpbiBlKXRbbl09bnVsbD09ZVtuXT95OmQoZVtuXSx0KX0odCxlLm1ldGhvZHMpLGUuZGF0YT9mdW5jdGlvbih0KXt2YXIgZT10LiRvcHRpb25zLmRhdGE7ZT10Ll9kYXRhPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZnVuY3Rpb24odCxlKXt0cnl7cmV0dXJuIHQuY2FsbChlLGUpfWNhdGNoKHQpe3JldHVybiBWKHQsZSxcImRhdGEoKVwiKSx7fX19KGUsdCk6ZXx8e30sbyhlKXx8KGU9e30pO3ZhciBuPU9iamVjdC5rZXlzKGUpLHI9dC4kb3B0aW9ucy5wcm9wcyxpPSh0LiRvcHRpb25zLm1ldGhvZHMsbi5sZW5ndGgpO2Zvcig7aS0tOyl7dmFyIGE9bltpXTtyJiZmKHIsYSl8fCQoYSl8fG10KHQsXCJfZGF0YVwiLGEpfVQoZSwhMCl9KHQpOlQodC5fZGF0YT17fSwhMCksZS5jb21wdXRlZCYmZnVuY3Rpb24odCxlKXt2YXIgbj10Ll9jb21wdXRlZFdhdGNoZXJzPU9iamVjdC5jcmVhdGUobnVsbCkscj11cigpO2Zvcih2YXIgaSBpbiBlKXt2YXIgbz1lW2ldLGE9XCJmdW5jdGlvblwiPT10eXBlb2Ygbz9vOm8uZ2V0O3J8fChuW2ldPW5ldyBLcih0LGF8fHkseSxxcikpLGkgaW4gdHx8Z3QodCxpLG8pfX0odCxlLmNvbXB1dGVkKSxlLndhdGNoJiZlLndhdGNoIT09aXImJmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuIGluIGUpe3ZhciByPWVbbl07aWYoQXJyYXkuaXNBcnJheShyKSlmb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krKylidCh0LG4scltpXSk7ZWxzZSBidCh0LG4scil9fSh0LGUud2F0Y2gpfWZ1bmN0aW9uIGd0KHQsZSxuKXt2YXIgcj0hdXIoKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBuPyhKci5nZXQ9cj9fdChlKTpuLEpyLnNldD15KTooSnIuZ2V0PW4uZ2V0P3ImJiExIT09bi5jYWNoZT9fdChlKTpuLmdldDp5LEpyLnNldD1uLnNldD9uLnNldDp5KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxlLEpyKX1mdW5jdGlvbiBfdCh0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9jb21wdXRlZFdhdGNoZXJzJiZ0aGlzLl9jb21wdXRlZFdhdGNoZXJzW3RdO2lmKGUpcmV0dXJuIGUuZGlydHkmJmUuZXZhbHVhdGUoKSx2ci50YXJnZXQmJmUuZGVwZW5kKCksZS52YWx1ZX19ZnVuY3Rpb24gYnQodCxlLG4scil7cmV0dXJuIG8obikmJihyPW4sbj1uLmhhbmRsZXIpLFwic3RyaW5nXCI9PXR5cGVvZiBuJiYobj10W25dKSx0LiR3YXRjaChlLG4scil9ZnVuY3Rpb24gJHQodCxlKXtpZih0KXtmb3IodmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKSxyPWZyP1JlZmxlY3Qub3duS2V5cyh0KS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxlKS5lbnVtZXJhYmxlfSk6T2JqZWN0LmtleXModCksaT0wO2k8ci5sZW5ndGg7aSsrKXtmb3IodmFyIG89cltpXSxhPXRbb10uZnJvbSxzPWU7czspe2lmKHMuX3Byb3ZpZGVkJiZhIGluIHMuX3Byb3ZpZGVkKXtuW29dPXMuX3Byb3ZpZGVkW2FdO2JyZWFrfXM9cy4kcGFyZW50fWlmKCFzJiZcImRlZmF1bHRcImluIHRbb10pe3ZhciBjPXRbb10uZGVmYXVsdDtuW29dPVwiZnVuY3Rpb25cIj09dHlwZW9mIGM/Yy5jYWxsKGUpOmN9fXJldHVybiBufX1mdW5jdGlvbiBDdCh0LG4pe3ZhciByLG8sYSxzLGM7aWYoQXJyYXkuaXNBcnJheSh0KXx8XCJzdHJpbmdcIj09dHlwZW9mIHQpZm9yKHI9bmV3IEFycmF5KHQubGVuZ3RoKSxvPTAsYT10Lmxlbmd0aDtvPGE7bysrKXJbb109bih0W29dLG8pO2Vsc2UgaWYoXCJudW1iZXJcIj09dHlwZW9mIHQpZm9yKHI9bmV3IEFycmF5KHQpLG89MDtvPHQ7bysrKXJbb109bihvKzEsbyk7ZWxzZSBpZihpKHQpKWZvcihzPU9iamVjdC5rZXlzKHQpLHI9bmV3IEFycmF5KHMubGVuZ3RoKSxvPTAsYT1zLmxlbmd0aDtvPGE7bysrKWM9c1tvXSxyW29dPW4odFtjXSxjLG8pO3JldHVybiBlKHIpJiYoci5faXNWTGlzdD0hMCkscn1mdW5jdGlvbiB3dCh0LGUsbixyKXt2YXIgaSxvPXRoaXMuJHNjb3BlZFNsb3RzW3RdO2lmKG8pbj1ufHx7fSxyJiYobj1oKGgoe30sciksbikpLGk9byhuKXx8ZTtlbHNle3ZhciBhPXRoaXMuJHNsb3RzW3RdO2EmJihhLl9yZW5kZXJlZD0hMCksaT1hfHxlfXZhciBzPW4mJm4uc2xvdDtyZXR1cm4gcz90aGlzLiRjcmVhdGVFbGVtZW50KFwidGVtcGxhdGVcIix7c2xvdDpzfSxpKTppfWZ1bmN0aW9uIHh0KHQpe3JldHVybiBSKHRoaXMuJG9wdGlvbnMsXCJmaWx0ZXJzXCIsdCl8fFVufWZ1bmN0aW9uIGt0KHQsZSxuLHIpe3ZhciBpPUpuLmtleUNvZGVzW2VdfHxuO3JldHVybiBpP0FycmF5LmlzQXJyYXkoaSk/LTE9PT1pLmluZGV4T2YodCk6aSE9PXQ6cj9IbihyKSE9PWU6dm9pZCAwfWZ1bmN0aW9uIEF0KHQsZSxuLHIsbyl7aWYobilpZihpKG4pKXtBcnJheS5pc0FycmF5KG4pJiYobj1tKG4pKTt2YXIgYSxzPWZ1bmN0aW9uKGkpe2lmKFwiY2xhc3NcIj09PWl8fFwic3R5bGVcIj09PWl8fExuKGkpKWE9dDtlbHNle3ZhciBzPXQuYXR0cnMmJnQuYXR0cnMudHlwZTthPXJ8fEpuLm11c3RVc2VQcm9wKGUscyxpKT90LmRvbVByb3BzfHwodC5kb21Qcm9wcz17fSk6dC5hdHRyc3x8KHQuYXR0cnM9e30pfWlmKCEoaSBpbiBhKSYmKGFbaV09bltpXSxvKSl7KHQub258fCh0Lm9uPXt9KSlbXCJ1cGRhdGU6XCIraV09ZnVuY3Rpb24odCl7bltpXT10fX19O2Zvcih2YXIgYyBpbiBuKXMoYyl9ZWxzZTtyZXR1cm4gdH1mdW5jdGlvbiBPdCh0LGUpe3ZhciBuPXRoaXMuX3N0YXRpY1RyZWVzfHwodGhpcy5fc3RhdGljVHJlZXM9W10pLHI9blt0XTtyZXR1cm4gciYmIWU/QXJyYXkuaXNBcnJheShyKT9BKHIpOmsocik6KHI9blt0XT10aGlzLiRvcHRpb25zLnN0YXRpY1JlbmRlckZuc1t0XS5jYWxsKHRoaXMuX3JlbmRlclByb3h5LG51bGwsdGhpcyksVHQocixcIl9fc3RhdGljX19cIit0LCExKSxyKX1mdW5jdGlvbiBTdCh0LGUsbil7cmV0dXJuIFR0KHQsXCJfX29uY2VfX1wiK2UrKG4/XCJfXCIrbjpcIlwiKSwhMCksdH1mdW5jdGlvbiBUdCh0LGUsbil7aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl0W3JdJiZcInN0cmluZ1wiIT10eXBlb2YgdFtyXSYmRXQodFtyXSxlK1wiX1wiK3Isbik7ZWxzZSBFdCh0LGUsbil9ZnVuY3Rpb24gRXQodCxlLG4pe3QuaXNTdGF0aWM9ITAsdC5rZXk9ZSx0LmlzT25jZT1ufWZ1bmN0aW9uIGp0KHQsZSl7aWYoZSlpZihvKGUpKXt2YXIgbj10Lm9uPXQub24/aCh7fSx0Lm9uKTp7fTtmb3IodmFyIHIgaW4gZSl7dmFyIGk9bltyXSxhPWVbcl07bltyXT1pP1tdLmNvbmNhdChpLGEpOmF9fWVsc2U7cmV0dXJuIHR9ZnVuY3Rpb24gTnQodCl7dC5fbz1TdCx0Ll9uPWMsdC5fcz1zLHQuX2w9Q3QsdC5fdD13dCx0Ll9xPWcsdC5faT1fLHQuX209T3QsdC5fZj14dCx0Ll9rPWt0LHQuX2I9QXQsdC5fdj14LHQuX2U9Z3IsdC5fdT1sdCx0Ll9nPWp0fWZ1bmN0aW9uIEl0KHQsZSxyLGksbyl7dmFyIGE9by5vcHRpb25zO3RoaXMuZGF0YT10LHRoaXMucHJvcHM9ZSx0aGlzLmNoaWxkcmVuPXIsdGhpcy5wYXJlbnQ9aSx0aGlzLmxpc3RlbmVycz10Lm9ufHxqbix0aGlzLmluamVjdGlvbnM9JHQoYS5pbmplY3QsaSksdGhpcy5zbG90cz1mdW5jdGlvbigpe3JldHVybiBjdChyLGkpfTt2YXIgcz1PYmplY3QuY3JlYXRlKGkpLGM9bihhLl9jb21waWxlZCksdT0hYztjJiYodGhpcy4kb3B0aW9ucz1hLHRoaXMuJHNsb3RzPXRoaXMuc2xvdHMoKSx0aGlzLiRzY29wZWRTbG90cz10LnNjb3BlZFNsb3RzfHxqbiksYS5fc2NvcGVJZD90aGlzLl9jPWZ1bmN0aW9uKHQsZSxuLHIpe3ZhciBvPUR0KHMsdCxlLG4scix1KTtyZXR1cm4gbyYmKG8uZm5TY29wZUlkPWEuX3Njb3BlSWQsby5mbkNvbnRleHQ9aSksb306dGhpcy5fYz1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gRHQocyx0LGUsbixyLHUpfX1mdW5jdGlvbiBMdCh0LGUpe2Zvcih2YXIgbiBpbiBlKXRbUG4obildPWVbbl19ZnVuY3Rpb24gTXQocixvLGEscyxjKXtpZighdChyKSl7dmFyIHU9YS4kb3B0aW9ucy5fYmFzZTtpZihpKHIpJiYocj11LmV4dGVuZChyKSksXCJmdW5jdGlvblwiPT10eXBlb2Ygcil7dmFyIGw7aWYodChyLmNpZCkmJihsPXIsdm9pZCAwPT09KHI9ZnVuY3Rpb24ocixvLGEpe2lmKG4oci5lcnJvcikmJmUoci5lcnJvckNvbXApKXJldHVybiByLmVycm9yQ29tcDtpZihlKHIucmVzb2x2ZWQpKXJldHVybiByLnJlc29sdmVkO2lmKG4oci5sb2FkaW5nKSYmZShyLmxvYWRpbmdDb21wKSlyZXR1cm4gci5sb2FkaW5nQ29tcDtpZighZShyLmNvbnRleHRzKSl7dmFyIHM9ci5jb250ZXh0cz1bYV0sYz0hMCx1PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT1zLmxlbmd0aDt0PGU7dCsrKXNbdF0uJGZvcmNlVXBkYXRlKCl9LGw9YihmdW5jdGlvbih0KXtyLnJlc29sdmVkPW50KHQsbyksY3x8dSgpfSksZj1iKGZ1bmN0aW9uKHQpe2Uoci5lcnJvckNvbXApJiYoci5lcnJvcj0hMCx1KCkpfSkscD1yKGwsZik7cmV0dXJuIGkocCkmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiBwLnRoZW4/dChyLnJlc29sdmVkKSYmcC50aGVuKGwsZik6ZShwLmNvbXBvbmVudCkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHAuY29tcG9uZW50LnRoZW4mJihwLmNvbXBvbmVudC50aGVuKGwsZiksZShwLmVycm9yKSYmKHIuZXJyb3JDb21wPW50KHAuZXJyb3IsbykpLGUocC5sb2FkaW5nKSYmKHIubG9hZGluZ0NvbXA9bnQocC5sb2FkaW5nLG8pLDA9PT1wLmRlbGF5P3IubG9hZGluZz0hMDpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dChyLnJlc29sdmVkKSYmdChyLmVycm9yKSYmKHIubG9hZGluZz0hMCx1KCkpfSxwLmRlbGF5fHwyMDApKSxlKHAudGltZW91dCkmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0KHIucmVzb2x2ZWQpJiZmKG51bGwpfSxwLnRpbWVvdXQpKSksYz0hMSxyLmxvYWRpbmc/ci5sb2FkaW5nQ29tcDpyLnJlc29sdmVkfXIuY29udGV4dHMucHVzaChhKX0obCx1LGEpKSkpcmV0dXJuIGZ1bmN0aW9uKHQsZSxuLHIsaSl7dmFyIG89Z3IoKTtyZXR1cm4gby5hc3luY0ZhY3Rvcnk9dCxvLmFzeW5jTWV0YT17ZGF0YTplLGNvbnRleHQ6bixjaGlsZHJlbjpyLHRhZzppfSxvfShsLG8sYSxzLGMpO289b3x8e30sRnQociksZShvLm1vZGVsKSYmZnVuY3Rpb24odCxuKXt2YXIgcj10Lm1vZGVsJiZ0Lm1vZGVsLnByb3B8fFwidmFsdWVcIixpPXQubW9kZWwmJnQubW9kZWwuZXZlbnR8fFwiaW5wdXRcIjsobi5wcm9wc3x8KG4ucHJvcHM9e30pKVtyXT1uLm1vZGVsLnZhbHVlO3ZhciBvPW4ub258fChuLm9uPXt9KTtlKG9baV0pP29baV09W24ubW9kZWwuY2FsbGJhY2tdLmNvbmNhdChvW2ldKTpvW2ldPW4ubW9kZWwuY2FsbGJhY2t9KHIub3B0aW9ucyxvKTt2YXIgZj1mdW5jdGlvbihuLHIsaSl7dmFyIG89ci5vcHRpb25zLnByb3BzO2lmKCF0KG8pKXt2YXIgYT17fSxzPW4uYXR0cnMsYz1uLnByb3BzO2lmKGUocyl8fGUoYykpZm9yKHZhciB1IGluIG8pe3ZhciBsPUhuKHUpO1EoYSxjLHUsbCwhMCl8fFEoYSxzLHUsbCwhMSl9cmV0dXJuIGF9fShvLHIpO2lmKG4oci5vcHRpb25zLmZ1bmN0aW9uYWwpKXJldHVybiBmdW5jdGlvbih0LG4scixpLG8pe3ZhciBhPXQub3B0aW9ucyxzPXt9LGM9YS5wcm9wcztpZihlKGMpKWZvcih2YXIgdSBpbiBjKXNbdV09SCh1LGMsbnx8am4pO2Vsc2UgZShyLmF0dHJzKSYmTHQocyxyLmF0dHJzKSxlKHIucHJvcHMpJiZMdChzLHIucHJvcHMpO3ZhciBsPW5ldyBJdChyLHMsbyxpLHQpLGY9YS5yZW5kZXIuY2FsbChudWxsLGwuX2MsbCk7cmV0dXJuIGYgaW5zdGFuY2VvZiBtciYmKGYuZm5Db250ZXh0PWksZi5mbk9wdGlvbnM9YSxyLnNsb3QmJigoZi5kYXRhfHwoZi5kYXRhPXt9KSkuc2xvdD1yLnNsb3QpKSxmfShyLGYsbyxhLHMpO3ZhciBwPW8ub247aWYoby5vbj1vLm5hdGl2ZU9uLG4oci5vcHRpb25zLmFic3RyYWN0KSl7dmFyIGQ9by5zbG90O289e30sZCYmKG8uc2xvdD1kKX0hZnVuY3Rpb24odCl7dC5ob29rfHwodC5ob29rPXt9KTtmb3IodmFyIGU9MDtlPEdyLmxlbmd0aDtlKyspe3ZhciBuPUdyW2VdLHI9dC5ob29rW25dLGk9V3Jbbl07dC5ob29rW25dPXI/ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24obixyLGksbyl7dChuLHIsaSxvKSxlKG4scixpLG8pfX0oaSxyKTppfX0obyk7dmFyIHY9ci5vcHRpb25zLm5hbWV8fGM7cmV0dXJuIG5ldyBtcihcInZ1ZS1jb21wb25lbnQtXCIrci5jaWQrKHY/XCItXCIrdjpcIlwiKSxvLHZvaWQgMCx2b2lkIDAsdm9pZCAwLGEse0N0b3I6cixwcm9wc0RhdGE6ZixsaXN0ZW5lcnM6cCx0YWc6YyxjaGlsZHJlbjpzfSxsKX19fWZ1bmN0aW9uIER0KHQsaSxvLGEscyxjKXtyZXR1cm4oQXJyYXkuaXNBcnJheShvKXx8cihvKSkmJihzPWEsYT1vLG89dm9pZCAwKSxuKGMpJiYocz1YciksZnVuY3Rpb24odCxuLGksbyxhKXtpZihlKGkpJiZlKGkuX19vYl9fKSlyZXR1cm4gZ3IoKTtlKGkpJiZlKGkuaXMpJiYobj1pLmlzKTtpZighbilyZXR1cm4gZ3IoKTtBcnJheS5pc0FycmF5KG8pJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBvWzBdJiYoKGk9aXx8e30pLnNjb3BlZFNsb3RzPXtkZWZhdWx0Om9bMF19LG8ubGVuZ3RoPTApO2E9PT1Ycj9vPWZ1bmN0aW9uKHQpe3JldHVybiByKHQpP1t4KHQpXTpBcnJheS5pc0FycmF5KHQpP2V0KHQpOnZvaWQgMH0obyk6YT09PVpyJiYobz1mdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKylpZihBcnJheS5pc0FycmF5KHRbZV0pKXJldHVybiBBcnJheS5wcm90b3R5cGUuY29uY2F0LmFwcGx5KFtdLHQpO3JldHVybiB0fShvKSk7dmFyIHMsYztpZihcInN0cmluZ1wiPT10eXBlb2Ygbil7dmFyIHU7Yz10LiR2bm9kZSYmdC4kdm5vZGUubnN8fEpuLmdldFRhZ05hbWVzcGFjZShuKSxzPUpuLmlzUmVzZXJ2ZWRUYWcobik/bmV3IG1yKEpuLnBhcnNlUGxhdGZvcm1UYWdOYW1lKG4pLGksbyx2b2lkIDAsdm9pZCAwLHQpOmUodT1SKHQuJG9wdGlvbnMsXCJjb21wb25lbnRzXCIsbikpP010KHUsaSx0LG8sbik6bmV3IG1yKG4saSxvLHZvaWQgMCx2b2lkIDAsdCl9ZWxzZSBzPU10KG4saSx0LG8pO3JldHVybiBlKHMpPyhjJiZQdChzLGMpLHMpOmdyKCl9KHQsaSxvLGEscyl9ZnVuY3Rpb24gUHQocixpLG8pe2lmKHIubnM9aSxcImZvcmVpZ25PYmplY3RcIj09PXIudGFnJiYoaT12b2lkIDAsbz0hMCksZShyLmNoaWxkcmVuKSlmb3IodmFyIGE9MCxzPXIuY2hpbGRyZW4ubGVuZ3RoO2E8czthKyspe3ZhciBjPXIuY2hpbGRyZW5bYV07ZShjLnRhZykmJih0KGMubnMpfHxuKG8pKSYmUHQoYyxpLG8pfX1mdW5jdGlvbiBGdCh0KXt2YXIgZT10Lm9wdGlvbnM7aWYodC5zdXBlcil7dmFyIG49RnQodC5zdXBlcik7aWYobiE9PXQuc3VwZXJPcHRpb25zKXt0LnN1cGVyT3B0aW9ucz1uO3ZhciByPWZ1bmN0aW9uKHQpe3ZhciBlLG49dC5vcHRpb25zLHI9dC5leHRlbmRPcHRpb25zLGk9dC5zZWFsZWRPcHRpb25zO2Zvcih2YXIgbyBpbiBuKW5bb10hPT1pW29dJiYoZXx8KGU9e30pLGVbb109ZnVuY3Rpb24odCxlLG4pe3tpZihBcnJheS5pc0FycmF5KHQpKXt2YXIgcj1bXTtuPUFycmF5LmlzQXJyYXkobik/bjpbbl0sZT1BcnJheS5pc0FycmF5KGUpP2U6W2VdO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKShlLmluZGV4T2YodFtpXSk+PTB8fG4uaW5kZXhPZih0W2ldKTwwKSYmci5wdXNoKHRbaV0pO3JldHVybiByfXJldHVybiB0fX0obltvXSxyW29dLGlbb10pKTtyZXR1cm4gZX0odCk7ciYmaCh0LmV4dGVuZE9wdGlvbnMsciksKGU9dC5vcHRpb25zPUYobix0LmV4dGVuZE9wdGlvbnMpKS5uYW1lJiYoZS5jb21wb25lbnRzW2UubmFtZV09dCl9fXJldHVybiBlfWZ1bmN0aW9uIFJ0KHQpe3RoaXMuX2luaXQodCl9ZnVuY3Rpb24gSHQodCl7dC5jaWQ9MDt2YXIgZT0xO3QuZXh0ZW5kPWZ1bmN0aW9uKHQpe3Q9dHx8e307dmFyIG49dGhpcyxyPW4uY2lkLGk9dC5fQ3Rvcnx8KHQuX0N0b3I9e30pO2lmKGlbcl0pcmV0dXJuIGlbcl07dmFyIG89dC5uYW1lfHxuLm9wdGlvbnMubmFtZSxhPWZ1bmN0aW9uKHQpe3RoaXMuX2luaXQodCl9O3JldHVybiBhLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG4ucHJvdG90eXBlKSxhLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hLGEuY2lkPWUrKyxhLm9wdGlvbnM9RihuLm9wdGlvbnMsdCksYS5zdXBlcj1uLGEub3B0aW9ucy5wcm9wcyYmZnVuY3Rpb24odCl7dmFyIGU9dC5vcHRpb25zLnByb3BzO2Zvcih2YXIgbiBpbiBlKW10KHQucHJvdG90eXBlLFwiX3Byb3BzXCIsbil9KGEpLGEub3B0aW9ucy5jb21wdXRlZCYmZnVuY3Rpb24odCl7dmFyIGU9dC5vcHRpb25zLmNvbXB1dGVkO2Zvcih2YXIgbiBpbiBlKWd0KHQucHJvdG90eXBlLG4sZVtuXSl9KGEpLGEuZXh0ZW5kPW4uZXh0ZW5kLGEubWl4aW49bi5taXhpbixhLnVzZT1uLnVzZSx6bi5mb3JFYWNoKGZ1bmN0aW9uKHQpe2FbdF09blt0XX0pLG8mJihhLm9wdGlvbnMuY29tcG9uZW50c1tvXT1hKSxhLnN1cGVyT3B0aW9ucz1uLm9wdGlvbnMsYS5leHRlbmRPcHRpb25zPXQsYS5zZWFsZWRPcHRpb25zPWgoe30sYS5vcHRpb25zKSxpW3JdPWEsYX19ZnVuY3Rpb24gQnQodCl7cmV0dXJuIHQmJih0LkN0b3Iub3B0aW9ucy5uYW1lfHx0LnRhZyl9ZnVuY3Rpb24gVXQodCxlKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT90LmluZGV4T2YoZSk+LTE6XCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5zcGxpdChcIixcIikuaW5kZXhPZihlKT4tMTohIWZ1bmN0aW9uKHQpe3JldHVyblwiW29iamVjdCBSZWdFeHBdXCI9PT1Obi5jYWxsKHQpfSh0KSYmdC50ZXN0KGUpfWZ1bmN0aW9uIFZ0KHQsZSl7dmFyIG49dC5jYWNoZSxyPXQua2V5cyxpPXQuX3Zub2RlO2Zvcih2YXIgbyBpbiBuKXt2YXIgYT1uW29dO2lmKGEpe3ZhciBzPUJ0KGEuY29tcG9uZW50T3B0aW9ucyk7cyYmIWUocykmJnp0KG4sbyxyLGkpfX19ZnVuY3Rpb24genQodCxlLG4scil7dmFyIGk9dFtlXTshaXx8ciYmaS50YWc9PT1yLnRhZ3x8aS5jb21wb25lbnRJbnN0YW5jZS4kZGVzdHJveSgpLHRbZV09bnVsbCxsKG4sZSl9ZnVuY3Rpb24gS3QodCl7Zm9yKHZhciBuPXQuZGF0YSxyPXQsaT10O2UoaS5jb21wb25lbnRJbnN0YW5jZSk7KShpPWkuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlKSYmaS5kYXRhJiYobj1KdChpLmRhdGEsbikpO2Zvcig7ZShyPXIucGFyZW50KTspciYmci5kYXRhJiYobj1KdChuLHIuZGF0YSkpO3JldHVybiBmdW5jdGlvbih0LG4pe2lmKGUodCl8fGUobikpcmV0dXJuIHF0KHQsV3QobikpO3JldHVyblwiXCJ9KG4uc3RhdGljQ2xhc3Msbi5jbGFzcyl9ZnVuY3Rpb24gSnQodCxuKXtyZXR1cm57c3RhdGljQ2xhc3M6cXQodC5zdGF0aWNDbGFzcyxuLnN0YXRpY0NsYXNzKSxjbGFzczplKHQuY2xhc3MpP1t0LmNsYXNzLG4uY2xhc3NdOm4uY2xhc3N9fWZ1bmN0aW9uIHF0KHQsZSl7cmV0dXJuIHQ/ZT90K1wiIFwiK2U6dDplfHxcIlwifWZ1bmN0aW9uIFd0KHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpP2Z1bmN0aW9uKHQpe2Zvcih2YXIgbixyPVwiXCIsaT0wLG89dC5sZW5ndGg7aTxvO2krKyllKG49V3QodFtpXSkpJiZcIlwiIT09biYmKHImJihyKz1cIiBcIikscis9bik7cmV0dXJuIHJ9KHQpOmkodCk/ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtmb3IodmFyIG4gaW4gdCl0W25dJiYoZSYmKGUrPVwiIFwiKSxlKz1uKTtyZXR1cm4gZX0odCk6XCJzdHJpbmdcIj09dHlwZW9mIHQ/dDpcIlwifWZ1bmN0aW9uIEd0KHQpe3JldHVybiBiaSh0KT9cInN2Z1wiOlwibWF0aFwiPT09dD9cIm1hdGhcIjp2b2lkIDB9ZnVuY3Rpb24gWnQodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe3ZhciBlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCk7cmV0dXJuIGV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIil9cmV0dXJuIHR9ZnVuY3Rpb24gWHQodCxlKXt2YXIgbj10LmRhdGEucmVmO2lmKG4pe3ZhciByPXQuY29udGV4dCxpPXQuY29tcG9uZW50SW5zdGFuY2V8fHQuZWxtLG89ci4kcmVmcztlP0FycmF5LmlzQXJyYXkob1tuXSk/bChvW25dLGkpOm9bbl09PT1pJiYob1tuXT12b2lkIDApOnQuZGF0YS5yZWZJbkZvcj9BcnJheS5pc0FycmF5KG9bbl0pP29bbl0uaW5kZXhPZihpKTwwJiZvW25dLnB1c2goaSk6b1tuXT1baV06b1tuXT1pfX1mdW5jdGlvbiBZdChyLGkpe3JldHVybiByLmtleT09PWkua2V5JiYoci50YWc9PT1pLnRhZyYmci5pc0NvbW1lbnQ9PT1pLmlzQ29tbWVudCYmZShyLmRhdGEpPT09ZShpLmRhdGEpJiZmdW5jdGlvbih0LG4pe2lmKFwiaW5wdXRcIiE9PXQudGFnKXJldHVybiEwO3ZhciByLGk9ZShyPXQuZGF0YSkmJmUocj1yLmF0dHJzKSYmci50eXBlLG89ZShyPW4uZGF0YSkmJmUocj1yLmF0dHJzKSYmci50eXBlO3JldHVybiBpPT09b3x8d2koaSkmJndpKG8pfShyLGkpfHxuKHIuaXNBc3luY1BsYWNlaG9sZGVyKSYmci5hc3luY0ZhY3Rvcnk9PT1pLmFzeW5jRmFjdG9yeSYmdChpLmFzeW5jRmFjdG9yeS5lcnJvcikpfWZ1bmN0aW9uIFF0KHQsbixyKXt2YXIgaSxvLGE9e307Zm9yKGk9bjtpPD1yOysraSllKG89dFtpXS5rZXkpJiYoYVtvXT1pKTtyZXR1cm4gYX1mdW5jdGlvbiB0ZSh0LGUpeyh0LmRhdGEuZGlyZWN0aXZlc3x8ZS5kYXRhLmRpcmVjdGl2ZXMpJiZmdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvPXQ9PT1BaSxhPWU9PT1BaSxzPWVlKHQuZGF0YS5kaXJlY3RpdmVzLHQuY29udGV4dCksYz1lZShlLmRhdGEuZGlyZWN0aXZlcyxlLmNvbnRleHQpLHU9W10sbD1bXTtmb3IobiBpbiBjKXI9c1tuXSxpPWNbbl0scj8oaS5vbGRWYWx1ZT1yLnZhbHVlLG5lKGksXCJ1cGRhdGVcIixlLHQpLGkuZGVmJiZpLmRlZi5jb21wb25lbnRVcGRhdGVkJiZsLnB1c2goaSkpOihuZShpLFwiYmluZFwiLGUsdCksaS5kZWYmJmkuZGVmLmluc2VydGVkJiZ1LnB1c2goaSkpO2lmKHUubGVuZ3RoKXt2YXIgZj1mdW5jdGlvbigpe2Zvcih2YXIgbj0wO248dS5sZW5ndGg7bisrKW5lKHVbbl0sXCJpbnNlcnRlZFwiLGUsdCl9O28/WShlLFwiaW5zZXJ0XCIsZik6ZigpfWwubGVuZ3RoJiZZKGUsXCJwb3N0cGF0Y2hcIixmdW5jdGlvbigpe2Zvcih2YXIgbj0wO248bC5sZW5ndGg7bisrKW5lKGxbbl0sXCJjb21wb25lbnRVcGRhdGVkXCIsZSx0KX0pO2lmKCFvKWZvcihuIGluIHMpY1tuXXx8bmUoc1tuXSxcInVuYmluZFwiLHQsdCxhKX0odCxlKX1mdW5jdGlvbiBlZSh0LGUpe3ZhciBuPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoIXQpcmV0dXJuIG47dmFyIHIsaTtmb3Iocj0wO3I8dC5sZW5ndGg7cisrKShpPXRbcl0pLm1vZGlmaWVyc3x8KGkubW9kaWZpZXJzPVRpKSxuW2Z1bmN0aW9uKHQpe3JldHVybiB0LnJhd05hbWV8fHQubmFtZStcIi5cIitPYmplY3Qua2V5cyh0Lm1vZGlmaWVyc3x8e30pLmpvaW4oXCIuXCIpfShpKV09aSxpLmRlZj1SKGUuJG9wdGlvbnMsXCJkaXJlY3RpdmVzXCIsaS5uYW1lKTtyZXR1cm4gbn1mdW5jdGlvbiBuZSh0LGUsbixyLGkpe3ZhciBvPXQuZGVmJiZ0LmRlZltlXTtpZihvKXRyeXtvKG4uZWxtLHQsbixyLGkpfWNhdGNoKHIpe1YocixuLmNvbnRleHQsXCJkaXJlY3RpdmUgXCIrdC5uYW1lK1wiIFwiK2UrXCIgaG9va1wiKX19ZnVuY3Rpb24gcmUobixyKXt2YXIgaT1yLmNvbXBvbmVudE9wdGlvbnM7aWYoIShlKGkpJiYhMT09PWkuQ3Rvci5vcHRpb25zLmluaGVyaXRBdHRyc3x8dChuLmRhdGEuYXR0cnMpJiZ0KHIuZGF0YS5hdHRycykpKXt2YXIgbyxhLHM9ci5lbG0sYz1uLmRhdGEuYXR0cnN8fHt9LHU9ci5kYXRhLmF0dHJzfHx7fTtlKHUuX19vYl9fKSYmKHU9ci5kYXRhLmF0dHJzPWgoe30sdSkpO2ZvcihvIGluIHUpYT11W29dLGNbb10hPT1hJiZpZShzLG8sYSk7KFFufHxlcikmJnUudmFsdWUhPT1jLnZhbHVlJiZpZShzLFwidmFsdWVcIix1LnZhbHVlKTtmb3IobyBpbiBjKXQodVtvXSkmJihoaShvKT9zLnJlbW92ZUF0dHJpYnV0ZU5TKHZpLG1pKG8pKTpwaShvKXx8cy5yZW1vdmVBdHRyaWJ1dGUobykpfX1mdW5jdGlvbiBpZSh0LGUsbil7aWYoZGkoZSkpeWkobik/dC5yZW1vdmVBdHRyaWJ1dGUoZSk6KG49XCJhbGxvd2Z1bGxzY3JlZW5cIj09PWUmJlwiRU1CRURcIj09PXQudGFnTmFtZT9cInRydWVcIjplLHQuc2V0QXR0cmlidXRlKGUsbikpO2Vsc2UgaWYocGkoZSkpdC5zZXRBdHRyaWJ1dGUoZSx5aShuKXx8XCJmYWxzZVwiPT09bj9cImZhbHNlXCI6XCJ0cnVlXCIpO2Vsc2UgaWYoaGkoZSkpeWkobik/dC5yZW1vdmVBdHRyaWJ1dGVOUyh2aSxtaShlKSk6dC5zZXRBdHRyaWJ1dGVOUyh2aSxlLG4pO2Vsc2UgaWYoeWkobikpdC5yZW1vdmVBdHRyaWJ1dGUoZSk7ZWxzZXtpZihRbiYmIXRyJiZcIlRFWFRBUkVBXCI9PT10LnRhZ05hbWUmJlwicGxhY2Vob2xkZXJcIj09PWUmJiF0Ll9faWVwaCl7dmFyIHI9ZnVuY3Rpb24oZSl7ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSx0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLHIpfTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLHIpLHQuX19pZXBoPSEwfXQuc2V0QXR0cmlidXRlKGUsbil9fWZ1bmN0aW9uIG9lKG4scil7dmFyIGk9ci5lbG0sbz1yLmRhdGEsYT1uLmRhdGE7aWYoISh0KG8uc3RhdGljQ2xhc3MpJiZ0KG8uY2xhc3MpJiYodChhKXx8dChhLnN0YXRpY0NsYXNzKSYmdChhLmNsYXNzKSkpKXt2YXIgcz1LdChyKSxjPWkuX3RyYW5zaXRpb25DbGFzc2VzO2UoYykmJihzPXF0KHMsV3QoYykpKSxzIT09aS5fcHJldkNsYXNzJiYoaS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLHMpLGkuX3ByZXZDbGFzcz1zKX19ZnVuY3Rpb24gYWUodCl7ZnVuY3Rpb24gZSgpeyhhfHwoYT1bXSkpLnB1c2godC5zbGljZSh2LGkpLnRyaW0oKSksdj1pKzF9dmFyIG4scixpLG8sYSxzPSExLGM9ITEsdT0hMSxsPSExLGY9MCxwPTAsZD0wLHY9MDtmb3IoaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHI9bixuPXQuY2hhckNvZGVBdChpKSxzKTM5PT09biYmOTIhPT1yJiYocz0hMSk7ZWxzZSBpZihjKTM0PT09biYmOTIhPT1yJiYoYz0hMSk7ZWxzZSBpZih1KTk2PT09biYmOTIhPT1yJiYodT0hMSk7ZWxzZSBpZihsKTQ3PT09biYmOTIhPT1yJiYobD0hMSk7ZWxzZSBpZigxMjQhPT1ufHwxMjQ9PT10LmNoYXJDb2RlQXQoaSsxKXx8MTI0PT09dC5jaGFyQ29kZUF0KGktMSl8fGZ8fHB8fGQpe3N3aXRjaChuKXtjYXNlIDM0OmM9ITA7YnJlYWs7Y2FzZSAzOTpzPSEwO2JyZWFrO2Nhc2UgOTY6dT0hMDticmVhaztjYXNlIDQwOmQrKzticmVhaztjYXNlIDQxOmQtLTticmVhaztjYXNlIDkxOnArKzticmVhaztjYXNlIDkzOnAtLTticmVhaztjYXNlIDEyMzpmKys7YnJlYWs7Y2FzZSAxMjU6Zi0tfWlmKDQ3PT09bil7Zm9yKHZhciBoPWktMSxtPXZvaWQgMDtoPj0wJiZcIiBcIj09PShtPXQuY2hhckF0KGgpKTtoLS0pO20mJklpLnRlc3QobSl8fChsPSEwKX19ZWxzZSB2b2lkIDA9PT1vPyh2PWkrMSxvPXQuc2xpY2UoMCxpKS50cmltKCkpOmUoKTtpZih2b2lkIDA9PT1vP289dC5zbGljZSgwLGkpLnRyaW0oKTowIT09diYmZSgpLGEpZm9yKGk9MDtpPGEubGVuZ3RoO2krKylvPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5pbmRleE9mKFwiKFwiKTt7aWYobjwwKXJldHVybidfZihcIicrZSsnXCIpKCcrdCtcIilcIjt2YXIgcj1lLnNsaWNlKDAsbiksaT1lLnNsaWNlKG4rMSk7cmV0dXJuJ19mKFwiJytyKydcIikoJyt0K1wiLFwiK2l9fShvLGFbaV0pO3JldHVybiBvfWZ1bmN0aW9uIHNlKHQpe2NvbnNvbGUuZXJyb3IoXCJbVnVlIGNvbXBpbGVyXTogXCIrdCl9ZnVuY3Rpb24gY2UodCxlKXtyZXR1cm4gdD90Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdFtlXX0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdH0pOltdfWZ1bmN0aW9uIHVlKHQsZSxuKXsodC5wcm9wc3x8KHQucHJvcHM9W10pKS5wdXNoKHtuYW1lOmUsdmFsdWU6bn0pLHQucGxhaW49ITF9ZnVuY3Rpb24gbGUodCxlLG4peyh0LmF0dHJzfHwodC5hdHRycz1bXSkpLnB1c2goe25hbWU6ZSx2YWx1ZTpufSksdC5wbGFpbj0hMX1mdW5jdGlvbiBmZSh0LGUsbil7dC5hdHRyc01hcFtlXT1uLHQuYXR0cnNMaXN0LnB1c2goe25hbWU6ZSx2YWx1ZTpufSl9ZnVuY3Rpb24gcGUodCxlLG4scixpLG8peyh0LmRpcmVjdGl2ZXN8fCh0LmRpcmVjdGl2ZXM9W10pKS5wdXNoKHtuYW1lOmUscmF3TmFtZTpuLHZhbHVlOnIsYXJnOmksbW9kaWZpZXJzOm99KSx0LnBsYWluPSExfWZ1bmN0aW9uIGRlKHQsZSxuLHIsaSxvKXsocj1yfHxqbikuY2FwdHVyZSYmKGRlbGV0ZSByLmNhcHR1cmUsZT1cIiFcIitlKSxyLm9uY2UmJihkZWxldGUgci5vbmNlLGU9XCJ+XCIrZSksci5wYXNzaXZlJiYoZGVsZXRlIHIucGFzc2l2ZSxlPVwiJlwiK2UpLFwiY2xpY2tcIj09PWUmJihyLnJpZ2h0PyhlPVwiY29udGV4dG1lbnVcIixkZWxldGUgci5yaWdodCk6ci5taWRkbGUmJihlPVwibW91c2V1cFwiKSk7dmFyIGE7ci5uYXRpdmU/KGRlbGV0ZSByLm5hdGl2ZSxhPXQubmF0aXZlRXZlbnRzfHwodC5uYXRpdmVFdmVudHM9e30pKTphPXQuZXZlbnRzfHwodC5ldmVudHM9e30pO3ZhciBzPXt2YWx1ZTpufTtyIT09am4mJihzLm1vZGlmaWVycz1yKTt2YXIgYz1hW2VdO0FycmF5LmlzQXJyYXkoYyk/aT9jLnVuc2hpZnQocyk6Yy5wdXNoKHMpOmFbZV09Yz9pP1tzLGNdOltjLHNdOnMsdC5wbGFpbj0hMX1mdW5jdGlvbiB2ZSh0LGUsbil7dmFyIHI9aGUodCxcIjpcIitlKXx8aGUodCxcInYtYmluZDpcIitlKTtpZihudWxsIT1yKXJldHVybiBhZShyKTtpZighMSE9PW4pe3ZhciBpPWhlKHQsZSk7aWYobnVsbCE9aSlyZXR1cm4gSlNPTi5zdHJpbmdpZnkoaSl9fWZ1bmN0aW9uIGhlKHQsZSxuKXt2YXIgcjtpZihudWxsIT0ocj10LmF0dHJzTWFwW2VdKSlmb3IodmFyIGk9dC5hdHRyc0xpc3Qsbz0wLGE9aS5sZW5ndGg7bzxhO28rKylpZihpW29dLm5hbWU9PT1lKXtpLnNwbGljZShvLDEpO2JyZWFrfXJldHVybiBuJiZkZWxldGUgdC5hdHRyc01hcFtlXSxyfWZ1bmN0aW9uIG1lKHQsZSxuKXt2YXIgcj1ufHx7fSxpPVwiJCR2XCI7ci50cmltJiYoaT1cIih0eXBlb2YgJCR2ID09PSAnc3RyaW5nJz8gJCR2LnRyaW0oKTogJCR2KVwiKSxyLm51bWJlciYmKGk9XCJfbihcIitpK1wiKVwiKTt2YXIgbz15ZShlLGkpO3QubW9kZWw9e3ZhbHVlOlwiKFwiK2UrXCIpXCIsZXhwcmVzc2lvbjonXCInK2UrJ1wiJyxjYWxsYmFjazpcImZ1bmN0aW9uICgkJHYpIHtcIitvK1wifVwifX1mdW5jdGlvbiB5ZSh0LGUpe3ZhciBuPWZ1bmN0aW9uKHQpe2lmKGVpPXQubGVuZ3RoLHQuaW5kZXhPZihcIltcIik8MHx8dC5sYXN0SW5kZXhPZihcIl1cIik8ZWktMSlyZXR1cm4oaWk9dC5sYXN0SW5kZXhPZihcIi5cIikpPi0xP3tleHA6dC5zbGljZSgwLGlpKSxrZXk6J1wiJyt0LnNsaWNlKGlpKzEpKydcIid9OntleHA6dCxrZXk6bnVsbH07bmk9dCxpaT1vaT1haT0wO2Zvcig7IV9lKCk7KWJlKHJpPWdlKCkpPyRlKHJpKTo5MT09PXJpJiZmdW5jdGlvbih0KXt2YXIgZT0xO29pPWlpO2Zvcig7IV9lKCk7KWlmKHQ9Z2UoKSxiZSh0KSkkZSh0KTtlbHNlIGlmKDkxPT09dCYmZSsrLDkzPT09dCYmZS0tLDA9PT1lKXthaT1paTticmVha319KHJpKTtyZXR1cm57ZXhwOnQuc2xpY2UoMCxvaSksa2V5OnQuc2xpY2Uob2krMSxhaSl9fSh0KTtyZXR1cm4gbnVsbD09PW4ua2V5P3QrXCI9XCIrZTpcIiRzZXQoXCIrbi5leHArXCIsIFwiK24ua2V5K1wiLCBcIitlK1wiKVwifWZ1bmN0aW9uIGdlKCl7cmV0dXJuIG5pLmNoYXJDb2RlQXQoKytpaSl9ZnVuY3Rpb24gX2UoKXtyZXR1cm4gaWk+PWVpfWZ1bmN0aW9uIGJlKHQpe3JldHVybiAzND09PXR8fDM5PT09dH1mdW5jdGlvbiAkZSh0KXtmb3IodmFyIGU9dDshX2UoKSYmKHQ9Z2UoKSkhPT1lOyk7fWZ1bmN0aW9uIENlKHQsZSxuLHIsaSl7ZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5fd2l0aFRhc2t8fCh0Ll93aXRoVGFzaz1mdW5jdGlvbigpe0VyPSEwO3ZhciBlPXQuYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiBFcj0hMSxlfSl9KGUpLG4mJihlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1zaTtyZXR1cm4gZnVuY3Rpb24gaSgpe251bGwhPT10LmFwcGx5KG51bGwsYXJndW1lbnRzKSYmd2UoZSxpLG4scil9fShlLHQscikpLHNpLmFkZEV2ZW50TGlzdGVuZXIodCxlLG9yP3tjYXB0dXJlOnIscGFzc2l2ZTppfTpyKX1mdW5jdGlvbiB3ZSh0LGUsbixyKXsocnx8c2kpLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxlLl93aXRoVGFza3x8ZSxuKX1mdW5jdGlvbiB4ZShuLHIpe2lmKCF0KG4uZGF0YS5vbil8fCF0KHIuZGF0YS5vbikpe3ZhciBpPXIuZGF0YS5vbnx8e30sbz1uLmRhdGEub258fHt9O3NpPXIuZWxtLGZ1bmN0aW9uKHQpe2lmKGUodFtMaV0pKXt2YXIgbj1Rbj9cImNoYW5nZVwiOlwiaW5wdXRcIjt0W25dPVtdLmNvbmNhdCh0W0xpXSx0W25dfHxbXSksZGVsZXRlIHRbTGldfWUodFtNaV0pJiYodC5jaGFuZ2U9W10uY29uY2F0KHRbTWldLHQuY2hhbmdlfHxbXSksZGVsZXRlIHRbTWldKX0oaSksWChpLG8sQ2Usd2Usci5jb250ZXh0KSxzaT12b2lkIDB9fWZ1bmN0aW9uIGtlKG4scil7aWYoIXQobi5kYXRhLmRvbVByb3BzKXx8IXQoci5kYXRhLmRvbVByb3BzKSl7dmFyIGksbyxhPXIuZWxtLHM9bi5kYXRhLmRvbVByb3BzfHx7fSx1PXIuZGF0YS5kb21Qcm9wc3x8e307ZSh1Ll9fb2JfXykmJih1PXIuZGF0YS5kb21Qcm9wcz1oKHt9LHUpKTtmb3IoaSBpbiBzKXQodVtpXSkmJihhW2ldPVwiXCIpO2ZvcihpIGluIHUpe2lmKG89dVtpXSxcInRleHRDb250ZW50XCI9PT1pfHxcImlubmVySFRNTFwiPT09aSl7aWYoci5jaGlsZHJlbiYmKHIuY2hpbGRyZW4ubGVuZ3RoPTApLG89PT1zW2ldKWNvbnRpbnVlOzE9PT1hLmNoaWxkTm9kZXMubGVuZ3RoJiZhLnJlbW92ZUNoaWxkKGEuY2hpbGROb2Rlc1swXSl9aWYoXCJ2YWx1ZVwiPT09aSl7YS5fdmFsdWU9bzt2YXIgbD10KG8pP1wiXCI6U3RyaW5nKG8pOyhmdW5jdGlvbih0LG4pe3JldHVybiF0LmNvbXBvc2luZyYmKFwiT1BUSU9OXCI9PT10LnRhZ05hbWV8fGZ1bmN0aW9uKHQsZSl7dmFyIG49ITA7dHJ5e249ZG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PXR9Y2F0Y2godCl7fXJldHVybiBuJiZ0LnZhbHVlIT09ZX0odCxuKXx8ZnVuY3Rpb24odCxuKXt2YXIgcj10LnZhbHVlLGk9dC5fdk1vZGlmaWVycztpZihlKGkpKXtpZihpLmxhenkpcmV0dXJuITE7aWYoaS5udW1iZXIpcmV0dXJuIGMocikhPT1jKG4pO2lmKGkudHJpbSlyZXR1cm4gci50cmltKCkhPT1uLnRyaW0oKX1yZXR1cm4gciE9PW59KHQsbikpfSkoYSxsKSYmKGEudmFsdWU9bCl9ZWxzZSBhW2ldPW99fX1mdW5jdGlvbiBBZSh0KXt2YXIgZT1PZSh0LnN0eWxlKTtyZXR1cm4gdC5zdGF0aWNTdHlsZT9oKHQuc3RhdGljU3R5bGUsZSk6ZX1mdW5jdGlvbiBPZSh0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT9tKHQpOlwic3RyaW5nXCI9PXR5cGVvZiB0P0ZpKHQpOnR9ZnVuY3Rpb24gU2UobixyKXt2YXIgaT1yLmRhdGEsbz1uLmRhdGE7aWYoISh0KGkuc3RhdGljU3R5bGUpJiZ0KGkuc3R5bGUpJiZ0KG8uc3RhdGljU3R5bGUpJiZ0KG8uc3R5bGUpKSl7dmFyIGEscyxjPXIuZWxtLHU9by5zdGF0aWNTdHlsZSxsPW8ubm9ybWFsaXplZFN0eWxlfHxvLnN0eWxlfHx7fSxmPXV8fGwscD1PZShyLmRhdGEuc3R5bGUpfHx7fTtyLmRhdGEubm9ybWFsaXplZFN0eWxlPWUocC5fX29iX18pP2goe30scCk6cDt2YXIgZD1mdW5jdGlvbih0LGUpe3ZhciBuLHI9e307aWYoZSlmb3IodmFyIGk9dDtpLmNvbXBvbmVudEluc3RhbmNlOykoaT1pLmNvbXBvbmVudEluc3RhbmNlLl92bm9kZSkmJmkuZGF0YSYmKG49QWUoaS5kYXRhKSkmJmgocixuKTsobj1BZSh0LmRhdGEpKSYmaChyLG4pO2Zvcih2YXIgbz10O289by5wYXJlbnQ7KW8uZGF0YSYmKG49QWUoby5kYXRhKSkmJmgocixuKTtyZXR1cm4gcn0ociwhMCk7Zm9yKHMgaW4gZil0KGRbc10pJiZCaShjLHMsXCJcIik7Zm9yKHMgaW4gZCkoYT1kW3NdKSE9PWZbc10mJkJpKGMscyxudWxsPT1hP1wiXCI6YSl9fWZ1bmN0aW9uIFRlKHQsZSl7aWYoZSYmKGU9ZS50cmltKCkpKWlmKHQuY2xhc3NMaXN0KWUuaW5kZXhPZihcIiBcIik+LTE/ZS5zcGxpdCgvXFxzKy8pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2xhc3NMaXN0LmFkZChlKX0pOnQuY2xhc3NMaXN0LmFkZChlKTtlbHNle3ZhciBuPVwiIFwiKyh0LmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKStcIiBcIjtuLmluZGV4T2YoXCIgXCIrZStcIiBcIik8MCYmdC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLChuK2UpLnRyaW0oKSl9fWZ1bmN0aW9uIEVlKHQsZSl7aWYoZSYmKGU9ZS50cmltKCkpKWlmKHQuY2xhc3NMaXN0KWUuaW5kZXhPZihcIiBcIik+LTE/ZS5zcGxpdCgvXFxzKy8pLmZvckVhY2goZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2xhc3NMaXN0LnJlbW92ZShlKX0pOnQuY2xhc3NMaXN0LnJlbW92ZShlKSx0LmNsYXNzTGlzdC5sZW5ndGh8fHQucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIik7ZWxzZXtmb3IodmFyIG49XCIgXCIrKHQuZ2V0QXR0cmlidXRlKFwiY2xhc3NcIil8fFwiXCIpK1wiIFwiLHI9XCIgXCIrZStcIiBcIjtuLmluZGV4T2Yocik+PTA7KW49bi5yZXBsYWNlKHIsXCIgXCIpOyhuPW4udHJpbSgpKT90LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsbik6dC5yZW1vdmVBdHRyaWJ1dGUoXCJjbGFzc1wiKX19ZnVuY3Rpb24gamUodCl7aWYodCl7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQpe3ZhciBlPXt9O3JldHVybiExIT09dC5jc3MmJmgoZSxLaSh0Lm5hbWV8fFwidlwiKSksaChlLHQpLGV9cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/S2kodCk6dm9pZCAwfX1mdW5jdGlvbiBOZSh0KXtRaShmdW5jdGlvbigpe1FpKHQpfSl9ZnVuY3Rpb24gSWUodCxlKXt2YXIgbj10Ll90cmFuc2l0aW9uQ2xhc3Nlc3x8KHQuX3RyYW5zaXRpb25DbGFzc2VzPVtdKTtuLmluZGV4T2YoZSk8MCYmKG4ucHVzaChlKSxUZSh0LGUpKX1mdW5jdGlvbiBMZSh0LGUpe3QuX3RyYW5zaXRpb25DbGFzc2VzJiZsKHQuX3RyYW5zaXRpb25DbGFzc2VzLGUpLEVlKHQsZSl9ZnVuY3Rpb24gTWUodCxlLG4pe3ZhciByPURlKHQsZSksaT1yLnR5cGUsbz1yLnRpbWVvdXQsYT1yLnByb3BDb3VudDtpZighaSlyZXR1cm4gbigpO3ZhciBzPWk9PT1xaT9aaTpZaSxjPTAsdT1mdW5jdGlvbigpe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihzLGwpLG4oKX0sbD1mdW5jdGlvbihlKXtlLnRhcmdldD09PXQmJisrYz49YSYmdSgpfTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YzxhJiZ1KCl9LG8rMSksdC5hZGRFdmVudExpc3RlbmVyKHMsbCl9ZnVuY3Rpb24gRGUodCxlKXt2YXIgbixyPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpLGk9cltHaStcIkRlbGF5XCJdLnNwbGl0KFwiLCBcIiksbz1yW0dpK1wiRHVyYXRpb25cIl0uc3BsaXQoXCIsIFwiKSxhPVBlKGksbykscz1yW1hpK1wiRGVsYXlcIl0uc3BsaXQoXCIsIFwiKSxjPXJbWGkrXCJEdXJhdGlvblwiXS5zcGxpdChcIiwgXCIpLHU9UGUocyxjKSxsPTAsZj0wO2U9PT1xaT9hPjAmJihuPXFpLGw9YSxmPW8ubGVuZ3RoKTplPT09V2k/dT4wJiYobj1XaSxsPXUsZj1jLmxlbmd0aCk6Zj0obj0obD1NYXRoLm1heChhLHUpKT4wP2E+dT9xaTpXaTpudWxsKT9uPT09cWk/by5sZW5ndGg6Yy5sZW5ndGg6MDtyZXR1cm57dHlwZTpuLHRpbWVvdXQ6bCxwcm9wQ291bnQ6ZixoYXNUcmFuc2Zvcm06bj09PXFpJiZ0by50ZXN0KHJbR2krXCJQcm9wZXJ0eVwiXSl9fWZ1bmN0aW9uIFBlKHQsZSl7Zm9yKDt0Lmxlbmd0aDxlLmxlbmd0aDspdD10LmNvbmNhdCh0KTtyZXR1cm4gTWF0aC5tYXguYXBwbHkobnVsbCxlLm1hcChmdW5jdGlvbihlLG4pe3JldHVybiBGZShlKStGZSh0W25dKX0pKX1mdW5jdGlvbiBGZSh0KXtyZXR1cm4gMWUzKk51bWJlcih0LnNsaWNlKDAsLTEpKX1mdW5jdGlvbiBSZShuLHIpe3ZhciBvPW4uZWxtO2Uoby5fbGVhdmVDYikmJihvLl9sZWF2ZUNiLmNhbmNlbGxlZD0hMCxvLl9sZWF2ZUNiKCkpO3ZhciBhPWplKG4uZGF0YS50cmFuc2l0aW9uKTtpZighdChhKSYmIWUoby5fZW50ZXJDYikmJjE9PT1vLm5vZGVUeXBlKXtmb3IodmFyIHM9YS5jc3MsdT1hLnR5cGUsbD1hLmVudGVyQ2xhc3MsZj1hLmVudGVyVG9DbGFzcyxwPWEuZW50ZXJBY3RpdmVDbGFzcyxkPWEuYXBwZWFyQ2xhc3Msdj1hLmFwcGVhclRvQ2xhc3MsaD1hLmFwcGVhckFjdGl2ZUNsYXNzLG09YS5iZWZvcmVFbnRlcix5PWEuZW50ZXIsZz1hLmFmdGVyRW50ZXIsXz1hLmVudGVyQ2FuY2VsbGVkLCQ9YS5iZWZvcmVBcHBlYXIsQz1hLmFwcGVhcix3PWEuYWZ0ZXJBcHBlYXIseD1hLmFwcGVhckNhbmNlbGxlZCxrPWEuZHVyYXRpb24sQT1QcixPPVByLiR2bm9kZTtPJiZPLnBhcmVudDspQT0oTz1PLnBhcmVudCkuY29udGV4dDt2YXIgUz0hQS5faXNNb3VudGVkfHwhbi5pc1Jvb3RJbnNlcnQ7aWYoIVN8fEN8fFwiXCI9PT1DKXt2YXIgVD1TJiZkP2Q6bCxFPVMmJmg/aDpwLGo9UyYmdj92OmYsTj1TPyR8fG06bSxJPVMmJlwiZnVuY3Rpb25cIj09dHlwZW9mIEM/Qzp5LEw9Uz93fHxnOmcsTT1TP3h8fF86XyxEPWMoaShrKT9rLmVudGVyOmspLFA9ITEhPT1zJiYhdHIsRj1VZShJKSxSPW8uX2VudGVyQ2I9YihmdW5jdGlvbigpe1AmJihMZShvLGopLExlKG8sRSkpLFIuY2FuY2VsbGVkPyhQJiZMZShvLFQpLE0mJk0obykpOkwmJkwobyksby5fZW50ZXJDYj1udWxsfSk7bi5kYXRhLnNob3d8fFkobixcImluc2VydFwiLGZ1bmN0aW9uKCl7dmFyIHQ9by5wYXJlbnROb2RlLGU9dCYmdC5fcGVuZGluZyYmdC5fcGVuZGluZ1tuLmtleV07ZSYmZS50YWc9PT1uLnRhZyYmZS5lbG0uX2xlYXZlQ2ImJmUuZWxtLl9sZWF2ZUNiKCksSSYmSShvLFIpfSksTiYmTihvKSxQJiYoSWUobyxUKSxJZShvLEUpLE5lKGZ1bmN0aW9uKCl7SWUobyxqKSxMZShvLFQpLFIuY2FuY2VsbGVkfHxGfHwoQmUoRCk/c2V0VGltZW91dChSLEQpOk1lKG8sdSxSKSl9KSksbi5kYXRhLnNob3cmJihyJiZyKCksSSYmSShvLFIpKSxQfHxGfHxSKCl9fX1mdW5jdGlvbiBIZShuLHIpe2Z1bmN0aW9uIG8oKXt4LmNhbmNlbGxlZHx8KG4uZGF0YS5zaG93fHwoKGEucGFyZW50Tm9kZS5fcGVuZGluZ3x8KGEucGFyZW50Tm9kZS5fcGVuZGluZz17fSkpW24ua2V5XT1uKSx2JiZ2KGEpLCQmJihJZShhLGYpLEllKGEsZCksTmUoZnVuY3Rpb24oKXtJZShhLHApLExlKGEsZikseC5jYW5jZWxsZWR8fEN8fChCZSh3KT9zZXRUaW1lb3V0KHgsdyk6TWUoYSxsLHgpKX0pKSxoJiZoKGEseCksJHx8Q3x8eCgpKX12YXIgYT1uLmVsbTtlKGEuX2VudGVyQ2IpJiYoYS5fZW50ZXJDYi5jYW5jZWxsZWQ9ITAsYS5fZW50ZXJDYigpKTt2YXIgcz1qZShuLmRhdGEudHJhbnNpdGlvbik7aWYodChzKXx8MSE9PWEubm9kZVR5cGUpcmV0dXJuIHIoKTtpZighZShhLl9sZWF2ZUNiKSl7dmFyIHU9cy5jc3MsbD1zLnR5cGUsZj1zLmxlYXZlQ2xhc3MscD1zLmxlYXZlVG9DbGFzcyxkPXMubGVhdmVBY3RpdmVDbGFzcyx2PXMuYmVmb3JlTGVhdmUsaD1zLmxlYXZlLG09cy5hZnRlckxlYXZlLHk9cy5sZWF2ZUNhbmNlbGxlZCxnPXMuZGVsYXlMZWF2ZSxfPXMuZHVyYXRpb24sJD0hMSE9PXUmJiF0cixDPVVlKGgpLHc9YyhpKF8pP18ubGVhdmU6XykseD1hLl9sZWF2ZUNiPWIoZnVuY3Rpb24oKXthLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5fcGVuZGluZyYmKGEucGFyZW50Tm9kZS5fcGVuZGluZ1tuLmtleV09bnVsbCksJCYmKExlKGEscCksTGUoYSxkKSkseC5jYW5jZWxsZWQ/KCQmJkxlKGEsZikseSYmeShhKSk6KHIoKSxtJiZtKGEpKSxhLl9sZWF2ZUNiPW51bGx9KTtnP2cobyk6bygpfX1mdW5jdGlvbiBCZSh0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmIWlzTmFOKHQpfWZ1bmN0aW9uIFVlKG4pe2lmKHQobikpcmV0dXJuITE7dmFyIHI9bi5mbnM7cmV0dXJuIGUocik/VWUoQXJyYXkuaXNBcnJheShyKT9yWzBdOnIpOihuLl9sZW5ndGh8fG4ubGVuZ3RoKT4xfWZ1bmN0aW9uIFZlKHQsZSl7ITAhPT1lLmRhdGEuc2hvdyYmUmUoZSl9ZnVuY3Rpb24gemUodCxlLG4pe0tlKHQsZSxuKSwoUW58fGVyKSYmc2V0VGltZW91dChmdW5jdGlvbigpe0tlKHQsZSxuKX0sMCl9ZnVuY3Rpb24gS2UodCxlLG4pe3ZhciByPWUudmFsdWUsaT10Lm11bHRpcGxlO2lmKCFpfHxBcnJheS5pc0FycmF5KHIpKXtmb3IodmFyIG8sYSxzPTAsYz10Lm9wdGlvbnMubGVuZ3RoO3M8YztzKyspaWYoYT10Lm9wdGlvbnNbc10saSlvPV8ocixxZShhKSk+LTEsYS5zZWxlY3RlZCE9PW8mJihhLnNlbGVjdGVkPW8pO2Vsc2UgaWYoZyhxZShhKSxyKSlyZXR1cm4gdm9pZCh0LnNlbGVjdGVkSW5kZXghPT1zJiYodC5zZWxlY3RlZEluZGV4PXMpKTtpfHwodC5zZWxlY3RlZEluZGV4PS0xKX19ZnVuY3Rpb24gSmUodCxlKXtyZXR1cm4gZS5ldmVyeShmdW5jdGlvbihlKXtyZXR1cm4hZyhlLHQpfSl9ZnVuY3Rpb24gcWUodCl7cmV0dXJuXCJfdmFsdWVcImluIHQ/dC5fdmFsdWU6dC52YWx1ZX1mdW5jdGlvbiBXZSh0KXt0LnRhcmdldC5jb21wb3Npbmc9ITB9ZnVuY3Rpb24gR2UodCl7dC50YXJnZXQuY29tcG9zaW5nJiYodC50YXJnZXQuY29tcG9zaW5nPSExLFplKHQudGFyZ2V0LFwiaW5wdXRcIikpfWZ1bmN0aW9uIFplKHQsZSl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJIVE1MRXZlbnRzXCIpO24uaW5pdEV2ZW50KGUsITAsITApLHQuZGlzcGF0Y2hFdmVudChuKX1mdW5jdGlvbiBYZSh0KXtyZXR1cm4hdC5jb21wb25lbnRJbnN0YW5jZXx8dC5kYXRhJiZ0LmRhdGEudHJhbnNpdGlvbj90OlhlKHQuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlKX1mdW5jdGlvbiBZZSh0KXt2YXIgZT10JiZ0LmNvbXBvbmVudE9wdGlvbnM7cmV0dXJuIGUmJmUuQ3Rvci5vcHRpb25zLmFic3RyYWN0P1llKGl0KGUuY2hpbGRyZW4pKTp0fWZ1bmN0aW9uIFFlKHQpe3ZhciBlPXt9LG49dC4kb3B0aW9ucztmb3IodmFyIHIgaW4gbi5wcm9wc0RhdGEpZVtyXT10W3JdO3ZhciBpPW4uX3BhcmVudExpc3RlbmVycztmb3IodmFyIG8gaW4gaSllW1BuKG8pXT1pW29dO3JldHVybiBlfWZ1bmN0aW9uIHRuKHQsZSl7aWYoL1xcZC1rZWVwLWFsaXZlJC8udGVzdChlLnRhZykpcmV0dXJuIHQoXCJrZWVwLWFsaXZlXCIse3Byb3BzOmUuY29tcG9uZW50T3B0aW9ucy5wcm9wc0RhdGF9KX1mdW5jdGlvbiBlbih0KXt0LmVsbS5fbW92ZUNiJiZ0LmVsbS5fbW92ZUNiKCksdC5lbG0uX2VudGVyQ2ImJnQuZWxtLl9lbnRlckNiKCl9ZnVuY3Rpb24gbm4odCl7dC5kYXRhLm5ld1Bvcz10LmVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKX1mdW5jdGlvbiBybih0KXt2YXIgZT10LmRhdGEucG9zLG49dC5kYXRhLm5ld1BvcyxyPWUubGVmdC1uLmxlZnQsaT1lLnRvcC1uLnRvcDtpZihyfHxpKXt0LmRhdGEubW92ZWQ9ITA7dmFyIG89dC5lbG0uc3R5bGU7by50cmFuc2Zvcm09by5XZWJraXRUcmFuc2Zvcm09XCJ0cmFuc2xhdGUoXCIrcitcInB4LFwiK2krXCJweClcIixvLnRyYW5zaXRpb25EdXJhdGlvbj1cIjBzXCJ9fWZ1bmN0aW9uIG9uKHQsZSl7dmFyIG49ZT96bzpWbztyZXR1cm4gdC5yZXBsYWNlKG4sZnVuY3Rpb24odCl7cmV0dXJuIFVvW3RdfSl9ZnVuY3Rpb24gYW4odCxlLG4pe3JldHVybnt0eXBlOjEsdGFnOnQsYXR0cnNMaXN0OmUsYXR0cnNNYXA6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXt9LG49MCxyPXQubGVuZ3RoO248cjtuKyspZVt0W25dLm5hbWVdPXRbbl0udmFsdWU7cmV0dXJuIGV9KGUpLHBhcmVudDpuLGNoaWxkcmVuOltdfX1mdW5jdGlvbiBzbih0LGUpe2Z1bmN0aW9uIG4odCl7dC5wcmUmJihzPSExKSxMbyh0LnRhZykmJihjPSExKTtmb3IodmFyIG49MDtuPElvLmxlbmd0aDtuKyspSW9bbl0odCxlKX1Ubz1lLndhcm58fHNlLExvPWUuaXNQcmVUYWd8fEJuLE1vPWUubXVzdFVzZVByb3B8fEJuLERvPWUuZ2V0VGFnTmFtZXNwYWNlfHxCbixqbz1jZShlLm1vZHVsZXMsXCJ0cmFuc2Zvcm1Ob2RlXCIpLE5vPWNlKGUubW9kdWxlcyxcInByZVRyYW5zZm9ybU5vZGVcIiksSW89Y2UoZS5tb2R1bGVzLFwicG9zdFRyYW5zZm9ybU5vZGVcIiksRW89ZS5kZWxpbWl0ZXJzO3ZhciByLGksbz1bXSxhPSExIT09ZS5wcmVzZXJ2ZVdoaXRlc3BhY2Uscz0hMSxjPSExO3JldHVybiBmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oZSl7bCs9ZSx0PXQuc3Vic3RyaW5nKGUpfWZ1bmN0aW9uIHIodCxuLHIpe3ZhciBpLHM7aWYobnVsbD09biYmKG49bCksbnVsbD09ciYmKHI9bCksdCYmKHM9dC50b0xvd2VyQ2FzZSgpKSx0KWZvcihpPWEubGVuZ3RoLTE7aT49MCYmYVtpXS5sb3dlckNhc2VkVGFnIT09cztpLS0pO2Vsc2UgaT0wO2lmKGk+PTApe2Zvcih2YXIgYz1hLmxlbmd0aC0xO2M+PWk7Yy0tKWUuZW5kJiZlLmVuZChhW2NdLnRhZyxuLHIpO2EubGVuZ3RoPWksbz1pJiZhW2ktMV0udGFnfWVsc2VcImJyXCI9PT1zP2Uuc3RhcnQmJmUuc3RhcnQodCxbXSwhMCxuLHIpOlwicFwiPT09cyYmKGUuc3RhcnQmJmUuc3RhcnQodCxbXSwhMSxuLHIpLGUuZW5kJiZlLmVuZCh0LG4scikpfWZvcih2YXIgaSxvLGE9W10scz1lLmV4cGVjdEhUTUwsYz1lLmlzVW5hcnlUYWd8fEJuLHU9ZS5jYW5CZUxlZnRPcGVuVGFnfHxCbixsPTA7dDspe2lmKGk9dCxvJiZIbyhvKSl7dmFyIGY9MCxwPW8udG9Mb3dlckNhc2UoKSxkPUJvW3BdfHwoQm9bcF09bmV3IFJlZ0V4cChcIihbXFxcXHNcXFxcU10qPykoPC9cIitwK1wiW14+XSo+KVwiLFwiaVwiKSksdj10LnJlcGxhY2UoZCxmdW5jdGlvbih0LG4scil7cmV0dXJuIGY9ci5sZW5ndGgsSG8ocCl8fFwibm9zY3JpcHRcIj09PXB8fChuPW4ucmVwbGFjZSgvPCEtLShbXFxzXFxTXSo/KS0tPi9nLFwiJDFcIikucmVwbGFjZSgvPCFcXFtDREFUQVxcWyhbXFxzXFxTXSo/KV1dPi9nLFwiJDFcIikpLEpvKHAsbikmJihuPW4uc2xpY2UoMSkpLGUuY2hhcnMmJmUuY2hhcnMobiksXCJcIn0pO2wrPXQubGVuZ3RoLXYubGVuZ3RoLHQ9dixyKHAsbC1mLGwpfWVsc2V7dmFyIGg9dC5pbmRleE9mKFwiPFwiKTtpZigwPT09aCl7aWYoQW8udGVzdCh0KSl7dmFyIG09dC5pbmRleE9mKFwiLS1cXHgzZVwiKTtpZihtPj0wKXtlLnNob3VsZEtlZXBDb21tZW50JiZlLmNvbW1lbnQodC5zdWJzdHJpbmcoNCxtKSksbihtKzMpO2NvbnRpbnVlfX1pZihPby50ZXN0KHQpKXt2YXIgeT10LmluZGV4T2YoXCJdPlwiKTtpZih5Pj0wKXtuKHkrMik7Y29udGludWV9fXZhciBnPXQubWF0Y2goa28pO2lmKGcpe24oZ1swXS5sZW5ndGgpO2NvbnRpbnVlfXZhciBfPXQubWF0Y2goeG8pO2lmKF8pe3ZhciBiPWw7bihfWzBdLmxlbmd0aCkscihfWzFdLGIsbCk7Y29udGludWV9dmFyICQ9ZnVuY3Rpb24oKXt2YXIgZT10Lm1hdGNoKENvKTtpZihlKXt2YXIgcj17dGFnTmFtZTplWzFdLGF0dHJzOltdLHN0YXJ0Omx9O24oZVswXS5sZW5ndGgpO2Zvcih2YXIgaSxvOyEoaT10Lm1hdGNoKHdvKSkmJihvPXQubWF0Y2goX28pKTspbihvWzBdLmxlbmd0aCksci5hdHRycy5wdXNoKG8pO2lmKGkpcmV0dXJuIHIudW5hcnlTbGFzaD1pWzFdLG4oaVswXS5sZW5ndGgpLHIuZW5kPWwscn19KCk7aWYoJCl7IWZ1bmN0aW9uKHQpe3ZhciBuPXQudGFnTmFtZSxpPXQudW5hcnlTbGFzaDtzJiYoXCJwXCI9PT1vJiZnbyhuKSYmcihvKSx1KG4pJiZvPT09biYmcihuKSk7Zm9yKHZhciBsPWMobil8fCEhaSxmPXQuYXR0cnMubGVuZ3RoLHA9bmV3IEFycmF5KGYpLGQ9MDtkPGY7ZCsrKXt2YXIgdj10LmF0dHJzW2RdO1NvJiYtMT09PXZbMF0uaW5kZXhPZignXCJcIicpJiYoXCJcIj09PXZbM10mJmRlbGV0ZSB2WzNdLFwiXCI9PT12WzRdJiZkZWxldGUgdls0XSxcIlwiPT09dls1XSYmZGVsZXRlIHZbNV0pO3ZhciBoPXZbM118fHZbNF18fHZbNV18fFwiXCIsbT1cImFcIj09PW4mJlwiaHJlZlwiPT09dlsxXT9lLnNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZjplLnNob3VsZERlY29kZU5ld2xpbmVzO3BbZF09e25hbWU6dlsxXSx2YWx1ZTpvbihoLG0pfX1sfHwoYS5wdXNoKHt0YWc6bixsb3dlckNhc2VkVGFnOm4udG9Mb3dlckNhc2UoKSxhdHRyczpwfSksbz1uKSxlLnN0YXJ0JiZlLnN0YXJ0KG4scCxsLHQuc3RhcnQsdC5lbmQpfSgkKSxKbyhvLHQpJiZuKDEpO2NvbnRpbnVlfX12YXIgQz12b2lkIDAsdz12b2lkIDAseD12b2lkIDA7aWYoaD49MCl7Zm9yKHc9dC5zbGljZShoKTshKHhvLnRlc3Qodyl8fENvLnRlc3Qodyl8fEFvLnRlc3Qodyl8fE9vLnRlc3Qodyl8fCh4PXcuaW5kZXhPZihcIjxcIiwxKSk8MCk7KWgrPXgsdz10LnNsaWNlKGgpO0M9dC5zdWJzdHJpbmcoMCxoKSxuKGgpfWg8MCYmKEM9dCx0PVwiXCIpLGUuY2hhcnMmJkMmJmUuY2hhcnMoQyl9aWYodD09PWkpe2UuY2hhcnMmJmUuY2hhcnModCk7YnJlYWt9fXIoKX0odCx7d2FybjpUbyxleHBlY3RIVE1MOmUuZXhwZWN0SFRNTCxpc1VuYXJ5VGFnOmUuaXNVbmFyeVRhZyxjYW5CZUxlZnRPcGVuVGFnOmUuY2FuQmVMZWZ0T3BlblRhZyxzaG91bGREZWNvZGVOZXdsaW5lczplLnNob3VsZERlY29kZU5ld2xpbmVzLHNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZjplLnNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZixzaG91bGRLZWVwQ29tbWVudDplLmNvbW1lbnRzLHN0YXJ0OmZ1bmN0aW9uKHQsYSx1KXt2YXIgbD1pJiZpLm5zfHxEbyh0KTtRbiYmXCJzdmdcIj09PWwmJihhPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07bmEudGVzdChyLm5hbWUpfHwoci5uYW1lPXIubmFtZS5yZXBsYWNlKHJhLFwiXCIpLGUucHVzaChyKSl9cmV0dXJuIGV9KGEpKTt2YXIgZj1hbih0LGEsaSk7bCYmKGYubnM9bCksZnVuY3Rpb24odCl7cmV0dXJuXCJzdHlsZVwiPT09dC50YWd8fFwic2NyaXB0XCI9PT10LnRhZyYmKCF0LmF0dHJzTWFwLnR5cGV8fFwidGV4dC9qYXZhc2NyaXB0XCI9PT10LmF0dHJzTWFwLnR5cGUpfShmKSYmIXVyKCkmJihmLmZvcmJpZGRlbj0hMCk7Zm9yKHZhciBwPTA7cDxOby5sZW5ndGg7cCsrKWY9Tm9bcF0oZixlKXx8ZjtpZihzfHwoIWZ1bmN0aW9uKHQpe251bGwhPWhlKHQsXCJ2LXByZVwiKSYmKHQucHJlPSEwKX0oZiksZi5wcmUmJihzPSEwKSksTG8oZi50YWcpJiYoYz0hMCkscz9mdW5jdGlvbih0KXt2YXIgZT10LmF0dHJzTGlzdC5sZW5ndGg7aWYoZSlmb3IodmFyIG49dC5hdHRycz1uZXcgQXJyYXkoZSkscj0wO3I8ZTtyKyspbltyXT17bmFtZTp0LmF0dHJzTGlzdFtyXS5uYW1lLHZhbHVlOkpTT04uc3RyaW5naWZ5KHQuYXR0cnNMaXN0W3JdLnZhbHVlKX07ZWxzZSB0LnByZXx8KHQucGxhaW49ITApfShmKTpmLnByb2Nlc3NlZHx8KHVuKGYpLGZ1bmN0aW9uKHQpe3ZhciBlPWhlKHQsXCJ2LWlmXCIpO2lmKGUpdC5pZj1lLGxuKHQse2V4cDplLGJsb2NrOnR9KTtlbHNle251bGwhPWhlKHQsXCJ2LWVsc2VcIikmJih0LmVsc2U9ITApO3ZhciBuPWhlKHQsXCJ2LWVsc2UtaWZcIik7biYmKHQuZWxzZWlmPW4pfX0oZiksZnVuY3Rpb24odCl7bnVsbCE9aGUodCxcInYtb25jZVwiKSYmKHQub25jZT0hMCl9KGYpLGNuKGYsZSkpLHI/by5sZW5ndGh8fHIuaWYmJihmLmVsc2VpZnx8Zi5lbHNlKSYmbG4ocix7ZXhwOmYuZWxzZWlmLGJsb2NrOmZ9KTpyPWYsaSYmIWYuZm9yYmlkZGVuKWlmKGYuZWxzZWlmfHxmLmVsc2UpIWZ1bmN0aW9uKHQsZSl7dmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9dC5sZW5ndGg7Zm9yKDtlLS07KXtpZigxPT09dFtlXS50eXBlKXJldHVybiB0W2VdO3QucG9wKCl9fShlLmNoaWxkcmVuKTtuJiZuLmlmJiZsbihuLHtleHA6dC5lbHNlaWYsYmxvY2s6dH0pfShmLGkpO2Vsc2UgaWYoZi5zbG90U2NvcGUpe2kucGxhaW49ITE7dmFyIGQ9Zi5zbG90VGFyZ2V0fHwnXCJkZWZhdWx0XCInOyhpLnNjb3BlZFNsb3RzfHwoaS5zY29wZWRTbG90cz17fSkpW2RdPWZ9ZWxzZSBpLmNoaWxkcmVuLnB1c2goZiksZi5wYXJlbnQ9aTt1P24oZik6KGk9ZixvLnB1c2goZikpfSxlbmQ6ZnVuY3Rpb24oKXt2YXIgdD1vW28ubGVuZ3RoLTFdLGU9dC5jaGlsZHJlblt0LmNoaWxkcmVuLmxlbmd0aC0xXTtlJiYzPT09ZS50eXBlJiZcIiBcIj09PWUudGV4dCYmIWMmJnQuY2hpbGRyZW4ucG9wKCksby5sZW5ndGgtPTEsaT1vW28ubGVuZ3RoLTFdLG4odCl9LGNoYXJzOmZ1bmN0aW9uKHQpe2lmKGkmJighUW58fFwidGV4dGFyZWFcIiE9PWkudGFnfHxpLmF0dHJzTWFwLnBsYWNlaG9sZGVyIT09dCkpe3ZhciBlPWkuY2hpbGRyZW47aWYodD1jfHx0LnRyaW0oKT9mdW5jdGlvbih0KXtyZXR1cm5cInNjcmlwdFwiPT09dC50YWd8fFwic3R5bGVcIj09PXQudGFnfShpKT90OmVhKHQpOmEmJmUubGVuZ3RoP1wiIFwiOlwiXCIpe3ZhciBuOyFzJiZcIiBcIiE9PXQmJihuPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZT9mbyhlKTp1bztpZihuLnRlc3QodCkpe2Zvcih2YXIgcixpLG8sYT1bXSxzPVtdLGM9bi5sYXN0SW5kZXg9MDtyPW4uZXhlYyh0KTspeyhpPXIuaW5kZXgpPmMmJihzLnB1c2gobz10LnNsaWNlKGMsaSkpLGEucHVzaChKU09OLnN0cmluZ2lmeShvKSkpO3ZhciB1PWFlKHJbMV0udHJpbSgpKTthLnB1c2goXCJfcyhcIit1K1wiKVwiKSxzLnB1c2goe1wiQGJpbmRpbmdcIjp1fSksYz1pK3JbMF0ubGVuZ3RofXJldHVybiBjPHQubGVuZ3RoJiYocy5wdXNoKG89dC5zbGljZShjKSksYS5wdXNoKEpTT04uc3RyaW5naWZ5KG8pKSkse2V4cHJlc3Npb246YS5qb2luKFwiK1wiKSx0b2tlbnM6c319fSh0LEVvKSk/ZS5wdXNoKHt0eXBlOjIsZXhwcmVzc2lvbjpuLmV4cHJlc3Npb24sdG9rZW5zOm4udG9rZW5zLHRleHQ6dH0pOlwiIFwiPT09dCYmZS5sZW5ndGgmJlwiIFwiPT09ZVtlLmxlbmd0aC0xXS50ZXh0fHxlLnB1c2goe3R5cGU6Myx0ZXh0OnR9KX19fSxjb21tZW50OmZ1bmN0aW9uKHQpe2kuY2hpbGRyZW4ucHVzaCh7dHlwZTozLHRleHQ6dCxpc0NvbW1lbnQ6ITB9KX19KSxyfWZ1bmN0aW9uIGNuKHQsZSl7IWZ1bmN0aW9uKHQpe3ZhciBlPXZlKHQsXCJrZXlcIik7ZSYmKHQua2V5PWUpfSh0KSx0LnBsYWluPSF0LmtleSYmIXQuYXR0cnNMaXN0Lmxlbmd0aCxmdW5jdGlvbih0KXt2YXIgZT12ZSh0LFwicmVmXCIpO2UmJih0LnJlZj1lLHQucmVmSW5Gb3I9ZnVuY3Rpb24odCl7dmFyIGU9dDtmb3IoO2U7KXtpZih2b2lkIDAhPT1lLmZvcilyZXR1cm4hMDtlPWUucGFyZW50fXJldHVybiExfSh0KSl9KHQpLGZ1bmN0aW9uKHQpe2lmKFwic2xvdFwiPT09dC50YWcpdC5zbG90TmFtZT12ZSh0LFwibmFtZVwiKTtlbHNle3ZhciBlO1widGVtcGxhdGVcIj09PXQudGFnPyhlPWhlKHQsXCJzY29wZVwiKSx0LnNsb3RTY29wZT1lfHxoZSh0LFwic2xvdC1zY29wZVwiKSk6KGU9aGUodCxcInNsb3Qtc2NvcGVcIikpJiYodC5zbG90U2NvcGU9ZSk7dmFyIG49dmUodCxcInNsb3RcIik7biYmKHQuc2xvdFRhcmdldD0nXCJcIic9PT1uPydcImRlZmF1bHRcIic6bixcInRlbXBsYXRlXCI9PT10LnRhZ3x8dC5zbG90U2NvcGV8fGxlKHQsXCJzbG90XCIsbikpfX0odCksZnVuY3Rpb24odCl7dmFyIGU7KGU9dmUodCxcImlzXCIpKSYmKHQuY29tcG9uZW50PWUpO251bGwhPWhlKHQsXCJpbmxpbmUtdGVtcGxhdGVcIikmJih0LmlubGluZVRlbXBsYXRlPSEwKX0odCk7Zm9yKHZhciBuPTA7bjxqby5sZW5ndGg7bisrKXQ9am9bbl0odCxlKXx8dDshZnVuY3Rpb24odCl7dmFyIGUsbixyLGksbyxhLHMsYz10LmF0dHJzTGlzdDtmb3IoZT0wLG49Yy5sZW5ndGg7ZTxuO2UrKylpZihyPWk9Y1tlXS5uYW1lLG89Y1tlXS52YWx1ZSxXby50ZXN0KHIpKWlmKHQuaGFzQmluZGluZ3M9ITAsKGE9ZnVuY3Rpb24odCl7dmFyIGU9dC5tYXRjaCh0YSk7aWYoZSl7dmFyIG49e307cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0KXtuW3Quc2xpY2UoMSldPSEwfSksbn19KHIpKSYmKHI9ci5yZXBsYWNlKHRhLFwiXCIpKSxRby50ZXN0KHIpKXI9ci5yZXBsYWNlKFFvLFwiXCIpLG89YWUobykscz0hMSxhJiYoYS5wcm9wJiYocz0hMCxcImlubmVySHRtbFwiPT09KHI9UG4ocikpJiYocj1cImlubmVySFRNTFwiKSksYS5jYW1lbCYmKHI9UG4ocikpLGEuc3luYyYmZGUodCxcInVwZGF0ZTpcIitQbihyKSx5ZShvLFwiJGV2ZW50XCIpKSksc3x8IXQuY29tcG9uZW50JiZNbyh0LnRhZyx0LmF0dHJzTWFwLnR5cGUscik/dWUodCxyLG8pOmxlKHQscixvKTtlbHNlIGlmKHFvLnRlc3Qocikpcj1yLnJlcGxhY2UocW8sXCJcIiksZGUodCxyLG8sYSwhMSk7ZWxzZXt2YXIgdT0ocj1yLnJlcGxhY2UoV28sXCJcIikpLm1hdGNoKFlvKSxsPXUmJnVbMV07bCYmKHI9ci5zbGljZSgwLC0obC5sZW5ndGgrMSkpKSxwZSh0LHIsaSxvLGwsYSl9ZWxzZSBsZSh0LHIsSlNPTi5zdHJpbmdpZnkobykpLCF0LmNvbXBvbmVudCYmXCJtdXRlZFwiPT09ciYmTW8odC50YWcsdC5hdHRyc01hcC50eXBlLHIpJiZ1ZSh0LHIsXCJ0cnVlXCIpfSh0KX1mdW5jdGlvbiB1bih0KXt2YXIgZTtpZihlPWhlKHQsXCJ2LWZvclwiKSl7dmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9dC5tYXRjaChHbyk7aWYoIWUpcmV0dXJuO3ZhciBuPXt9O24uZm9yPWVbMl0udHJpbSgpO3ZhciByPWVbMV0udHJpbSgpLnJlcGxhY2UoWG8sXCJcIiksaT1yLm1hdGNoKFpvKTtpPyhuLmFsaWFzPXIucmVwbGFjZShabyxcIlwiKSxuLml0ZXJhdG9yMT1pWzFdLnRyaW0oKSxpWzJdJiYobi5pdGVyYXRvcjI9aVsyXS50cmltKCkpKTpuLmFsaWFzPXI7cmV0dXJuIG59KGUpO24mJmgodCxuKX19ZnVuY3Rpb24gbG4odCxlKXt0LmlmQ29uZGl0aW9uc3x8KHQuaWZDb25kaXRpb25zPVtdKSx0LmlmQ29uZGl0aW9ucy5wdXNoKGUpfWZ1bmN0aW9uIGZuKHQpe3JldHVybiBhbih0LnRhZyx0LmF0dHJzTGlzdC5zbGljZSgpLHQucGFyZW50KX1mdW5jdGlvbiBwbih0KXtpZih0LnN0YXRpYz1mdW5jdGlvbih0KXtpZigyPT09dC50eXBlKXJldHVybiExO2lmKDM9PT10LnR5cGUpcmV0dXJuITA7cmV0dXJuISghdC5wcmUmJih0Lmhhc0JpbmRpbmdzfHx0LmlmfHx0LmZvcnx8SW4odC50YWcpfHwhRm8odC50YWcpfHxmdW5jdGlvbih0KXtmb3IoO3QucGFyZW50Oyl7aWYoXCJ0ZW1wbGF0ZVwiIT09KHQ9dC5wYXJlbnQpLnRhZylyZXR1cm4hMTtpZih0LmZvcilyZXR1cm4hMH1yZXR1cm4hMX0odCl8fCFPYmplY3Qua2V5cyh0KS5ldmVyeShQbykpKX0odCksMT09PXQudHlwZSl7aWYoIUZvKHQudGFnKSYmXCJzbG90XCIhPT10LnRhZyYmbnVsbD09dC5hdHRyc01hcFtcImlubGluZS10ZW1wbGF0ZVwiXSlyZXR1cm47Zm9yKHZhciBlPTAsbj10LmNoaWxkcmVuLmxlbmd0aDtlPG47ZSsrKXt2YXIgcj10LmNoaWxkcmVuW2VdO3BuKHIpLHIuc3RhdGljfHwodC5zdGF0aWM9ITEpfWlmKHQuaWZDb25kaXRpb25zKWZvcih2YXIgaT0xLG89dC5pZkNvbmRpdGlvbnMubGVuZ3RoO2k8bztpKyspe3ZhciBhPXQuaWZDb25kaXRpb25zW2ldLmJsb2NrO3BuKGEpLGEuc3RhdGljfHwodC5zdGF0aWM9ITEpfX19ZnVuY3Rpb24gZG4odCxlKXtpZigxPT09dC50eXBlKXtpZigodC5zdGF0aWN8fHQub25jZSkmJih0LnN0YXRpY0luRm9yPWUpLHQuc3RhdGljJiZ0LmNoaWxkcmVuLmxlbmd0aCYmKDEhPT10LmNoaWxkcmVuLmxlbmd0aHx8MyE9PXQuY2hpbGRyZW5bMF0udHlwZSkpcmV0dXJuIHZvaWQodC5zdGF0aWNSb290PSEwKTtpZih0LnN0YXRpY1Jvb3Q9ITEsdC5jaGlsZHJlbilmb3IodmFyIG49MCxyPXQuY2hpbGRyZW4ubGVuZ3RoO248cjtuKyspZG4odC5jaGlsZHJlbltuXSxlfHwhIXQuZm9yKTtpZih0LmlmQ29uZGl0aW9ucylmb3IodmFyIGk9MSxvPXQuaWZDb25kaXRpb25zLmxlbmd0aDtpPG87aSsrKWRuKHQuaWZDb25kaXRpb25zW2ldLmJsb2NrLGUpfX1mdW5jdGlvbiB2bih0LGUsbil7dmFyIHI9ZT9cIm5hdGl2ZU9uOntcIjpcIm9uOntcIjtmb3IodmFyIGkgaW4gdClyKz0nXCInK2krJ1wiOicraG4oaSx0W2ldKStcIixcIjtyZXR1cm4gci5zbGljZSgwLC0xKStcIn1cIn1mdW5jdGlvbiBobih0LGUpe2lmKCFlKXJldHVyblwiZnVuY3Rpb24oKXt9XCI7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm5cIltcIitlLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gaG4odCxlKX0pLmpvaW4oXCIsXCIpK1wiXVwiO3ZhciBuPWNhLnRlc3QoZS52YWx1ZSkscj1zYS50ZXN0KGUudmFsdWUpO2lmKGUubW9kaWZpZXJzKXt2YXIgaT1cIlwiLG89XCJcIixhPVtdO2Zvcih2YXIgcyBpbiBlLm1vZGlmaWVycylpZihmYVtzXSlvKz1mYVtzXSx1YVtzXSYmYS5wdXNoKHMpO2Vsc2UgaWYoXCJleGFjdFwiPT09cyl7dmFyIGM9ZS5tb2RpZmllcnM7bys9bGEoW1wiY3RybFwiLFwic2hpZnRcIixcImFsdFwiLFwibWV0YVwiXS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIWNbdF19KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuXCIkZXZlbnQuXCIrdCtcIktleVwifSkuam9pbihcInx8XCIpKX1lbHNlIGEucHVzaChzKTthLmxlbmd0aCYmKGkrPWZ1bmN0aW9uKHQpe3JldHVyblwiaWYoISgnYnV0dG9uJyBpbiAkZXZlbnQpJiZcIit0Lm1hcChtbikuam9pbihcIiYmXCIpK1wiKXJldHVybiBudWxsO1wifShhKSksbyYmKGkrPW8pO3JldHVyblwiZnVuY3Rpb24oJGV2ZW50KXtcIitpKyhuP2UudmFsdWUrXCIoJGV2ZW50KVwiOnI/XCIoXCIrZS52YWx1ZStcIikoJGV2ZW50KVwiOmUudmFsdWUpK1wifVwifXJldHVybiBufHxyP2UudmFsdWU6XCJmdW5jdGlvbigkZXZlbnQpe1wiK2UudmFsdWUrXCJ9XCJ9ZnVuY3Rpb24gbW4odCl7dmFyIGU9cGFyc2VJbnQodCwxMCk7aWYoZSlyZXR1cm5cIiRldmVudC5rZXlDb2RlIT09XCIrZTt2YXIgbj11YVt0XTtyZXR1cm5cIl9rKCRldmVudC5rZXlDb2RlLFwiK0pTT04uc3RyaW5naWZ5KHQpK1wiLFwiK0pTT04uc3RyaW5naWZ5KG4pK1wiLCRldmVudC5rZXkpXCJ9ZnVuY3Rpb24geW4odCxlKXt2YXIgbj1uZXcgZGEoZSk7cmV0dXJue3JlbmRlcjpcIndpdGgodGhpcyl7cmV0dXJuIFwiKyh0P2duKHQsbik6J19jKFwiZGl2XCIpJykrXCJ9XCIsc3RhdGljUmVuZGVyRm5zOm4uc3RhdGljUmVuZGVyRm5zfX1mdW5jdGlvbiBnbih0LGUpe2lmKHQuc3RhdGljUm9vdCYmIXQuc3RhdGljUHJvY2Vzc2VkKXJldHVybiBfbih0LGUpO2lmKHQub25jZSYmIXQub25jZVByb2Nlc3NlZClyZXR1cm4gYm4odCxlKTtpZih0LmZvciYmIXQuZm9yUHJvY2Vzc2VkKXJldHVybiBmdW5jdGlvbih0LGUsbixyKXt2YXIgaT10LmZvcixvPXQuYWxpYXMsYT10Lml0ZXJhdG9yMT9cIixcIit0Lml0ZXJhdG9yMTpcIlwiLHM9dC5pdGVyYXRvcjI/XCIsXCIrdC5pdGVyYXRvcjI6XCJcIjtyZXR1cm4gdC5mb3JQcm9jZXNzZWQ9ITAsKHJ8fFwiX2xcIikrXCIoKFwiK2krXCIpLGZ1bmN0aW9uKFwiK28rYStzK1wiKXtyZXR1cm4gXCIrKG58fGduKSh0LGUpK1wifSlcIn0odCxlKTtpZih0LmlmJiYhdC5pZlByb2Nlc3NlZClyZXR1cm4gJG4odCxlKTtpZihcInRlbXBsYXRlXCIhPT10LnRhZ3x8dC5zbG90VGFyZ2V0KXtpZihcInNsb3RcIj09PXQudGFnKXJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPXQuc2xvdE5hbWV8fCdcImRlZmF1bHRcIicscj1rbih0LGUpLGk9XCJfdChcIituKyhyP1wiLFwiK3I6XCJcIiksbz10LmF0dHJzJiZcIntcIit0LmF0dHJzLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gUG4odC5uYW1lKStcIjpcIit0LnZhbHVlfSkuam9pbihcIixcIikrXCJ9XCIsYT10LmF0dHJzTWFwW1widi1iaW5kXCJdOyFvJiYhYXx8cnx8KGkrPVwiLG51bGxcIik7byYmKGkrPVwiLFwiK28pO2EmJihpKz0obz9cIlwiOlwiLG51bGxcIikrXCIsXCIrYSk7cmV0dXJuIGkrXCIpXCJ9KHQsZSk7dmFyIG47aWYodC5jb21wb25lbnQpbj1mdW5jdGlvbih0LGUsbil7dmFyIHI9ZS5pbmxpbmVUZW1wbGF0ZT9udWxsOmtuKGUsbiwhMCk7cmV0dXJuXCJfYyhcIit0K1wiLFwiK3duKGUsbikrKHI/XCIsXCIrcjpcIlwiKStcIilcIn0odC5jb21wb25lbnQsdCxlKTtlbHNle3ZhciByPXQucGxhaW4/dm9pZCAwOnduKHQsZSksaT10LmlubGluZVRlbXBsYXRlP251bGw6a24odCxlLCEwKTtuPVwiX2MoJ1wiK3QudGFnK1wiJ1wiKyhyP1wiLFwiK3I6XCJcIikrKGk/XCIsXCIraTpcIlwiKStcIilcIn1mb3IodmFyIG89MDtvPGUudHJhbnNmb3Jtcy5sZW5ndGg7bysrKW49ZS50cmFuc2Zvcm1zW29dKHQsbik7cmV0dXJuIG59cmV0dXJuIGtuKHQsZSl8fFwidm9pZCAwXCJ9ZnVuY3Rpb24gX24odCxlKXtyZXR1cm4gdC5zdGF0aWNQcm9jZXNzZWQ9ITAsZS5zdGF0aWNSZW5kZXJGbnMucHVzaChcIndpdGgodGhpcyl7cmV0dXJuIFwiK2duKHQsZSkrXCJ9XCIpLFwiX20oXCIrKGUuc3RhdGljUmVuZGVyRm5zLmxlbmd0aC0xKSsodC5zdGF0aWNJbkZvcj9cIix0cnVlXCI6XCJcIikrXCIpXCJ9ZnVuY3Rpb24gYm4odCxlKXtpZih0Lm9uY2VQcm9jZXNzZWQ9ITAsdC5pZiYmIXQuaWZQcm9jZXNzZWQpcmV0dXJuICRuKHQsZSk7aWYodC5zdGF0aWNJbkZvcil7Zm9yKHZhciBuPVwiXCIscj10LnBhcmVudDtyOyl7aWYoci5mb3Ipe249ci5rZXk7YnJlYWt9cj1yLnBhcmVudH1yZXR1cm4gbj9cIl9vKFwiK2duKHQsZSkrXCIsXCIrZS5vbmNlSWQrKytcIixcIituK1wiKVwiOmduKHQsZSl9cmV0dXJuIF9uKHQsZSl9ZnVuY3Rpb24gJG4odCxlLG4scil7cmV0dXJuIHQuaWZQcm9jZXNzZWQ9ITAsQ24odC5pZkNvbmRpdGlvbnMuc2xpY2UoKSxlLG4scil9ZnVuY3Rpb24gQ24odCxlLG4scil7ZnVuY3Rpb24gaSh0KXtyZXR1cm4gbj9uKHQsZSk6dC5vbmNlP2JuKHQsZSk6Z24odCxlKX1pZighdC5sZW5ndGgpcmV0dXJuIHJ8fFwiX2UoKVwiO3ZhciBvPXQuc2hpZnQoKTtyZXR1cm4gby5leHA/XCIoXCIrby5leHArXCIpP1wiK2koby5ibG9jaykrXCI6XCIrQ24odCxlLG4scik6XCJcIitpKG8uYmxvY2spfWZ1bmN0aW9uIHduKHQsZSl7dmFyIG49XCJ7XCIscj1mdW5jdGlvbih0LGUpe3ZhciBuPXQuZGlyZWN0aXZlcztpZighbilyZXR1cm47dmFyIHIsaSxvLGEscz1cImRpcmVjdGl2ZXM6W1wiLGM9ITE7Zm9yKHI9MCxpPW4ubGVuZ3RoO3I8aTtyKyspe289bltyXSxhPSEwO3ZhciB1PWUuZGlyZWN0aXZlc1tvLm5hbWVdO3UmJihhPSEhdSh0LG8sZS53YXJuKSksYSYmKGM9ITAscys9J3tuYW1lOlwiJytvLm5hbWUrJ1wiLHJhd05hbWU6XCInK28ucmF3TmFtZSsnXCInKyhvLnZhbHVlP1wiLHZhbHVlOihcIitvLnZhbHVlK1wiKSxleHByZXNzaW9uOlwiK0pTT04uc3RyaW5naWZ5KG8udmFsdWUpOlwiXCIpKyhvLmFyZz8nLGFyZzpcIicrby5hcmcrJ1wiJzpcIlwiKSsoby5tb2RpZmllcnM/XCIsbW9kaWZpZXJzOlwiK0pTT04uc3RyaW5naWZ5KG8ubW9kaWZpZXJzKTpcIlwiKStcIn0sXCIpfWlmKGMpcmV0dXJuIHMuc2xpY2UoMCwtMSkrXCJdXCJ9KHQsZSk7ciYmKG4rPXIrXCIsXCIpLHQua2V5JiYobis9XCJrZXk6XCIrdC5rZXkrXCIsXCIpLHQucmVmJiYobis9XCJyZWY6XCIrdC5yZWYrXCIsXCIpLHQucmVmSW5Gb3ImJihuKz1cInJlZkluRm9yOnRydWUsXCIpLHQucHJlJiYobis9XCJwcmU6dHJ1ZSxcIiksdC5jb21wb25lbnQmJihuKz0ndGFnOlwiJyt0LnRhZysnXCIsJyk7Zm9yKHZhciBpPTA7aTxlLmRhdGFHZW5GbnMubGVuZ3RoO2krKyluKz1lLmRhdGFHZW5GbnNbaV0odCk7aWYodC5hdHRycyYmKG4rPVwiYXR0cnM6e1wiK09uKHQuYXR0cnMpK1wifSxcIiksdC5wcm9wcyYmKG4rPVwiZG9tUHJvcHM6e1wiK09uKHQucHJvcHMpK1wifSxcIiksdC5ldmVudHMmJihuKz12bih0LmV2ZW50cywhMSxlLndhcm4pK1wiLFwiKSx0Lm5hdGl2ZUV2ZW50cyYmKG4rPXZuKHQubmF0aXZlRXZlbnRzLCEwLGUud2FybikrXCIsXCIpLHQuc2xvdFRhcmdldCYmIXQuc2xvdFNjb3BlJiYobis9XCJzbG90OlwiK3Quc2xvdFRhcmdldCtcIixcIiksdC5zY29wZWRTbG90cyYmKG4rPWZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJzY29wZWRTbG90czpfdShbXCIrT2JqZWN0LmtleXModCkubWFwKGZ1bmN0aW9uKG4pe3JldHVybiB4bihuLHRbbl0sZSl9KS5qb2luKFwiLFwiKStcIl0pXCJ9KHQuc2NvcGVkU2xvdHMsZSkrXCIsXCIpLHQubW9kZWwmJihuKz1cIm1vZGVsOnt2YWx1ZTpcIit0Lm1vZGVsLnZhbHVlK1wiLGNhbGxiYWNrOlwiK3QubW9kZWwuY2FsbGJhY2srXCIsZXhwcmVzc2lvbjpcIit0Lm1vZGVsLmV4cHJlc3Npb24rXCJ9LFwiKSx0LmlubGluZVRlbXBsYXRlKXt2YXIgbz1mdW5jdGlvbih0LGUpe3ZhciBuPXQuY2hpbGRyZW5bMF07aWYoMT09PW4udHlwZSl7dmFyIHI9eW4obixlLm9wdGlvbnMpO3JldHVyblwiaW5saW5lVGVtcGxhdGU6e3JlbmRlcjpmdW5jdGlvbigpe1wiK3IucmVuZGVyK1wifSxzdGF0aWNSZW5kZXJGbnM6W1wiK3Iuc3RhdGljUmVuZGVyRm5zLm1hcChmdW5jdGlvbih0KXtyZXR1cm5cImZ1bmN0aW9uKCl7XCIrdCtcIn1cIn0pLmpvaW4oXCIsXCIpK1wiXX1cIn19KHQsZSk7byYmKG4rPW8rXCIsXCIpfXJldHVybiBuPW4ucmVwbGFjZSgvLCQvLFwiXCIpK1wifVwiLHQud3JhcERhdGEmJihuPXQud3JhcERhdGEobikpLHQud3JhcExpc3RlbmVycyYmKG49dC53cmFwTGlzdGVuZXJzKG4pKSxufWZ1bmN0aW9uIHhuKHQsZSxuKXtpZihlLmZvciYmIWUuZm9yUHJvY2Vzc2VkKXJldHVybiBmdW5jdGlvbih0LGUsbil7dmFyIHI9ZS5mb3IsaT1lLmFsaWFzLG89ZS5pdGVyYXRvcjE/XCIsXCIrZS5pdGVyYXRvcjE6XCJcIixhPWUuaXRlcmF0b3IyP1wiLFwiK2UuaXRlcmF0b3IyOlwiXCI7cmV0dXJuIGUuZm9yUHJvY2Vzc2VkPSEwLFwiX2woKFwiK3IrXCIpLGZ1bmN0aW9uKFwiK2krbythK1wiKXtyZXR1cm4gXCIreG4odCxlLG4pK1wifSlcIn0odCxlLG4pO3JldHVyblwie2tleTpcIit0K1wiLGZuOlwiKyhcImZ1bmN0aW9uKFwiK1N0cmluZyhlLnNsb3RTY29wZSkrXCIpe3JldHVybiBcIisoXCJ0ZW1wbGF0ZVwiPT09ZS50YWc/ZS5pZj9lLmlmK1wiP1wiKyhrbihlLG4pfHxcInVuZGVmaW5lZFwiKStcIjp1bmRlZmluZWRcIjprbihlLG4pfHxcInVuZGVmaW5lZFwiOmduKGUsbikpK1wifVwiKStcIn1cIn1mdW5jdGlvbiBrbih0LGUsbixyLGkpe3ZhciBvPXQuY2hpbGRyZW47aWYoby5sZW5ndGgpe3ZhciBhPW9bMF07aWYoMT09PW8ubGVuZ3RoJiZhLmZvciYmXCJ0ZW1wbGF0ZVwiIT09YS50YWcmJlwic2xvdFwiIT09YS50YWcpcmV0dXJuKHJ8fGduKShhLGUpO3ZhciBzPW4/ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxyPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPXRbcl07aWYoMT09PWkudHlwZSl7aWYoQW4oaSl8fGkuaWZDb25kaXRpb25zJiZpLmlmQ29uZGl0aW9ucy5zb21lKGZ1bmN0aW9uKHQpe3JldHVybiBBbih0LmJsb2NrKX0pKXtuPTI7YnJlYWt9KGUoaSl8fGkuaWZDb25kaXRpb25zJiZpLmlmQ29uZGl0aW9ucy5zb21lKGZ1bmN0aW9uKHQpe3JldHVybiBlKHQuYmxvY2spfSkpJiYobj0xKX19cmV0dXJuIG59KG8sZS5tYXliZUNvbXBvbmVudCk6MCxjPWl8fGZ1bmN0aW9uKHQsZSl7aWYoMT09PXQudHlwZSlyZXR1cm4gZ24odCxlKTtyZXR1cm4gMz09PXQudHlwZSYmdC5pc0NvbW1lbnQ/ZnVuY3Rpb24odCl7cmV0dXJuXCJfZShcIitKU09OLnN0cmluZ2lmeSh0LnRleHQpK1wiKVwifSh0KTpmdW5jdGlvbih0KXtyZXR1cm5cIl92KFwiKygyPT09dC50eXBlP3QuZXhwcmVzc2lvbjpTbihKU09OLnN0cmluZ2lmeSh0LnRleHQpKSkrXCIpXCJ9KHQpfTtyZXR1cm5cIltcIitvLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYyh0LGUpfSkuam9pbihcIixcIikrXCJdXCIrKHM/XCIsXCIrczpcIlwiKX19ZnVuY3Rpb24gQW4odCl7cmV0dXJuIHZvaWQgMCE9PXQuZm9yfHxcInRlbXBsYXRlXCI9PT10LnRhZ3x8XCJzbG90XCI9PT10LnRhZ31mdW5jdGlvbiBPbih0KXtmb3IodmFyIGU9XCJcIixuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciByPXRbbl07ZSs9J1wiJytyLm5hbWUrJ1wiOicrU24oci52YWx1ZSkrXCIsXCJ9cmV0dXJuIGUuc2xpY2UoMCwtMSl9ZnVuY3Rpb24gU24odCl7cmV0dXJuIHQucmVwbGFjZSgvXFx1MjAyOC9nLFwiXFxcXHUyMDI4XCIpLnJlcGxhY2UoL1xcdTIwMjkvZyxcIlxcXFx1MjAyOVwiKX1mdW5jdGlvbiBUbih0LGUpe3RyeXtyZXR1cm4gbmV3IEZ1bmN0aW9uKHQpfWNhdGNoKG4pe3JldHVybiBlLnB1c2goe2VycjpuLGNvZGU6dH0pLHl9fWZ1bmN0aW9uIEVuKHQpe3JldHVybiBSbz1Sb3x8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxSby5pbm5lckhUTUw9dD8nPGEgaHJlZj1cIlxcblwiLz4nOic8ZGl2IGE9XCJcXG5cIi8+JyxSby5pbm5lckhUTUwuaW5kZXhPZihcIiYjMTA7XCIpPjB9dmFyIGpuPU9iamVjdC5mcmVlemUoe30pLE5uPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsSW49dShcInNsb3QsY29tcG9uZW50XCIsITApLExuPXUoXCJrZXkscmVmLHNsb3Qsc2xvdC1zY29wZSxpc1wiKSxNbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LERuPS8tKFxcdykvZyxQbj1wKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoRG4sZnVuY3Rpb24odCxlKXtyZXR1cm4gZT9lLnRvVXBwZXJDYXNlKCk6XCJcIn0pfSksRm49cChmdW5jdGlvbih0KXtyZXR1cm4gdC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSt0LnNsaWNlKDEpfSksUm49L1xcQihbQS1aXSkvZyxIbj1wKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoUm4sXCItJDFcIikudG9Mb3dlckNhc2UoKX0pLEJuPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4hMX0sVW49ZnVuY3Rpb24odCl7cmV0dXJuIHR9LFZuPVwiZGF0YS1zZXJ2ZXItcmVuZGVyZWRcIix6bj1bXCJjb21wb25lbnRcIixcImRpcmVjdGl2ZVwiLFwiZmlsdGVyXCJdLEtuPVtcImJlZm9yZUNyZWF0ZVwiLFwiY3JlYXRlZFwiLFwiYmVmb3JlTW91bnRcIixcIm1vdW50ZWRcIixcImJlZm9yZVVwZGF0ZVwiLFwidXBkYXRlZFwiLFwiYmVmb3JlRGVzdHJveVwiLFwiZGVzdHJveWVkXCIsXCJhY3RpdmF0ZWRcIixcImRlYWN0aXZhdGVkXCIsXCJlcnJvckNhcHR1cmVkXCJdLEpuPXtvcHRpb25NZXJnZVN0cmF0ZWdpZXM6T2JqZWN0LmNyZWF0ZShudWxsKSxzaWxlbnQ6ITEscHJvZHVjdGlvblRpcDohMSxkZXZ0b29sczohMSxwZXJmb3JtYW5jZTohMSxlcnJvckhhbmRsZXI6bnVsbCx3YXJuSGFuZGxlcjpudWxsLGlnbm9yZWRFbGVtZW50czpbXSxrZXlDb2RlczpPYmplY3QuY3JlYXRlKG51bGwpLGlzUmVzZXJ2ZWRUYWc6Qm4saXNSZXNlcnZlZEF0dHI6Qm4saXNVbmtub3duRWxlbWVudDpCbixnZXRUYWdOYW1lc3BhY2U6eSxwYXJzZVBsYXRmb3JtVGFnTmFtZTpVbixtdXN0VXNlUHJvcDpCbixfbGlmZWN5Y2xlSG9va3M6S259LHFuPS9bXlxcdy4kXS8sV249XCJfX3Byb3RvX19cImlue30sR249XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyxabj1cInVuZGVmaW5lZFwiIT10eXBlb2YgV1hFbnZpcm9ubWVudCYmISFXWEVudmlyb25tZW50LnBsYXRmb3JtLFhuPVpuJiZXWEVudmlyb25tZW50LnBsYXRmb3JtLnRvTG93ZXJDYXNlKCksWW49R24mJndpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCksUW49WW4mJi9tc2llfHRyaWRlbnQvLnRlc3QoWW4pLHRyPVluJiZZbi5pbmRleE9mKFwibXNpZSA5LjBcIik+MCxlcj1ZbiYmWW4uaW5kZXhPZihcImVkZ2UvXCIpPjAsbnI9WW4mJlluLmluZGV4T2YoXCJhbmRyb2lkXCIpPjB8fFwiYW5kcm9pZFwiPT09WG4scnI9WW4mJi9pcGhvbmV8aXBhZHxpcG9kfGlvcy8udGVzdChZbil8fFwiaW9zXCI9PT1Ybixpcj0oWW4mJi9jaHJvbWVcXC9cXGQrLy50ZXN0KFluKSx7fS53YXRjaCksb3I9ITE7aWYoR24pdHJ5e3ZhciBhcj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYXIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe29yPSEwfX0pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdC1wYXNzaXZlXCIsbnVsbCxhcil9Y2F0Y2godCl7fXZhciBzcixjcix1cj1mdW5jdGlvbigpe3JldHVybiB2b2lkIDA9PT1zciYmKHNyPSFHbiYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbCYmXCJzZXJ2ZXJcIj09PWdsb2JhbC5wcm9jZXNzLmVudi5WVUVfRU5WKSxzcn0sbHI9R24mJndpbmRvdy5fX1ZVRV9ERVZUT09MU19HTE9CQUxfSE9PS19fLGZyPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJncoU3ltYm9sKSYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFJlZmxlY3QmJncoUmVmbGVjdC5vd25LZXlzKTtjcj1cInVuZGVmaW5lZFwiIT10eXBlb2YgU2V0JiZ3KFNldCk/U2V0OmZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3RoaXMuc2V0PU9iamVjdC5jcmVhdGUobnVsbCl9cmV0dXJuIHQucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXtyZXR1cm4hMD09PXRoaXMuc2V0W3RdfSx0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7dGhpcy5zZXRbdF09ITB9LHQucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5zZXQ9T2JqZWN0LmNyZWF0ZShudWxsKX0sdH0oKTt2YXIgcHI9eSxkcj0wLHZyPWZ1bmN0aW9uKCl7dGhpcy5pZD1kcisrLHRoaXMuc3Vicz1bXX07dnIucHJvdG90eXBlLmFkZFN1Yj1mdW5jdGlvbih0KXt0aGlzLnN1YnMucHVzaCh0KX0sdnIucHJvdG90eXBlLnJlbW92ZVN1Yj1mdW5jdGlvbih0KXtsKHRoaXMuc3Vicyx0KX0sdnIucHJvdG90eXBlLmRlcGVuZD1mdW5jdGlvbigpe3ZyLnRhcmdldCYmdnIudGFyZ2V0LmFkZERlcCh0aGlzKX0sdnIucHJvdG90eXBlLm5vdGlmeT1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLnN1YnMuc2xpY2UoKSxlPTAsbj10Lmxlbmd0aDtlPG47ZSsrKXRbZV0udXBkYXRlKCl9LHZyLnRhcmdldD1udWxsO3ZhciBocj1bXSxtcj1mdW5jdGlvbih0LGUsbixyLGksbyxhLHMpe3RoaXMudGFnPXQsdGhpcy5kYXRhPWUsdGhpcy5jaGlsZHJlbj1uLHRoaXMudGV4dD1yLHRoaXMuZWxtPWksdGhpcy5ucz12b2lkIDAsdGhpcy5jb250ZXh0PW8sdGhpcy5mbkNvbnRleHQ9dm9pZCAwLHRoaXMuZm5PcHRpb25zPXZvaWQgMCx0aGlzLmZuU2NvcGVJZD12b2lkIDAsdGhpcy5rZXk9ZSYmZS5rZXksdGhpcy5jb21wb25lbnRPcHRpb25zPWEsdGhpcy5jb21wb25lbnRJbnN0YW5jZT12b2lkIDAsdGhpcy5wYXJlbnQ9dm9pZCAwLHRoaXMucmF3PSExLHRoaXMuaXNTdGF0aWM9ITEsdGhpcy5pc1Jvb3RJbnNlcnQ9ITAsdGhpcy5pc0NvbW1lbnQ9ITEsdGhpcy5pc0Nsb25lZD0hMSx0aGlzLmlzT25jZT0hMSx0aGlzLmFzeW5jRmFjdG9yeT1zLHRoaXMuYXN5bmNNZXRhPXZvaWQgMCx0aGlzLmlzQXN5bmNQbGFjZWhvbGRlcj0hMX0seXI9e2NoaWxkOntjb25maWd1cmFibGU6ITB9fTt5ci5jaGlsZC5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb21wb25lbnRJbnN0YW5jZX0sT2JqZWN0LmRlZmluZVByb3BlcnRpZXMobXIucHJvdG90eXBlLHlyKTt2YXIgZ3I9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9XCJcIik7dmFyIGU9bmV3IG1yO3JldHVybiBlLnRleHQ9dCxlLmlzQ29tbWVudD0hMCxlfSxfcj1BcnJheS5wcm90b3R5cGUsYnI9T2JqZWN0LmNyZWF0ZShfcik7W1wicHVzaFwiLFwicG9wXCIsXCJzaGlmdFwiLFwidW5zaGlmdFwiLFwic3BsaWNlXCIsXCJzb3J0XCIsXCJyZXZlcnNlXCJdLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9X3JbdF07Qyhicix0LGZ1bmN0aW9uKCl7Zm9yKHZhciBuPVtdLHI9YXJndW1lbnRzLmxlbmd0aDtyLS07KW5bcl09YXJndW1lbnRzW3JdO3ZhciBpLG89ZS5hcHBseSh0aGlzLG4pLGE9dGhpcy5fX29iX187c3dpdGNoKHQpe2Nhc2VcInB1c2hcIjpjYXNlXCJ1bnNoaWZ0XCI6aT1uO2JyZWFrO2Nhc2VcInNwbGljZVwiOmk9bi5zbGljZSgyKX1yZXR1cm4gaSYmYS5vYnNlcnZlQXJyYXkoaSksYS5kZXAubm90aWZ5KCksb30pfSk7dmFyICRyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGJyKSxDcj17c2hvdWxkQ29udmVydDohMH0sd3I9ZnVuY3Rpb24odCl7aWYodGhpcy52YWx1ZT10LHRoaXMuZGVwPW5ldyB2cix0aGlzLnZtQ291bnQ9MCxDKHQsXCJfX29iX19cIix0aGlzKSxBcnJheS5pc0FycmF5KHQpKXsoV24/TzpTKSh0LGJyLCRyKSx0aGlzLm9ic2VydmVBcnJheSh0KX1lbHNlIHRoaXMud2Fsayh0KX07d3IucHJvdG90eXBlLndhbGs9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPU9iamVjdC5rZXlzKHQpLG49MDtuPGUubGVuZ3RoO24rKylFKHQsZVtuXSx0W2Vbbl1dKX0sd3IucHJvdG90eXBlLm9ic2VydmVBcnJheT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXQubGVuZ3RoO2U8bjtlKyspVCh0W2VdKX07dmFyIHhyPUpuLm9wdGlvbk1lcmdlU3RyYXRlZ2llczt4ci5kYXRhPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbj9NKHQsZSxuKTplJiZcImZ1bmN0aW9uXCIhPXR5cGVvZiBlP3Q6TSh0LGUpfSxLbi5mb3JFYWNoKGZ1bmN0aW9uKHQpe3hyW3RdPUR9KSx6bi5mb3JFYWNoKGZ1bmN0aW9uKHQpe3hyW3QrXCJzXCJdPVB9KSx4ci53YXRjaD1mdW5jdGlvbih0LGUsbixyKXtpZih0PT09aXImJih0PXZvaWQgMCksZT09PWlyJiYoZT12b2lkIDApLCFlKXJldHVybiBPYmplY3QuY3JlYXRlKHR8fG51bGwpO2lmKCF0KXJldHVybiBlO3ZhciBpPXt9O2goaSx0KTtmb3IodmFyIG8gaW4gZSl7dmFyIGE9aVtvXSxzPWVbb107YSYmIUFycmF5LmlzQXJyYXkoYSkmJihhPVthXSksaVtvXT1hP2EuY29uY2F0KHMpOkFycmF5LmlzQXJyYXkocyk/czpbc119cmV0dXJuIGl9LHhyLnByb3BzPXhyLm1ldGhvZHM9eHIuaW5qZWN0PXhyLmNvbXB1dGVkPWZ1bmN0aW9uKHQsZSxuLHIpe2lmKCF0KXJldHVybiBlO3ZhciBpPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGgoaSx0KSxlJiZoKGksZSksaX0seHIucHJvdmlkZT1NO3ZhciBrcixBcixPcj1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lP3Q6ZX0sU3I9W10sVHI9ITEsRXI9ITE7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNldEltbWVkaWF0ZSYmdyhzZXRJbW1lZGlhdGUpKUFyPWZ1bmN0aW9uKCl7c2V0SW1tZWRpYXRlKEopfTtlbHNlIGlmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbHx8IXcoTWVzc2FnZUNoYW5uZWwpJiZcIltvYmplY3QgTWVzc2FnZUNoYW5uZWxDb25zdHJ1Y3Rvcl1cIiE9PU1lc3NhZ2VDaGFubmVsLnRvU3RyaW5nKCkpQXI9ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KEosMCl9O2Vsc2V7dmFyIGpyPW5ldyBNZXNzYWdlQ2hhbm5lbCxOcj1qci5wb3J0Mjtqci5wb3J0MS5vbm1lc3NhZ2U9SixBcj1mdW5jdGlvbigpe05yLnBvc3RNZXNzYWdlKDEpfX1pZihcInVuZGVmaW5lZFwiIT10eXBlb2YgUHJvbWlzZSYmdyhQcm9taXNlKSl7dmFyIElyPVByb21pc2UucmVzb2x2ZSgpO2tyPWZ1bmN0aW9uKCl7SXIudGhlbihKKSxyciYmc2V0VGltZW91dCh5KX19ZWxzZSBrcj1Bcjt2YXIgTHIsTXI9bmV3IGNyLERyPXAoZnVuY3Rpb24odCl7dmFyIGU9XCImXCI9PT10LmNoYXJBdCgwKSxuPVwiflwiPT09KHQ9ZT90LnNsaWNlKDEpOnQpLmNoYXJBdCgwKSxyPVwiIVwiPT09KHQ9bj90LnNsaWNlKDEpOnQpLmNoYXJBdCgwKTtyZXR1cm4gdD1yP3Quc2xpY2UoMSk6dCx7bmFtZTp0LG9uY2U6bixjYXB0dXJlOnIscGFzc2l2ZTplfX0pLFByPW51bGwsRnI9W10sUnI9W10sSHI9e30sQnI9ITEsVXI9ITEsVnI9MCx6cj0wLEtyPWZ1bmN0aW9uKHQsZSxuLHIsaSl7dGhpcy52bT10LGkmJih0Ll93YXRjaGVyPXRoaXMpLHQuX3dhdGNoZXJzLnB1c2godGhpcykscj8odGhpcy5kZWVwPSEhci5kZWVwLHRoaXMudXNlcj0hIXIudXNlcix0aGlzLmxhenk9ISFyLmxhenksdGhpcy5zeW5jPSEhci5zeW5jKTp0aGlzLmRlZXA9dGhpcy51c2VyPXRoaXMubGF6eT10aGlzLnN5bmM9ITEsdGhpcy5jYj1uLHRoaXMuaWQ9Kyt6cix0aGlzLmFjdGl2ZT0hMCx0aGlzLmRpcnR5PXRoaXMubGF6eSx0aGlzLmRlcHM9W10sdGhpcy5uZXdEZXBzPVtdLHRoaXMuZGVwSWRzPW5ldyBjcix0aGlzLm5ld0RlcElkcz1uZXcgY3IsdGhpcy5leHByZXNzaW9uPVwiXCIsXCJmdW5jdGlvblwiPT10eXBlb2YgZT90aGlzLmdldHRlcj1lOih0aGlzLmdldHRlcj1mdW5jdGlvbih0KXtpZighcW4udGVzdCh0KSl7dmFyIGU9dC5zcGxpdChcIi5cIik7cmV0dXJuIGZ1bmN0aW9uKHQpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXtpZighdClyZXR1cm47dD10W2Vbbl1dfXJldHVybiB0fX19KGUpLHRoaXMuZ2V0dGVyfHwodGhpcy5nZXR0ZXI9ZnVuY3Rpb24oKXt9KSksdGhpcy52YWx1ZT10aGlzLmxhenk/dm9pZCAwOnRoaXMuZ2V0KCl9O0tyLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXshZnVuY3Rpb24odCl7dnIudGFyZ2V0JiZoci5wdXNoKHZyLnRhcmdldCksdnIudGFyZ2V0PXR9KHRoaXMpO3ZhciB0LGU9dGhpcy52bTt0cnl7dD10aGlzLmdldHRlci5jYWxsKGUsZSl9Y2F0Y2godCl7aWYoIXRoaXMudXNlcil0aHJvdyB0O1YodCxlLCdnZXR0ZXIgZm9yIHdhdGNoZXIgXCInK3RoaXMuZXhwcmVzc2lvbisnXCInKX1maW5hbGx5e3RoaXMuZGVlcCYmVyh0KSx2ci50YXJnZXQ9aHIucG9wKCksdGhpcy5jbGVhbnVwRGVwcygpfXJldHVybiB0fSxLci5wcm90b3R5cGUuYWRkRGVwPWZ1bmN0aW9uKHQpe3ZhciBlPXQuaWQ7dGhpcy5uZXdEZXBJZHMuaGFzKGUpfHwodGhpcy5uZXdEZXBJZHMuYWRkKGUpLHRoaXMubmV3RGVwcy5wdXNoKHQpLHRoaXMuZGVwSWRzLmhhcyhlKXx8dC5hZGRTdWIodGhpcykpfSxLci5wcm90b3R5cGUuY2xlYW51cERlcHM9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5kZXBzLmxlbmd0aDt0LS07KXt2YXIgZT10aGlzLmRlcHNbdF07dGhpcy5uZXdEZXBJZHMuaGFzKGUuaWQpfHxlLnJlbW92ZVN1Yih0aGlzKX12YXIgbj10aGlzLmRlcElkczt0aGlzLmRlcElkcz10aGlzLm5ld0RlcElkcyx0aGlzLm5ld0RlcElkcz1uLHRoaXMubmV3RGVwSWRzLmNsZWFyKCksbj10aGlzLmRlcHMsdGhpcy5kZXBzPXRoaXMubmV3RGVwcyx0aGlzLm5ld0RlcHM9bix0aGlzLm5ld0RlcHMubGVuZ3RoPTB9LEtyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLmxhenk/dGhpcy5kaXJ0eT0hMDp0aGlzLnN5bmM/dGhpcy5ydW4oKTpmdW5jdGlvbih0KXt2YXIgZT10LmlkO2lmKG51bGw9PUhyW2VdKXtpZihIcltlXT0hMCxVcil7Zm9yKHZhciBuPUZyLmxlbmd0aC0xO24+VnImJkZyW25dLmlkPnQuaWQ7KW4tLTtGci5zcGxpY2UobisxLDAsdCl9ZWxzZSBGci5wdXNoKHQpO0JyfHwoQnI9ITAscShodCkpfX0odGhpcyl9LEtyLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXtpZih0aGlzLmFjdGl2ZSl7dmFyIHQ9dGhpcy5nZXQoKTtpZih0IT09dGhpcy52YWx1ZXx8aSh0KXx8dGhpcy5kZWVwKXt2YXIgZT10aGlzLnZhbHVlO2lmKHRoaXMudmFsdWU9dCx0aGlzLnVzZXIpdHJ5e3RoaXMuY2IuY2FsbCh0aGlzLnZtLHQsZSl9Y2F0Y2godCl7Vih0LHRoaXMudm0sJ2NhbGxiYWNrIGZvciB3YXRjaGVyIFwiJyt0aGlzLmV4cHJlc3Npb24rJ1wiJyl9ZWxzZSB0aGlzLmNiLmNhbGwodGhpcy52bSx0LGUpfX19LEtyLnByb3RvdHlwZS5ldmFsdWF0ZT1mdW5jdGlvbigpe3RoaXMudmFsdWU9dGhpcy5nZXQoKSx0aGlzLmRpcnR5PSExfSxLci5wcm90b3R5cGUuZGVwZW5kPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuZGVwcy5sZW5ndGg7dC0tOyl0aGlzLmRlcHNbdF0uZGVwZW5kKCl9LEtyLnByb3RvdHlwZS50ZWFyZG93bj1mdW5jdGlvbigpe2lmKHRoaXMuYWN0aXZlKXt0aGlzLnZtLl9pc0JlaW5nRGVzdHJveWVkfHxsKHRoaXMudm0uX3dhdGNoZXJzLHRoaXMpO2Zvcih2YXIgdD10aGlzLmRlcHMubGVuZ3RoO3QtLTspdGhpcy5kZXBzW3RdLnJlbW92ZVN1Yih0aGlzKTt0aGlzLmFjdGl2ZT0hMX19O3ZhciBKcj17ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsZ2V0Onksc2V0Onl9LHFyPXtsYXp5OiEwfTtOdChJdC5wcm90b3R5cGUpO3ZhciBXcj17aW5pdDpmdW5jdGlvbih0LG4scixpKXtpZighdC5jb21wb25lbnRJbnN0YW5jZXx8dC5jb21wb25lbnRJbnN0YW5jZS5faXNEZXN0cm95ZWQpeyh0LmNvbXBvbmVudEluc3RhbmNlPWZ1bmN0aW9uKHQsbixyLGkpe3ZhciBvPXtfaXNDb21wb25lbnQ6ITAscGFyZW50Om4sX3BhcmVudFZub2RlOnQsX3BhcmVudEVsbTpyfHxudWxsLF9yZWZFbG06aXx8bnVsbH0sYT10LmRhdGEuaW5saW5lVGVtcGxhdGU7cmV0dXJuIGUoYSkmJihvLnJlbmRlcj1hLnJlbmRlcixvLnN0YXRpY1JlbmRlckZucz1hLnN0YXRpY1JlbmRlckZucyksbmV3IHQuY29tcG9uZW50T3B0aW9ucy5DdG9yKG8pfSh0LFByLHIsaSkpLiRtb3VudChuP3QuZWxtOnZvaWQgMCxuKX1lbHNlIGlmKHQuZGF0YS5rZWVwQWxpdmUpe3ZhciBvPXQ7V3IucHJlcGF0Y2gobyxvKX19LHByZXBhdGNoOmZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5jb21wb25lbnRPcHRpb25zOyFmdW5jdGlvbih0LGUsbixyLGkpe3ZhciBvPSEhKGl8fHQuJG9wdGlvbnMuX3JlbmRlckNoaWxkcmVufHxyLmRhdGEuc2NvcGVkU2xvdHN8fHQuJHNjb3BlZFNsb3RzIT09am4pO2lmKHQuJG9wdGlvbnMuX3BhcmVudFZub2RlPXIsdC4kdm5vZGU9cix0Ll92bm9kZSYmKHQuX3Zub2RlLnBhcmVudD1yKSx0LiRvcHRpb25zLl9yZW5kZXJDaGlsZHJlbj1pLHQuJGF0dHJzPXIuZGF0YSYmci5kYXRhLmF0dHJzfHxqbix0LiRsaXN0ZW5lcnM9bnx8am4sZSYmdC4kb3B0aW9ucy5wcm9wcyl7Q3Iuc2hvdWxkQ29udmVydD0hMTtmb3IodmFyIGE9dC5fcHJvcHMscz10LiRvcHRpb25zLl9wcm9wS2V5c3x8W10sYz0wO2M8cy5sZW5ndGg7YysrKXt2YXIgdT1zW2NdO2FbdV09SCh1LHQuJG9wdGlvbnMucHJvcHMsZSx0KX1Dci5zaG91bGRDb252ZXJ0PSEwLHQuJG9wdGlvbnMucHJvcHNEYXRhPWV9aWYobil7dmFyIGw9dC4kb3B0aW9ucy5fcGFyZW50TGlzdGVuZXJzO3QuJG9wdGlvbnMuX3BhcmVudExpc3RlbmVycz1uLHN0KHQsbixsKX1vJiYodC4kc2xvdHM9Y3QoaSxyLmNvbnRleHQpLHQuJGZvcmNlVXBkYXRlKCkpfShlLmNvbXBvbmVudEluc3RhbmNlPXQuY29tcG9uZW50SW5zdGFuY2Usbi5wcm9wc0RhdGEsbi5saXN0ZW5lcnMsZSxuLmNoaWxkcmVuKX0saW5zZXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXQuY29udGV4dCxuPXQuY29tcG9uZW50SW5zdGFuY2U7bi5faXNNb3VudGVkfHwobi5faXNNb3VudGVkPSEwLHZ0KG4sXCJtb3VudGVkXCIpKSx0LmRhdGEua2VlcEFsaXZlJiYoZS5faXNNb3VudGVkP2Z1bmN0aW9uKHQpe3QuX2luYWN0aXZlPSExLFJyLnB1c2godCl9KG4pOnB0KG4sITApKX0sZGVzdHJveTpmdW5jdGlvbih0KXt2YXIgZT10LmNvbXBvbmVudEluc3RhbmNlO2UuX2lzRGVzdHJveWVkfHwodC5kYXRhLmtlZXBBbGl2ZT9kdChlLCEwKTplLiRkZXN0cm95KCkpfX0sR3I9T2JqZWN0LmtleXMoV3IpLFpyPTEsWHI9MixZcj0wOyFmdW5jdGlvbih0KXt0LnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbih0KXt0aGlzLl91aWQ9WXIrKyx0aGlzLl9pc1Z1ZT0hMCx0JiZ0Ll9pc0NvbXBvbmVudD9mdW5jdGlvbih0LGUpe3ZhciBuPXQuJG9wdGlvbnM9T2JqZWN0LmNyZWF0ZSh0LmNvbnN0cnVjdG9yLm9wdGlvbnMpLHI9ZS5fcGFyZW50Vm5vZGU7bi5wYXJlbnQ9ZS5wYXJlbnQsbi5fcGFyZW50Vm5vZGU9cixuLl9wYXJlbnRFbG09ZS5fcGFyZW50RWxtLG4uX3JlZkVsbT1lLl9yZWZFbG07dmFyIGk9ci5jb21wb25lbnRPcHRpb25zO24ucHJvcHNEYXRhPWkucHJvcHNEYXRhLG4uX3BhcmVudExpc3RlbmVycz1pLmxpc3RlbmVycyxuLl9yZW5kZXJDaGlsZHJlbj1pLmNoaWxkcmVuLG4uX2NvbXBvbmVudFRhZz1pLnRhZyxlLnJlbmRlciYmKG4ucmVuZGVyPWUucmVuZGVyLG4uc3RhdGljUmVuZGVyRm5zPWUuc3RhdGljUmVuZGVyRm5zKX0odGhpcyx0KTp0aGlzLiRvcHRpb25zPUYoRnQodGhpcy5jb25zdHJ1Y3RvciksdHx8e30sdGhpcyksdGhpcy5fcmVuZGVyUHJveHk9dGhpcyx0aGlzLl9zZWxmPXRoaXMsZnVuY3Rpb24odCl7dmFyIGU9dC4kb3B0aW9ucyxuPWUucGFyZW50O2lmKG4mJiFlLmFic3RyYWN0KXtmb3IoO24uJG9wdGlvbnMuYWJzdHJhY3QmJm4uJHBhcmVudDspbj1uLiRwYXJlbnQ7bi4kY2hpbGRyZW4ucHVzaCh0KX10LiRwYXJlbnQ9bix0LiRyb290PW4/bi4kcm9vdDp0LHQuJGNoaWxkcmVuPVtdLHQuJHJlZnM9e30sdC5fd2F0Y2hlcj1udWxsLHQuX2luYWN0aXZlPW51bGwsdC5fZGlyZWN0SW5hY3RpdmU9ITEsdC5faXNNb3VudGVkPSExLHQuX2lzRGVzdHJveWVkPSExLHQuX2lzQmVpbmdEZXN0cm95ZWQ9ITF9KHRoaXMpLGZ1bmN0aW9uKHQpe3QuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHQuX2hhc0hvb2tFdmVudD0hMTt2YXIgZT10LiRvcHRpb25zLl9wYXJlbnRMaXN0ZW5lcnM7ZSYmc3QodCxlKX0odGhpcyksZnVuY3Rpb24odCl7dC5fdm5vZGU9bnVsbCx0Ll9zdGF0aWNUcmVlcz1udWxsO3ZhciBlPXQuJG9wdGlvbnMsbj10LiR2bm9kZT1lLl9wYXJlbnRWbm9kZSxyPW4mJm4uY29udGV4dDt0LiRzbG90cz1jdChlLl9yZW5kZXJDaGlsZHJlbixyKSx0LiRzY29wZWRTbG90cz1qbix0Ll9jPWZ1bmN0aW9uKGUsbixyLGkpe3JldHVybiBEdCh0LGUsbixyLGksITEpfSx0LiRjcmVhdGVFbGVtZW50PWZ1bmN0aW9uKGUsbixyLGkpe3JldHVybiBEdCh0LGUsbixyLGksITApfTt2YXIgaT1uJiZuLmRhdGE7RSh0LFwiJGF0dHJzXCIsaSYmaS5hdHRyc3x8am4sMCwhMCksRSh0LFwiJGxpc3RlbmVyc1wiLGUuX3BhcmVudExpc3RlbmVyc3x8am4sMCwhMCl9KHRoaXMpLHZ0KHRoaXMsXCJiZWZvcmVDcmVhdGVcIiksZnVuY3Rpb24odCl7dmFyIGU9JHQodC4kb3B0aW9ucy5pbmplY3QsdCk7ZSYmKENyLnNob3VsZENvbnZlcnQ9ITEsT2JqZWN0LmtleXMoZSkuZm9yRWFjaChmdW5jdGlvbihuKXtFKHQsbixlW25dKX0pLENyLnNob3VsZENvbnZlcnQ9ITApfSh0aGlzKSx5dCh0aGlzKSxmdW5jdGlvbih0KXt2YXIgZT10LiRvcHRpb25zLnByb3ZpZGU7ZSYmKHQuX3Byb3ZpZGVkPVwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ZS5jYWxsKHQpOmUpfSh0aGlzKSx2dCh0aGlzLFwiY3JlYXRlZFwiKSx0aGlzLiRvcHRpb25zLmVsJiZ0aGlzLiRtb3VudCh0aGlzLiRvcHRpb25zLmVsKX19KFJ0KSxmdW5jdGlvbih0KXt2YXIgZT17fTtlLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhfTt2YXIgbj17fTtuLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9wc30sT2JqZWN0LmRlZmluZVByb3BlcnR5KHQucHJvdG90eXBlLFwiJGRhdGFcIixlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodC5wcm90b3R5cGUsXCIkcHJvcHNcIixuKSx0LnByb3RvdHlwZS4kc2V0PWosdC5wcm90b3R5cGUuJGRlbGV0ZT1OLHQucHJvdG90eXBlLiR3YXRjaD1mdW5jdGlvbih0LGUsbil7aWYobyhlKSlyZXR1cm4gYnQodGhpcyx0LGUsbik7KG49bnx8e30pLnVzZXI9ITA7dmFyIHI9bmV3IEtyKHRoaXMsdCxlLG4pO3JldHVybiBuLmltbWVkaWF0ZSYmZS5jYWxsKHRoaXMsci52YWx1ZSksZnVuY3Rpb24oKXtyLnRlYXJkb3duKCl9fX0oUnQpLGZ1bmN0aW9uKHQpe3ZhciBlPS9eaG9vazovO3QucHJvdG90eXBlLiRvbj1mdW5jdGlvbih0LG4pe2lmKEFycmF5LmlzQXJyYXkodCkpZm9yKHZhciByPTAsaT10Lmxlbmd0aDtyPGk7cisrKXRoaXMuJG9uKHRbcl0sbik7ZWxzZSh0aGlzLl9ldmVudHNbdF18fCh0aGlzLl9ldmVudHNbdF09W10pKS5wdXNoKG4pLGUudGVzdCh0KSYmKHRoaXMuX2hhc0hvb2tFdmVudD0hMCk7cmV0dXJuIHRoaXN9LHQucHJvdG90eXBlLiRvbmNlPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpe3IuJG9mZih0LG4pLGUuYXBwbHkocixhcmd1bWVudHMpfXZhciByPXRoaXM7cmV0dXJuIG4uZm49ZSxyLiRvbih0LG4pLHJ9LHQucHJvdG90eXBlLiRvZmY9ZnVuY3Rpb24odCxlKXtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcztpZihBcnJheS5pc0FycmF5KHQpKXtmb3IodmFyIG49MCxyPXQubGVuZ3RoO248cjtuKyspdGhpcy4kb2ZmKHRbbl0sZSk7cmV0dXJuIHRoaXN9dmFyIGk9dGhpcy5fZXZlbnRzW3RdO2lmKCFpKXJldHVybiB0aGlzO2lmKCFlKXJldHVybiB0aGlzLl9ldmVudHNbdF09bnVsbCx0aGlzO2lmKGUpZm9yKHZhciBvLGE9aS5sZW5ndGg7YS0tOylpZigobz1pW2FdKT09PWV8fG8uZm49PT1lKXtpLnNwbGljZShhLDEpO2JyZWFrfXJldHVybiB0aGlzfSx0LnByb3RvdHlwZS4kZW1pdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5fZXZlbnRzW3RdO2lmKG4pe249bi5sZW5ndGg+MT92KG4pOm47Zm9yKHZhciByPXYoYXJndW1lbnRzLDEpLGk9MCxvPW4ubGVuZ3RoO2k8bztpKyspdHJ5e25baV0uYXBwbHkoZSxyKX1jYXRjaChuKXtWKG4sZSwnZXZlbnQgaGFuZGxlciBmb3IgXCInK3QrJ1wiJyl9fXJldHVybiBlfX0oUnQpLGZ1bmN0aW9uKHQpe3QucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24odCxlKXt0aGlzLl9pc01vdW50ZWQmJnZ0KHRoaXMsXCJiZWZvcmVVcGRhdGVcIik7dmFyIG49dGhpcy4kZWwscj10aGlzLl92bm9kZSxpPVByO1ByPXRoaXMsdGhpcy5fdm5vZGU9dCxyP3RoaXMuJGVsPXRoaXMuX19wYXRjaF9fKHIsdCk6KHRoaXMuJGVsPXRoaXMuX19wYXRjaF9fKHRoaXMuJGVsLHQsZSwhMSx0aGlzLiRvcHRpb25zLl9wYXJlbnRFbG0sdGhpcy4kb3B0aW9ucy5fcmVmRWxtKSx0aGlzLiRvcHRpb25zLl9wYXJlbnRFbG09dGhpcy4kb3B0aW9ucy5fcmVmRWxtPW51bGwpLFByPWksbiYmKG4uX192dWVfXz1udWxsKSx0aGlzLiRlbCYmKHRoaXMuJGVsLl9fdnVlX189dGhpcyksdGhpcy4kdm5vZGUmJnRoaXMuJHBhcmVudCYmdGhpcy4kdm5vZGU9PT10aGlzLiRwYXJlbnQuX3Zub2RlJiYodGhpcy4kcGFyZW50LiRlbD10aGlzLiRlbCl9LHQucHJvdG90eXBlLiRmb3JjZVVwZGF0ZT1mdW5jdGlvbigpe3RoaXMuX3dhdGNoZXImJnRoaXMuX3dhdGNoZXIudXBkYXRlKCl9LHQucHJvdG90eXBlLiRkZXN0cm95PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2lzQmVpbmdEZXN0cm95ZWQpe3Z0KHRoaXMsXCJiZWZvcmVEZXN0cm95XCIpLHRoaXMuX2lzQmVpbmdEZXN0cm95ZWQ9ITA7dmFyIHQ9dGhpcy4kcGFyZW50OyF0fHx0Ll9pc0JlaW5nRGVzdHJveWVkfHx0aGlzLiRvcHRpb25zLmFic3RyYWN0fHxsKHQuJGNoaWxkcmVuLHRoaXMpLHRoaXMuX3dhdGNoZXImJnRoaXMuX3dhdGNoZXIudGVhcmRvd24oKTtmb3IodmFyIGU9dGhpcy5fd2F0Y2hlcnMubGVuZ3RoO2UtLTspdGhpcy5fd2F0Y2hlcnNbZV0udGVhcmRvd24oKTt0aGlzLl9kYXRhLl9fb2JfXyYmdGhpcy5fZGF0YS5fX29iX18udm1Db3VudC0tLHRoaXMuX2lzRGVzdHJveWVkPSEwLHRoaXMuX19wYXRjaF9fKHRoaXMuX3Zub2RlLG51bGwpLHZ0KHRoaXMsXCJkZXN0cm95ZWRcIiksdGhpcy4kb2ZmKCksdGhpcy4kZWwmJih0aGlzLiRlbC5fX3Z1ZV9fPW51bGwpLHRoaXMuJHZub2RlJiYodGhpcy4kdm5vZGUucGFyZW50PW51bGwpfX19KFJ0KSxmdW5jdGlvbih0KXtOdCh0LnByb3RvdHlwZSksdC5wcm90b3R5cGUuJG5leHRUaWNrPWZ1bmN0aW9uKHQpe3JldHVybiBxKHQsdGhpcyl9LHQucHJvdG90eXBlLl9yZW5kZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC4kb3B0aW9ucyxuPWUucmVuZGVyLHI9ZS5fcGFyZW50Vm5vZGU7aWYodC5faXNNb3VudGVkKWZvcih2YXIgaSBpbiB0LiRzbG90cyl7dmFyIG89dC4kc2xvdHNbaV07KG8uX3JlbmRlcmVkfHxvWzBdJiZvWzBdLmVsbSkmJih0LiRzbG90c1tpXT1BKG8sITApKX10LiRzY29wZWRTbG90cz1yJiZyLmRhdGEuc2NvcGVkU2xvdHN8fGpuLHQuJHZub2RlPXI7dmFyIGE7dHJ5e2E9bi5jYWxsKHQuX3JlbmRlclByb3h5LHQuJGNyZWF0ZUVsZW1lbnQpfWNhdGNoKGUpe1YoZSx0LFwicmVuZGVyXCIpLGE9dC5fdm5vZGV9cmV0dXJuIGEgaW5zdGFuY2VvZiBtcnx8KGE9Z3IoKSksYS5wYXJlbnQ9cixhfX0oUnQpO3ZhciBRcj1bU3RyaW5nLFJlZ0V4cCxBcnJheV0sdGk9e0tlZXBBbGl2ZTp7bmFtZTpcImtlZXAtYWxpdmVcIixhYnN0cmFjdDohMCxwcm9wczp7aW5jbHVkZTpRcixleGNsdWRlOlFyLG1heDpbU3RyaW5nLE51bWJlcl19LGNyZWF0ZWQ6ZnVuY3Rpb24oKXt0aGlzLmNhY2hlPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5rZXlzPVtdfSxkZXN0cm95ZWQ6ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcy5jYWNoZSl6dCh0aGlzLmNhY2hlLHQsdGhpcy5rZXlzKX0sd2F0Y2g6e2luY2x1ZGU6ZnVuY3Rpb24odCl7VnQodGhpcyxmdW5jdGlvbihlKXtyZXR1cm4gVXQodCxlKX0pfSxleGNsdWRlOmZ1bmN0aW9uKHQpe1Z0KHRoaXMsZnVuY3Rpb24oZSl7cmV0dXJuIVV0KHQsZSl9KX19LHJlbmRlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJHNsb3RzLmRlZmF1bHQsZT1pdCh0KSxuPWUmJmUuY29tcG9uZW50T3B0aW9ucztpZihuKXt2YXIgcj1CdChuKSxpPXRoaXMuaW5jbHVkZSxvPXRoaXMuZXhjbHVkZTtpZihpJiYoIXJ8fCFVdChpLHIpKXx8byYmciYmVXQobyxyKSlyZXR1cm4gZTt2YXIgYT10aGlzLmNhY2hlLHM9dGhpcy5rZXlzLGM9bnVsbD09ZS5rZXk/bi5DdG9yLmNpZCsobi50YWc/XCI6OlwiK24udGFnOlwiXCIpOmUua2V5O2FbY10/KGUuY29tcG9uZW50SW5zdGFuY2U9YVtjXS5jb21wb25lbnRJbnN0YW5jZSxsKHMsYykscy5wdXNoKGMpKTooYVtjXT1lLHMucHVzaChjKSx0aGlzLm1heCYmcy5sZW5ndGg+cGFyc2VJbnQodGhpcy5tYXgpJiZ6dChhLHNbMF0scyx0aGlzLl92bm9kZSkpLGUuZGF0YS5rZWVwQWxpdmU9ITB9cmV0dXJuIGV8fHQmJnRbMF19fX07IWZ1bmN0aW9uKHQpe3ZhciBlPXt9O2UuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIEpufSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcImNvbmZpZ1wiLGUpLHQudXRpbD17d2FybjpwcixleHRlbmQ6aCxtZXJnZU9wdGlvbnM6RixkZWZpbmVSZWFjdGl2ZTpFfSx0LnNldD1qLHQuZGVsZXRlPU4sdC5uZXh0VGljaz1xLHQub3B0aW9ucz1PYmplY3QuY3JlYXRlKG51bGwpLHpuLmZvckVhY2goZnVuY3Rpb24oZSl7dC5vcHRpb25zW2UrXCJzXCJdPU9iamVjdC5jcmVhdGUobnVsbCl9KSx0Lm9wdGlvbnMuX2Jhc2U9dCxoKHQub3B0aW9ucy5jb21wb25lbnRzLHRpKSxmdW5jdGlvbih0KXt0LnVzZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9pbnN0YWxsZWRQbHVnaW5zfHwodGhpcy5faW5zdGFsbGVkUGx1Z2lucz1bXSk7aWYoZS5pbmRleE9mKHQpPi0xKXJldHVybiB0aGlzO3ZhciBuPXYoYXJndW1lbnRzLDEpO3JldHVybiBuLnVuc2hpZnQodGhpcyksXCJmdW5jdGlvblwiPT10eXBlb2YgdC5pbnN0YWxsP3QuaW5zdGFsbC5hcHBseSh0LG4pOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQmJnQuYXBwbHkobnVsbCxuKSxlLnB1c2godCksdGhpc319KHQpLGZ1bmN0aW9uKHQpe3QubWl4aW49ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub3B0aW9ucz1GKHRoaXMub3B0aW9ucyx0KSx0aGlzfX0odCksSHQodCksZnVuY3Rpb24odCl7em4uZm9yRWFjaChmdW5jdGlvbihlKXt0W2VdPWZ1bmN0aW9uKHQsbil7cmV0dXJuIG4/KFwiY29tcG9uZW50XCI9PT1lJiZvKG4pJiYobi5uYW1lPW4ubmFtZXx8dCxuPXRoaXMub3B0aW9ucy5fYmFzZS5leHRlbmQobikpLFwiZGlyZWN0aXZlXCI9PT1lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuJiYobj17YmluZDpuLHVwZGF0ZTpufSksdGhpcy5vcHRpb25zW2UrXCJzXCJdW3RdPW4sbik6dGhpcy5vcHRpb25zW2UrXCJzXCJdW3RdfX0pfSh0KX0oUnQpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSdC5wcm90b3R5cGUsXCIkaXNTZXJ2ZXJcIix7Z2V0OnVyfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFJ0LnByb3RvdHlwZSxcIiRzc3JDb250ZXh0XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLiR2bm9kZSYmdGhpcy4kdm5vZGUuc3NyQ29udGV4dH19KSxSdC52ZXJzaW9uPVwiMi41LjEzXCI7dmFyIGVpLG5pLHJpLGlpLG9pLGFpLHNpLGNpLHVpPXUoXCJzdHlsZSxjbGFzc1wiKSxsaT11KFwiaW5wdXQsdGV4dGFyZWEsb3B0aW9uLHNlbGVjdCxwcm9ncmVzc1wiKSxmaT1mdW5jdGlvbih0LGUsbil7cmV0dXJuXCJ2YWx1ZVwiPT09biYmbGkodCkmJlwiYnV0dG9uXCIhPT1lfHxcInNlbGVjdGVkXCI9PT1uJiZcIm9wdGlvblwiPT09dHx8XCJjaGVja2VkXCI9PT1uJiZcImlucHV0XCI9PT10fHxcIm11dGVkXCI9PT1uJiZcInZpZGVvXCI9PT10fSxwaT11KFwiY29udGVudGVkaXRhYmxlLGRyYWdnYWJsZSxzcGVsbGNoZWNrXCIpLGRpPXUoXCJhbGxvd2Z1bGxzY3JlZW4sYXN5bmMsYXV0b2ZvY3VzLGF1dG9wbGF5LGNoZWNrZWQsY29tcGFjdCxjb250cm9scyxkZWNsYXJlLGRlZmF1bHQsZGVmYXVsdGNoZWNrZWQsZGVmYXVsdG11dGVkLGRlZmF1bHRzZWxlY3RlZCxkZWZlcixkaXNhYmxlZCxlbmFibGVkLGZvcm1ub3ZhbGlkYXRlLGhpZGRlbixpbmRldGVybWluYXRlLGluZXJ0LGlzbWFwLGl0ZW1zY29wZSxsb29wLG11bHRpcGxlLG11dGVkLG5vaHJlZixub3Jlc2l6ZSxub3NoYWRlLG5vdmFsaWRhdGUsbm93cmFwLG9wZW4scGF1c2VvbmV4aXQscmVhZG9ubHkscmVxdWlyZWQscmV2ZXJzZWQsc2NvcGVkLHNlYW1sZXNzLHNlbGVjdGVkLHNvcnRhYmxlLHRyYW5zbGF0ZSx0cnVlc3BlZWQsdHlwZW11c3RtYXRjaCx2aXNpYmxlXCIpLHZpPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLGhpPWZ1bmN0aW9uKHQpe3JldHVyblwiOlwiPT09dC5jaGFyQXQoNSkmJlwieGxpbmtcIj09PXQuc2xpY2UoMCw1KX0sbWk9ZnVuY3Rpb24odCl7cmV0dXJuIGhpKHQpP3Quc2xpY2UoNix0Lmxlbmd0aCk6XCJcIn0seWk9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXR8fCExPT09dH0sZ2k9e3N2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsbWF0aDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIn0sX2k9dShcImh0bWwsYm9keSxiYXNlLGhlYWQsbGluayxtZXRhLHN0eWxlLHRpdGxlLGFkZHJlc3MsYXJ0aWNsZSxhc2lkZSxmb290ZXIsaGVhZGVyLGgxLGgyLGgzLGg0LGg1LGg2LGhncm91cCxuYXYsc2VjdGlvbixkaXYsZGQsZGwsZHQsZmlnY2FwdGlvbixmaWd1cmUscGljdHVyZSxocixpbWcsbGksbWFpbixvbCxwLHByZSx1bCxhLGIsYWJicixiZGksYmRvLGJyLGNpdGUsY29kZSxkYXRhLGRmbixlbSxpLGtiZCxtYXJrLHEscnAscnQscnRjLHJ1YnkscyxzYW1wLHNtYWxsLHNwYW4sc3Ryb25nLHN1YixzdXAsdGltZSx1LHZhcix3YnIsYXJlYSxhdWRpbyxtYXAsdHJhY2ssdmlkZW8sZW1iZWQsb2JqZWN0LHBhcmFtLHNvdXJjZSxjYW52YXMsc2NyaXB0LG5vc2NyaXB0LGRlbCxpbnMsY2FwdGlvbixjb2wsY29sZ3JvdXAsdGFibGUsdGhlYWQsdGJvZHksdGQsdGgsdHIsYnV0dG9uLGRhdGFsaXN0LGZpZWxkc2V0LGZvcm0saW5wdXQsbGFiZWwsbGVnZW5kLG1ldGVyLG9wdGdyb3VwLG9wdGlvbixvdXRwdXQscHJvZ3Jlc3Msc2VsZWN0LHRleHRhcmVhLGRldGFpbHMsZGlhbG9nLG1lbnUsbWVudWl0ZW0sc3VtbWFyeSxjb250ZW50LGVsZW1lbnQsc2hhZG93LHRlbXBsYXRlLGJsb2NrcXVvdGUsaWZyYW1lLHRmb290XCIpLGJpPXUoXCJzdmcsYW5pbWF0ZSxjaXJjbGUsY2xpcHBhdGgsY3Vyc29yLGRlZnMsZGVzYyxlbGxpcHNlLGZpbHRlcixmb250LWZhY2UsZm9yZWlnbk9iamVjdCxnLGdseXBoLGltYWdlLGxpbmUsbWFya2VyLG1hc2ssbWlzc2luZy1nbHlwaCxwYXRoLHBhdHRlcm4scG9seWdvbixwb2x5bGluZSxyZWN0LHN3aXRjaCxzeW1ib2wsdGV4dCx0ZXh0cGF0aCx0c3Bhbix1c2Usdmlld1wiLCEwKSwkaT1mdW5jdGlvbih0KXtyZXR1cm4gX2kodCl8fGJpKHQpfSxDaT1PYmplY3QuY3JlYXRlKG51bGwpLHdpPXUoXCJ0ZXh0LG51bWJlcixwYXNzd29yZCxzZWFyY2gsZW1haWwsdGVsLHVybFwiKSx4aT1PYmplY3QuZnJlZXplKHtjcmVhdGVFbGVtZW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KTtyZXR1cm5cInNlbGVjdFwiIT09dD9uOihlLmRhdGEmJmUuZGF0YS5hdHRycyYmdm9pZCAwIT09ZS5kYXRhLmF0dHJzLm11bHRpcGxlJiZuLnNldEF0dHJpYnV0ZShcIm11bHRpcGxlXCIsXCJtdWx0aXBsZVwiKSxuKX0sY3JlYXRlRWxlbWVudE5TOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhnaVt0XSxlKX0sY3JlYXRlVGV4dE5vZGU6ZnVuY3Rpb24odCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHQpfSxjcmVhdGVDb21tZW50OmZ1bmN0aW9uKHQpe3JldHVybiBkb2N1bWVudC5jcmVhdGVDb21tZW50KHQpfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24odCxlLG4pe3QuaW5zZXJ0QmVmb3JlKGUsbil9LHJlbW92ZUNoaWxkOmZ1bmN0aW9uKHQsZSl7dC5yZW1vdmVDaGlsZChlKX0sYXBwZW5kQ2hpbGQ6ZnVuY3Rpb24odCxlKXt0LmFwcGVuZENoaWxkKGUpfSxwYXJlbnROb2RlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnBhcmVudE5vZGV9LG5leHRTaWJsaW5nOmZ1bmN0aW9uKHQpe3JldHVybiB0Lm5leHRTaWJsaW5nfSx0YWdOYW1lOmZ1bmN0aW9uKHQpe3JldHVybiB0LnRhZ05hbWV9LHNldFRleHRDb250ZW50OmZ1bmN0aW9uKHQsZSl7dC50ZXh0Q29udGVudD1lfSxzZXRBdHRyaWJ1dGU6ZnVuY3Rpb24odCxlLG4pe3Quc2V0QXR0cmlidXRlKGUsbil9fSksa2k9e2NyZWF0ZTpmdW5jdGlvbih0LGUpe1h0KGUpfSx1cGRhdGU6ZnVuY3Rpb24odCxlKXt0LmRhdGEucmVmIT09ZS5kYXRhLnJlZiYmKFh0KHQsITApLFh0KGUpKX0sZGVzdHJveTpmdW5jdGlvbih0KXtYdCh0LCEwKX19LEFpPW5ldyBtcihcIlwiLHt9LFtdKSxPaT1bXCJjcmVhdGVcIixcImFjdGl2YXRlXCIsXCJ1cGRhdGVcIixcInJlbW92ZVwiLFwiZGVzdHJveVwiXSxTaT17Y3JlYXRlOnRlLHVwZGF0ZTp0ZSxkZXN0cm95OmZ1bmN0aW9uKHQpe3RlKHQsQWkpfX0sVGk9T2JqZWN0LmNyZWF0ZShudWxsKSxFaT1ba2ksU2ldLGppPXtjcmVhdGU6cmUsdXBkYXRlOnJlfSxOaT17Y3JlYXRlOm9lLHVwZGF0ZTpvZX0sSWk9L1tcXHcpLitcXC1fJFxcXV0vLExpPVwiX19yXCIsTWk9XCJfX2NcIixEaT17Y3JlYXRlOnhlLHVwZGF0ZTp4ZX0sUGk9e2NyZWF0ZTprZSx1cGRhdGU6a2V9LEZpPXAoZnVuY3Rpb24odCl7dmFyIGU9e30sbj0vOiguKykvO3JldHVybiB0LnNwbGl0KC87KD8hW14oXSpcXCkpL2cpLmZvckVhY2goZnVuY3Rpb24odCl7aWYodCl7dmFyIHI9dC5zcGxpdChuKTtyLmxlbmd0aD4xJiYoZVtyWzBdLnRyaW0oKV09clsxXS50cmltKCkpfX0pLGV9KSxSaT0vXi0tLyxIaT0vXFxzKiFpbXBvcnRhbnQkLyxCaT1mdW5jdGlvbih0LGUsbil7aWYoUmkudGVzdChlKSl0LnN0eWxlLnNldFByb3BlcnR5KGUsbik7ZWxzZSBpZihIaS50ZXN0KG4pKXQuc3R5bGUuc2V0UHJvcGVydHkoZSxuLnJlcGxhY2UoSGksXCJcIiksXCJpbXBvcnRhbnRcIik7ZWxzZXt2YXIgcj1WaShlKTtpZihBcnJheS5pc0FycmF5KG4pKWZvcih2YXIgaT0wLG89bi5sZW5ndGg7aTxvO2krKyl0LnN0eWxlW3JdPW5baV07ZWxzZSB0LnN0eWxlW3JdPW59fSxVaT1bXCJXZWJraXRcIixcIk1velwiLFwibXNcIl0sVmk9cChmdW5jdGlvbih0KXtpZihjaT1jaXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcImZpbHRlclwiIT09KHQ9UG4odCkpJiZ0IGluIGNpKXJldHVybiB0O2Zvcih2YXIgZT10LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSksbj0wO248VWkubGVuZ3RoO24rKyl7dmFyIHI9VWlbbl0rZTtpZihyIGluIGNpKXJldHVybiByfX0pLHppPXtjcmVhdGU6U2UsdXBkYXRlOlNlfSxLaT1wKGZ1bmN0aW9uKHQpe3JldHVybntlbnRlckNsYXNzOnQrXCItZW50ZXJcIixlbnRlclRvQ2xhc3M6dCtcIi1lbnRlci10b1wiLGVudGVyQWN0aXZlQ2xhc3M6dCtcIi1lbnRlci1hY3RpdmVcIixsZWF2ZUNsYXNzOnQrXCItbGVhdmVcIixsZWF2ZVRvQ2xhc3M6dCtcIi1sZWF2ZS10b1wiLGxlYXZlQWN0aXZlQ2xhc3M6dCtcIi1sZWF2ZS1hY3RpdmVcIn19KSxKaT1HbiYmIXRyLHFpPVwidHJhbnNpdGlvblwiLFdpPVwiYW5pbWF0aW9uXCIsR2k9XCJ0cmFuc2l0aW9uXCIsWmk9XCJ0cmFuc2l0aW9uZW5kXCIsWGk9XCJhbmltYXRpb25cIixZaT1cImFuaW1hdGlvbmVuZFwiO0ppJiYodm9pZCAwPT09d2luZG93Lm9udHJhbnNpdGlvbmVuZCYmdm9pZCAwIT09d2luZG93Lm9ud2Via2l0dHJhbnNpdGlvbmVuZCYmKEdpPVwiV2Via2l0VHJhbnNpdGlvblwiLFppPVwid2Via2l0VHJhbnNpdGlvbkVuZFwiKSx2b2lkIDA9PT13aW5kb3cub25hbmltYXRpb25lbmQmJnZvaWQgMCE9PXdpbmRvdy5vbndlYmtpdGFuaW1hdGlvbmVuZCYmKFhpPVwiV2Via2l0QW5pbWF0aW9uXCIsWWk9XCJ3ZWJraXRBbmltYXRpb25FbmRcIikpO3ZhciBRaT1Hbj93aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lP3dpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpOnNldFRpbWVvdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQoKX0sdG89L1xcYih0cmFuc2Zvcm18YWxsKSgsfCQpLyxlbz1mdW5jdGlvbihpKXtmdW5jdGlvbiBvKHQpe3ZhciBuPUEucGFyZW50Tm9kZSh0KTtlKG4pJiZBLnJlbW92ZUNoaWxkKG4sdCl9ZnVuY3Rpb24gYSh0LHIsaSxvLGEpe2lmKHQuaXNSb290SW5zZXJ0PSFhLCFmdW5jdGlvbih0LHIsaSxvKXt2YXIgYT10LmRhdGE7aWYoZShhKSl7dmFyIHU9ZSh0LmNvbXBvbmVudEluc3RhbmNlKSYmYS5rZWVwQWxpdmU7aWYoZShhPWEuaG9vaykmJmUoYT1hLmluaXQpJiZhKHQsITEsaSxvKSxlKHQuY29tcG9uZW50SW5zdGFuY2UpKXJldHVybiBzKHQsciksbih1KSYmZnVuY3Rpb24odCxuLHIsaSl7Zm9yKHZhciBvLGE9dDthLmNvbXBvbmVudEluc3RhbmNlOylpZihhPWEuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlLGUobz1hLmRhdGEpJiZlKG89by50cmFuc2l0aW9uKSl7Zm9yKG89MDtvPHguYWN0aXZhdGUubGVuZ3RoOysrbyl4LmFjdGl2YXRlW29dKEFpLGEpO24ucHVzaChhKTticmVha31jKHIsdC5lbG0saSl9KHQscixpLG8pLCEwfX0odCxyLGksbykpe3ZhciB1PXQuZGF0YSxmPXQuY2hpbGRyZW4sdj10LnRhZztlKHYpPyh0LmVsbT10Lm5zP0EuY3JlYXRlRWxlbWVudE5TKHQubnMsdik6QS5jcmVhdGVFbGVtZW50KHYsdCksZCh0KSxsKHQsZixyKSxlKHUpJiZwKHQsciksYyhpLHQuZWxtLG8pKTpuKHQuaXNDb21tZW50KT8odC5lbG09QS5jcmVhdGVDb21tZW50KHQudGV4dCksYyhpLHQuZWxtLG8pKToodC5lbG09QS5jcmVhdGVUZXh0Tm9kZSh0LnRleHQpLGMoaSx0LmVsbSxvKSl9fWZ1bmN0aW9uIHModCxuKXtlKHQuZGF0YS5wZW5kaW5nSW5zZXJ0KSYmKG4ucHVzaC5hcHBseShuLHQuZGF0YS5wZW5kaW5nSW5zZXJ0KSx0LmRhdGEucGVuZGluZ0luc2VydD1udWxsKSx0LmVsbT10LmNvbXBvbmVudEluc3RhbmNlLiRlbCxmKHQpPyhwKHQsbiksZCh0KSk6KFh0KHQpLG4ucHVzaCh0KSl9ZnVuY3Rpb24gYyh0LG4scil7ZSh0KSYmKGUocik/ci5wYXJlbnROb2RlPT09dCYmQS5pbnNlcnRCZWZvcmUodCxuLHIpOkEuYXBwZW5kQ2hpbGQodCxuKSl9ZnVuY3Rpb24gbCh0LGUsbil7aWYoQXJyYXkuaXNBcnJheShlKSlmb3IodmFyIGk9MDtpPGUubGVuZ3RoOysraSlhKGVbaV0sbix0LmVsbSxudWxsLCEwKTtlbHNlIHIodC50ZXh0KSYmQS5hcHBlbmRDaGlsZCh0LmVsbSxBLmNyZWF0ZVRleHROb2RlKFN0cmluZyh0LnRleHQpKSl9ZnVuY3Rpb24gZih0KXtmb3IoO3QuY29tcG9uZW50SW5zdGFuY2U7KXQ9dC5jb21wb25lbnRJbnN0YW5jZS5fdm5vZGU7cmV0dXJuIGUodC50YWcpfWZ1bmN0aW9uIHAodCxuKXtmb3IodmFyIHI9MDtyPHguY3JlYXRlLmxlbmd0aDsrK3IpeC5jcmVhdGVbcl0oQWksdCk7ZShDPXQuZGF0YS5ob29rKSYmKGUoQy5jcmVhdGUpJiZDLmNyZWF0ZShBaSx0KSxlKEMuaW5zZXJ0KSYmbi5wdXNoKHQpKX1mdW5jdGlvbiBkKHQpe3ZhciBuO2lmKGUobj10LmZuU2NvcGVJZCkpQS5zZXRBdHRyaWJ1dGUodC5lbG0sbixcIlwiKTtlbHNlIGZvcih2YXIgcj10O3I7KWUobj1yLmNvbnRleHQpJiZlKG49bi4kb3B0aW9ucy5fc2NvcGVJZCkmJkEuc2V0QXR0cmlidXRlKHQuZWxtLG4sXCJcIikscj1yLnBhcmVudDtlKG49UHIpJiZuIT09dC5jb250ZXh0JiZuIT09dC5mbkNvbnRleHQmJmUobj1uLiRvcHRpb25zLl9zY29wZUlkKSYmQS5zZXRBdHRyaWJ1dGUodC5lbG0sbixcIlwiKX1mdW5jdGlvbiB2KHQsZSxuLHIsaSxvKXtmb3IoO3I8PWk7KytyKWEobltyXSxvLHQsZSl9ZnVuY3Rpb24gaCh0KXt2YXIgbixyLGk9dC5kYXRhO2lmKGUoaSkpZm9yKGUobj1pLmhvb2spJiZlKG49bi5kZXN0cm95KSYmbih0KSxuPTA7bjx4LmRlc3Ryb3kubGVuZ3RoOysrbil4LmRlc3Ryb3lbbl0odCk7aWYoZShuPXQuY2hpbGRyZW4pKWZvcihyPTA7cjx0LmNoaWxkcmVuLmxlbmd0aDsrK3IpaCh0LmNoaWxkcmVuW3JdKX1mdW5jdGlvbiBtKHQsbixyLGkpe2Zvcig7cjw9aTsrK3Ipe3ZhciBhPW5bcl07ZShhKSYmKGUoYS50YWcpPyh5KGEpLGgoYSkpOm8oYS5lbG0pKX19ZnVuY3Rpb24geSh0LG4pe2lmKGUobil8fGUodC5kYXRhKSl7dmFyIHIsaT14LnJlbW92ZS5sZW5ndGgrMTtmb3IoZShuKT9uLmxpc3RlbmVycys9aTpuPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpezA9PS0tbi5saXN0ZW5lcnMmJm8odCl9cmV0dXJuIG4ubGlzdGVuZXJzPWUsbn0odC5lbG0saSksZShyPXQuY29tcG9uZW50SW5zdGFuY2UpJiZlKHI9ci5fdm5vZGUpJiZlKHIuZGF0YSkmJnkocixuKSxyPTA7cjx4LnJlbW92ZS5sZW5ndGg7KytyKXgucmVtb3ZlW3JdKHQsbik7ZShyPXQuZGF0YS5ob29rKSYmZShyPXIucmVtb3ZlKT9yKHQsbik6bigpfWVsc2Ugbyh0LmVsbSl9ZnVuY3Rpb24gZyhuLHIsaSxvLHMpe2Zvcih2YXIgYyx1LGwsZj0wLHA9MCxkPXIubGVuZ3RoLTEsaD1yWzBdLHk9cltkXSxnPWkubGVuZ3RoLTEsYj1pWzBdLCQ9aVtnXSxDPSFzO2Y8PWQmJnA8PWc7KXQoaCk/aD1yWysrZl06dCh5KT95PXJbLS1kXTpZdChoLGIpPyhfKGgsYixvKSxoPXJbKytmXSxiPWlbKytwXSk6WXQoeSwkKT8oXyh5LCQsbykseT1yWy0tZF0sJD1pWy0tZ10pOll0KGgsJCk/KF8oaCwkLG8pLEMmJkEuaW5zZXJ0QmVmb3JlKG4saC5lbG0sQS5uZXh0U2libGluZyh5LmVsbSkpLGg9clsrK2ZdLCQ9aVstLWddKTpZdCh5LGIpPyhfKHksYixvKSxDJiZBLmluc2VydEJlZm9yZShuLHkuZWxtLGguZWxtKSx5PXJbLS1kXSxiPWlbKytwXSk6KHQoYykmJihjPVF0KHIsZixkKSksdCh1PWUoYi5rZXkpP2NbYi5rZXldOmZ1bmN0aW9uKHQsbixyLGkpe2Zvcih2YXIgbz1yO288aTtvKyspe3ZhciBhPW5bb107aWYoZShhKSYmWXQodCxhKSlyZXR1cm4gb319KGIscixmLGQpKT9hKGIsbyxuLGguZWxtKTpZdChsPXJbdV0sYik/KF8obCxiLG8pLHJbdV09dm9pZCAwLEMmJkEuaW5zZXJ0QmVmb3JlKG4sbC5lbG0saC5lbG0pKTphKGIsbyxuLGguZWxtKSxiPWlbKytwXSk7Zj5kP3Yobix0KGlbZysxXSk/bnVsbDppW2crMV0uZWxtLGkscCxnLG8pOnA+ZyYmbSgwLHIsZixkKX1mdW5jdGlvbiBfKHIsaSxvLGEpe2lmKHIhPT1pKXt2YXIgcz1pLmVsbT1yLmVsbTtpZihuKHIuaXNBc3luY1BsYWNlaG9sZGVyKSllKGkuYXN5bmNGYWN0b3J5LnJlc29sdmVkKT8kKHIuZWxtLGksbyk6aS5pc0FzeW5jUGxhY2Vob2xkZXI9ITA7ZWxzZSBpZihuKGkuaXNTdGF0aWMpJiZuKHIuaXNTdGF0aWMpJiZpLmtleT09PXIua2V5JiYobihpLmlzQ2xvbmVkKXx8bihpLmlzT25jZSkpKWkuY29tcG9uZW50SW5zdGFuY2U9ci5jb21wb25lbnRJbnN0YW5jZTtlbHNle3ZhciBjLHU9aS5kYXRhO2UodSkmJmUoYz11Lmhvb2spJiZlKGM9Yy5wcmVwYXRjaCkmJmMocixpKTt2YXIgbD1yLmNoaWxkcmVuLHA9aS5jaGlsZHJlbjtpZihlKHUpJiZmKGkpKXtmb3IoYz0wO2M8eC51cGRhdGUubGVuZ3RoOysrYyl4LnVwZGF0ZVtjXShyLGkpO2UoYz11Lmhvb2spJiZlKGM9Yy51cGRhdGUpJiZjKHIsaSl9dChpLnRleHQpP2UobCkmJmUocCk/bCE9PXAmJmcocyxsLHAsbyxhKTplKHApPyhlKHIudGV4dCkmJkEuc2V0VGV4dENvbnRlbnQocyxcIlwiKSx2KHMsbnVsbCxwLDAscC5sZW5ndGgtMSxvKSk6ZShsKT9tKDAsbCwwLGwubGVuZ3RoLTEpOmUoci50ZXh0KSYmQS5zZXRUZXh0Q29udGVudChzLFwiXCIpOnIudGV4dCE9PWkudGV4dCYmQS5zZXRUZXh0Q29udGVudChzLGkudGV4dCksZSh1KSYmZShjPXUuaG9vaykmJmUoYz1jLnBvc3RwYXRjaCkmJmMocixpKX19fWZ1bmN0aW9uIGIodCxyLGkpe2lmKG4oaSkmJmUodC5wYXJlbnQpKXQucGFyZW50LmRhdGEucGVuZGluZ0luc2VydD1yO2Vsc2UgZm9yKHZhciBvPTA7bzxyLmxlbmd0aDsrK28pcltvXS5kYXRhLmhvb2suaW5zZXJ0KHJbb10pfWZ1bmN0aW9uICQodCxyLGksbyl7dmFyIGEsYz1yLnRhZyx1PXIuZGF0YSxmPXIuY2hpbGRyZW47aWYobz1vfHx1JiZ1LnByZSxyLmVsbT10LG4oci5pc0NvbW1lbnQpJiZlKHIuYXN5bmNGYWN0b3J5KSlyZXR1cm4gci5pc0FzeW5jUGxhY2Vob2xkZXI9ITAsITA7aWYoZSh1KSYmKGUoYT11Lmhvb2spJiZlKGE9YS5pbml0KSYmYShyLCEwKSxlKGE9ci5jb21wb25lbnRJbnN0YW5jZSkpKXJldHVybiBzKHIsaSksITA7aWYoZShjKSl7aWYoZShmKSlpZih0Lmhhc0NoaWxkTm9kZXMoKSlpZihlKGE9dSkmJmUoYT1hLmRvbVByb3BzKSYmZShhPWEuaW5uZXJIVE1MKSl7aWYoYSE9PXQuaW5uZXJIVE1MKXJldHVybiExfWVsc2V7Zm9yKHZhciBkPSEwLHY9dC5maXJzdENoaWxkLGg9MDtoPGYubGVuZ3RoO2grKyl7aWYoIXZ8fCEkKHYsZltoXSxpLG8pKXtkPSExO2JyZWFrfXY9di5uZXh0U2libGluZ31pZighZHx8dilyZXR1cm4hMX1lbHNlIGwocixmLGkpO2lmKGUodSkpe3ZhciBtPSExO2Zvcih2YXIgeSBpbiB1KWlmKCFPKHkpKXttPSEwLHAocixpKTticmVha30hbSYmdS5jbGFzcyYmVyh1LmNsYXNzKX19ZWxzZSB0LmRhdGEhPT1yLnRleHQmJih0LmRhdGE9ci50ZXh0KTtyZXR1cm4hMH12YXIgQyx3LHg9e30saz1pLm1vZHVsZXMsQT1pLm5vZGVPcHM7Zm9yKEM9MDtDPE9pLmxlbmd0aDsrK0MpZm9yKHhbT2lbQ11dPVtdLHc9MDt3PGsubGVuZ3RoOysrdyllKGtbd11bT2lbQ11dKSYmeFtPaVtDXV0ucHVzaChrW3ddW09pW0NdXSk7dmFyIE89dShcImF0dHJzLGNsYXNzLHN0YXRpY0NsYXNzLHN0YXRpY1N0eWxlLGtleVwiKTtyZXR1cm4gZnVuY3Rpb24ocixpLG8scyxjLHUpe2lmKCF0KGkpKXt2YXIgbD0hMSxwPVtdO2lmKHQocikpbD0hMCxhKGkscCxjLHUpO2Vsc2V7dmFyIGQ9ZShyLm5vZGVUeXBlKTtpZighZCYmWXQocixpKSlfKHIsaSxwLHMpO2Vsc2V7aWYoZCl7aWYoMT09PXIubm9kZVR5cGUmJnIuaGFzQXR0cmlidXRlKFZuKSYmKHIucmVtb3ZlQXR0cmlidXRlKFZuKSxvPSEwKSxuKG8pJiYkKHIsaSxwKSlyZXR1cm4gYihpLHAsITApLHI7cj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG1yKEEudGFnTmFtZSh0KS50b0xvd2VyQ2FzZSgpLHt9LFtdLHZvaWQgMCx0KX0ocil9dmFyIHY9ci5lbG0seT1BLnBhcmVudE5vZGUodik7aWYoYShpLHAsdi5fbGVhdmVDYj9udWxsOnksQS5uZXh0U2libGluZyh2KSksZShpLnBhcmVudCkpZm9yKHZhciBnPWkucGFyZW50LEM9ZihpKTtnOyl7Zm9yKHZhciB3PTA7dzx4LmRlc3Ryb3kubGVuZ3RoOysrdyl4LmRlc3Ryb3lbd10oZyk7aWYoZy5lbG09aS5lbG0sQyl7Zm9yKHZhciBrPTA7azx4LmNyZWF0ZS5sZW5ndGg7KytrKXguY3JlYXRlW2tdKEFpLGcpO3ZhciBPPWcuZGF0YS5ob29rLmluc2VydDtpZihPLm1lcmdlZClmb3IodmFyIFM9MTtTPE8uZm5zLmxlbmd0aDtTKyspTy5mbnNbU10oKX1lbHNlIFh0KGcpO2c9Zy5wYXJlbnR9ZSh5KT9tKDAsW3JdLDAsMCk6ZShyLnRhZykmJmgocil9fXJldHVybiBiKGkscCxsKSxpLmVsbX1lKHIpJiZoKHIpfX0oe25vZGVPcHM6eGksbW9kdWxlczpbamksTmksRGksUGksemksR24/e2NyZWF0ZTpWZSxhY3RpdmF0ZTpWZSxyZW1vdmU6ZnVuY3Rpb24odCxlKXshMCE9PXQuZGF0YS5zaG93P0hlKHQsZSk6ZSgpfX06e31dLmNvbmNhdChFaSl9KTt0ciYmZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInNlbGVjdGlvbmNoYW5nZVwiLGZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDt0JiZ0LnZtb2RlbCYmWmUodCxcImlucHV0XCIpfSk7dmFyIG5vPXtpbnNlcnRlZDpmdW5jdGlvbih0LGUsbixyKXtcInNlbGVjdFwiPT09bi50YWc/KHIuZWxtJiYhci5lbG0uX3ZPcHRpb25zP1kobixcInBvc3RwYXRjaFwiLGZ1bmN0aW9uKCl7bm8uY29tcG9uZW50VXBkYXRlZCh0LGUsbil9KTp6ZSh0LGUsbi5jb250ZXh0KSx0Ll92T3B0aW9ucz1bXS5tYXAuY2FsbCh0Lm9wdGlvbnMscWUpKTooXCJ0ZXh0YXJlYVwiPT09bi50YWd8fHdpKHQudHlwZSkpJiYodC5fdk1vZGlmaWVycz1lLm1vZGlmaWVycyxlLm1vZGlmaWVycy5sYXp5fHwodC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsR2UpLG5yfHwodC5hZGRFdmVudExpc3RlbmVyKFwiY29tcG9zaXRpb25zdGFydFwiLFdlKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJjb21wb3NpdGlvbmVuZFwiLEdlKSksdHImJih0LnZtb2RlbD0hMCkpKX0sY29tcG9uZW50VXBkYXRlZDpmdW5jdGlvbih0LGUsbil7aWYoXCJzZWxlY3RcIj09PW4udGFnKXt6ZSh0LGUsbi5jb250ZXh0KTt2YXIgcj10Ll92T3B0aW9ucyxpPXQuX3ZPcHRpb25zPVtdLm1hcC5jYWxsKHQub3B0aW9ucyxxZSk7aWYoaS5zb21lKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIWcodCxyW2VdKX0pKXsodC5tdWx0aXBsZT9lLnZhbHVlLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIEplKHQsaSl9KTplLnZhbHVlIT09ZS5vbGRWYWx1ZSYmSmUoZS52YWx1ZSxpKSkmJlplKHQsXCJjaGFuZ2VcIil9fX19LHJvPXttb2RlbDpubyxzaG93OntiaW5kOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLnZhbHVlLGk9KG49WGUobikpLmRhdGEmJm4uZGF0YS50cmFuc2l0aW9uLG89dC5fX3ZPcmlnaW5hbERpc3BsYXk9XCJub25lXCI9PT10LnN0eWxlLmRpc3BsYXk/XCJcIjp0LnN0eWxlLmRpc3BsYXk7ciYmaT8obi5kYXRhLnNob3c9ITAsUmUobixmdW5jdGlvbigpe3Quc3R5bGUuZGlzcGxheT1vfSkpOnQuc3R5bGUuZGlzcGxheT1yP286XCJub25lXCJ9LHVwZGF0ZTpmdW5jdGlvbih0LGUsbil7dmFyIHI9ZS52YWx1ZTtpZihyIT09ZS5vbGRWYWx1ZSl7KG49WGUobikpLmRhdGEmJm4uZGF0YS50cmFuc2l0aW9uPyhuLmRhdGEuc2hvdz0hMCxyP1JlKG4sZnVuY3Rpb24oKXt0LnN0eWxlLmRpc3BsYXk9dC5fX3ZPcmlnaW5hbERpc3BsYXl9KTpIZShuLGZ1bmN0aW9uKCl7dC5zdHlsZS5kaXNwbGF5PVwibm9uZVwifSkpOnQuc3R5bGUuZGlzcGxheT1yP3QuX192T3JpZ2luYWxEaXNwbGF5Olwibm9uZVwifX0sdW5iaW5kOmZ1bmN0aW9uKHQsZSxuLHIsaSl7aXx8KHQuc3R5bGUuZGlzcGxheT10Ll9fdk9yaWdpbmFsRGlzcGxheSl9fX0saW89e25hbWU6U3RyaW5nLGFwcGVhcjpCb29sZWFuLGNzczpCb29sZWFuLG1vZGU6U3RyaW5nLHR5cGU6U3RyaW5nLGVudGVyQ2xhc3M6U3RyaW5nLGxlYXZlQ2xhc3M6U3RyaW5nLGVudGVyVG9DbGFzczpTdHJpbmcsbGVhdmVUb0NsYXNzOlN0cmluZyxlbnRlckFjdGl2ZUNsYXNzOlN0cmluZyxsZWF2ZUFjdGl2ZUNsYXNzOlN0cmluZyxhcHBlYXJDbGFzczpTdHJpbmcsYXBwZWFyQWN0aXZlQ2xhc3M6U3RyaW5nLGFwcGVhclRvQ2xhc3M6U3RyaW5nLGR1cmF0aW9uOltOdW1iZXIsU3RyaW5nLE9iamVjdF19LG9vPXtuYW1lOlwidHJhbnNpdGlvblwiLHByb3BzOmlvLGFic3RyYWN0OiEwLHJlbmRlcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcy4kc2xvdHMuZGVmYXVsdDtpZihuJiYobj1uLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdC50YWd8fHJ0KHQpfSkpLmxlbmd0aCl7dmFyIGk9dGhpcy5tb2RlLG89blswXTtpZihmdW5jdGlvbih0KXtmb3IoO3Q9dC5wYXJlbnQ7KWlmKHQuZGF0YS50cmFuc2l0aW9uKXJldHVybiEwfSh0aGlzLiR2bm9kZSkpcmV0dXJuIG87dmFyIGE9WWUobyk7aWYoIWEpcmV0dXJuIG87aWYodGhpcy5fbGVhdmluZylyZXR1cm4gdG4odCxvKTt2YXIgcz1cIl9fdHJhbnNpdGlvbi1cIit0aGlzLl91aWQrXCItXCI7YS5rZXk9bnVsbD09YS5rZXk/YS5pc0NvbW1lbnQ/cytcImNvbW1lbnRcIjpzK2EudGFnOnIoYS5rZXkpPzA9PT1TdHJpbmcoYS5rZXkpLmluZGV4T2Yocyk/YS5rZXk6cythLmtleTphLmtleTt2YXIgYz0oYS5kYXRhfHwoYS5kYXRhPXt9KSkudHJhbnNpdGlvbj1RZSh0aGlzKSx1PXRoaXMuX3Zub2RlLGw9WWUodSk7aWYoYS5kYXRhLmRpcmVjdGl2ZXMmJmEuZGF0YS5kaXJlY3RpdmVzLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuXCJzaG93XCI9PT10Lm5hbWV9KSYmKGEuZGF0YS5zaG93PSEwKSxsJiZsLmRhdGEmJiFmdW5jdGlvbih0LGUpe3JldHVybiBlLmtleT09PXQua2V5JiZlLnRhZz09PXQudGFnfShhLGwpJiYhcnQobCkmJighbC5jb21wb25lbnRJbnN0YW5jZXx8IWwuY29tcG9uZW50SW5zdGFuY2UuX3Zub2RlLmlzQ29tbWVudCkpe3ZhciBmPWwuZGF0YS50cmFuc2l0aW9uPWgoe30sYyk7aWYoXCJvdXQtaW5cIj09PWkpcmV0dXJuIHRoaXMuX2xlYXZpbmc9ITAsWShmLFwiYWZ0ZXJMZWF2ZVwiLGZ1bmN0aW9uKCl7ZS5fbGVhdmluZz0hMSxlLiRmb3JjZVVwZGF0ZSgpfSksdG4odCxvKTtpZihcImluLW91dFwiPT09aSl7aWYocnQoYSkpcmV0dXJuIHU7dmFyIHAsZD1mdW5jdGlvbigpe3AoKX07WShjLFwiYWZ0ZXJFbnRlclwiLGQpLFkoYyxcImVudGVyQ2FuY2VsbGVkXCIsZCksWShmLFwiZGVsYXlMZWF2ZVwiLGZ1bmN0aW9uKHQpe3A9dH0pfX1yZXR1cm4gb319fSxhbz1oKHt0YWc6U3RyaW5nLG1vdmVDbGFzczpTdHJpbmd9LGlvKTtkZWxldGUgYW8ubW9kZTt2YXIgc289e1RyYW5zaXRpb246b28sVHJhbnNpdGlvbkdyb3VwOntwcm9wczphbyxyZW5kZXI6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMudGFnfHx0aGlzLiR2bm9kZS5kYXRhLnRhZ3x8XCJzcGFuXCIsbj1PYmplY3QuY3JlYXRlKG51bGwpLHI9dGhpcy5wcmV2Q2hpbGRyZW49dGhpcy5jaGlsZHJlbixpPXRoaXMuJHNsb3RzLmRlZmF1bHR8fFtdLG89dGhpcy5jaGlsZHJlbj1bXSxhPVFlKHRoaXMpLHM9MDtzPGkubGVuZ3RoO3MrKyl7dmFyIGM9aVtzXTtjLnRhZyYmbnVsbCE9Yy5rZXkmJjAhPT1TdHJpbmcoYy5rZXkpLmluZGV4T2YoXCJfX3ZsaXN0XCIpJiYoby5wdXNoKGMpLG5bYy5rZXldPWMsKGMuZGF0YXx8KGMuZGF0YT17fSkpLnRyYW5zaXRpb249YSl9aWYocil7Zm9yKHZhciB1PVtdLGw9W10sZj0wO2Y8ci5sZW5ndGg7ZisrKXt2YXIgcD1yW2ZdO3AuZGF0YS50cmFuc2l0aW9uPWEscC5kYXRhLnBvcz1wLmVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxuW3Aua2V5XT91LnB1c2gocCk6bC5wdXNoKHApfXRoaXMua2VwdD10KGUsbnVsbCx1KSx0aGlzLnJlbW92ZWQ9bH1yZXR1cm4gdChlLG51bGwsbyl9LGJlZm9yZVVwZGF0ZTpmdW5jdGlvbigpe3RoaXMuX19wYXRjaF9fKHRoaXMuX3Zub2RlLHRoaXMua2VwdCwhMSwhMCksdGhpcy5fdm5vZGU9dGhpcy5rZXB0fSx1cGRhdGVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5wcmV2Q2hpbGRyZW4sZT10aGlzLm1vdmVDbGFzc3x8KHRoaXMubmFtZXx8XCJ2XCIpK1wiLW1vdmVcIjt0Lmxlbmd0aCYmdGhpcy5oYXNNb3ZlKHRbMF0uZWxtLGUpJiYodC5mb3JFYWNoKGVuKSx0LmZvckVhY2gobm4pLHQuZm9yRWFjaChybiksdGhpcy5fcmVmbG93PWRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0LHQuZm9yRWFjaChmdW5jdGlvbih0KXtpZih0LmRhdGEubW92ZWQpe3ZhciBuPXQuZWxtLHI9bi5zdHlsZTtJZShuLGUpLHIudHJhbnNmb3JtPXIuV2Via2l0VHJhbnNmb3JtPXIudHJhbnNpdGlvbkR1cmF0aW9uPVwiXCIsbi5hZGRFdmVudExpc3RlbmVyKFppLG4uX21vdmVDYj1mdW5jdGlvbiB0KHIpe3ImJiEvdHJhbnNmb3JtJC8udGVzdChyLnByb3BlcnR5TmFtZSl8fChuLnJlbW92ZUV2ZW50TGlzdGVuZXIoWmksdCksbi5fbW92ZUNiPW51bGwsTGUobixlKSl9KX19KSl9LG1ldGhvZHM6e2hhc01vdmU6ZnVuY3Rpb24odCxlKXtpZighSmkpcmV0dXJuITE7aWYodGhpcy5faGFzTW92ZSlyZXR1cm4gdGhpcy5faGFzTW92ZTt2YXIgbj10LmNsb25lTm9kZSgpO3QuX3RyYW5zaXRpb25DbGFzc2VzJiZ0Ll90cmFuc2l0aW9uQ2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe0VlKG4sdCl9KSxUZShuLGUpLG4uc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzLiRlbC5hcHBlbmRDaGlsZChuKTt2YXIgcj1EZShuKTtyZXR1cm4gdGhpcy4kZWwucmVtb3ZlQ2hpbGQobiksdGhpcy5faGFzTW92ZT1yLmhhc1RyYW5zZm9ybX19fX07UnQuY29uZmlnLm11c3RVc2VQcm9wPWZpLFJ0LmNvbmZpZy5pc1Jlc2VydmVkVGFnPSRpLFJ0LmNvbmZpZy5pc1Jlc2VydmVkQXR0cj11aSxSdC5jb25maWcuZ2V0VGFnTmFtZXNwYWNlPUd0LFJ0LmNvbmZpZy5pc1Vua25vd25FbGVtZW50PWZ1bmN0aW9uKHQpe2lmKCFHbilyZXR1cm4hMDtpZigkaSh0KSlyZXR1cm4hMTtpZih0PXQudG9Mb3dlckNhc2UoKSxudWxsIT1DaVt0XSlyZXR1cm4gQ2lbdF07dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KTtyZXR1cm4gdC5pbmRleE9mKFwiLVwiKT4tMT9DaVt0XT1lLmNvbnN0cnVjdG9yPT09d2luZG93LkhUTUxVbmtub3duRWxlbWVudHx8ZS5jb25zdHJ1Y3Rvcj09PXdpbmRvdy5IVE1MRWxlbWVudDpDaVt0XT0vSFRNTFVua25vd25FbGVtZW50Ly50ZXN0KGUudG9TdHJpbmcoKSl9LGgoUnQub3B0aW9ucy5kaXJlY3RpdmVzLHJvKSxoKFJ0Lm9wdGlvbnMuY29tcG9uZW50cyxzbyksUnQucHJvdG90eXBlLl9fcGF0Y2hfXz1Hbj9lbzp5LFJ0LnByb3RvdHlwZS4kbW91bnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD10JiZHbj9adCh0KTp2b2lkIDAsZnVuY3Rpb24odCxlLG4pe3QuJGVsPWUsdC4kb3B0aW9ucy5yZW5kZXJ8fCh0LiRvcHRpb25zLnJlbmRlcj1nciksdnQodCxcImJlZm9yZU1vdW50XCIpO3ZhciByO3JldHVybiByPWZ1bmN0aW9uKCl7dC5fdXBkYXRlKHQuX3JlbmRlcigpLG4pfSxuZXcgS3IodCxyLHksbnVsbCwhMCksbj0hMSxudWxsPT10LiR2bm9kZSYmKHQuX2lzTW91bnRlZD0hMCx2dCh0LFwibW91bnRlZFwiKSksdH0odGhpcyx0LGUpfSxSdC5uZXh0VGljayhmdW5jdGlvbigpe0puLmRldnRvb2xzJiZsciYmbHIuZW1pdChcImluaXRcIixSdCl9LDApO3ZhciBjbyx1bz0vXFx7XFx7KCg/Oi58XFxuKSs/KVxcfVxcfS9nLGxvPS9bLS4qKz9eJHt9KCl8W1xcXVxcL1xcXFxdL2csZm89cChmdW5jdGlvbih0KXt2YXIgZT10WzBdLnJlcGxhY2UobG8sXCJcXFxcJCZcIiksbj10WzFdLnJlcGxhY2UobG8sXCJcXFxcJCZcIik7cmV0dXJuIG5ldyBSZWdFeHAoZStcIigoPzoufFxcXFxuKSs/KVwiK24sXCJnXCIpfSkscG89e3N0YXRpY0tleXM6W1wic3RhdGljQ2xhc3NcIl0sdHJhbnNmb3JtTm9kZTpmdW5jdGlvbih0LGUpe2Uud2Fybjt2YXIgbj1oZSh0LFwiY2xhc3NcIik7biYmKHQuc3RhdGljQ2xhc3M9SlNPTi5zdHJpbmdpZnkobikpO3ZhciByPXZlKHQsXCJjbGFzc1wiLCExKTtyJiYodC5jbGFzc0JpbmRpbmc9cil9LGdlbkRhdGE6ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtyZXR1cm4gdC5zdGF0aWNDbGFzcyYmKGUrPVwic3RhdGljQ2xhc3M6XCIrdC5zdGF0aWNDbGFzcytcIixcIiksdC5jbGFzc0JpbmRpbmcmJihlKz1cImNsYXNzOlwiK3QuY2xhc3NCaW5kaW5nK1wiLFwiKSxlfX0sdm89e3N0YXRpY0tleXM6W1wic3RhdGljU3R5bGVcIl0sdHJhbnNmb3JtTm9kZTpmdW5jdGlvbih0LGUpe2Uud2Fybjt2YXIgbj1oZSh0LFwic3R5bGVcIik7biYmKHQuc3RhdGljU3R5bGU9SlNPTi5zdHJpbmdpZnkoRmkobikpKTt2YXIgcj12ZSh0LFwic3R5bGVcIiwhMSk7ciYmKHQuc3R5bGVCaW5kaW5nPXIpfSxnZW5EYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPVwiXCI7cmV0dXJuIHQuc3RhdGljU3R5bGUmJihlKz1cInN0YXRpY1N0eWxlOlwiK3Quc3RhdGljU3R5bGUrXCIsXCIpLHQuc3R5bGVCaW5kaW5nJiYoZSs9XCJzdHlsZTooXCIrdC5zdHlsZUJpbmRpbmcrXCIpLFwiKSxlfX0saG89ZnVuY3Rpb24odCl7cmV0dXJuIGNvPWNvfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGNvLmlubmVySFRNTD10LGNvLnRleHRDb250ZW50fSxtbz11KFwiYXJlYSxiYXNlLGJyLGNvbCxlbWJlZCxmcmFtZSxocixpbWcsaW5wdXQsaXNpbmRleCxrZXlnZW4sbGluayxtZXRhLHBhcmFtLHNvdXJjZSx0cmFjayx3YnJcIikseW89dShcImNvbGdyb3VwLGRkLGR0LGxpLG9wdGlvbnMscCx0ZCx0Zm9vdCx0aCx0aGVhZCx0cixzb3VyY2VcIiksZ289dShcImFkZHJlc3MsYXJ0aWNsZSxhc2lkZSxiYXNlLGJsb2NrcXVvdGUsYm9keSxjYXB0aW9uLGNvbCxjb2xncm91cCxkZCxkZXRhaWxzLGRpYWxvZyxkaXYsZGwsZHQsZmllbGRzZXQsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGZvcm0saDEsaDIsaDMsaDQsaDUsaDYsaGVhZCxoZWFkZXIsaGdyb3VwLGhyLGh0bWwsbGVnZW5kLGxpLG1lbnVpdGVtLG1ldGEsb3B0Z3JvdXAsb3B0aW9uLHBhcmFtLHJwLHJ0LHNvdXJjZSxzdHlsZSxzdW1tYXJ5LHRib2R5LHRkLHRmb290LHRoLHRoZWFkLHRpdGxlLHRyLHRyYWNrXCIpLF9vPS9eXFxzKihbXlxcc1wiJzw+XFwvPV0rKSg/OlxccyooPSlcXHMqKD86XCIoW15cIl0qKVwiK3wnKFteJ10qKScrfChbXlxcc1wiJz08PmBdKykpKT8vLGJvPVwiW2EtekEtWl9dW1xcXFx3XFxcXC1cXFxcLl0qXCIsJG89XCIoKD86XCIrYm8rXCJcXFxcOik/XCIrYm8rXCIpXCIsQ289bmV3IFJlZ0V4cChcIl48XCIrJG8pLHdvPS9eXFxzKihcXC8/KT4vLHhvPW5ldyBSZWdFeHAoXCJePFxcXFwvXCIrJG8rXCJbXj5dKj5cIiksa289L148IURPQ1RZUEUgW14+XSs+L2ksQW89L148IS0tLyxPbz0vXjwhXFxbLyxTbz0hMTtcInhcIi5yZXBsYWNlKC94KC4pPy9nLGZ1bmN0aW9uKHQsZSl7U289XCJcIj09PWV9KTt2YXIgVG8sRW8sam8sTm8sSW8sTG8sTW8sRG8sUG8sRm8sUm8sSG89dShcInNjcmlwdCxzdHlsZSx0ZXh0YXJlYVwiLCEwKSxCbz17fSxVbz17XCImbHQ7XCI6XCI8XCIsXCImZ3Q7XCI6XCI+XCIsXCImcXVvdDtcIjonXCInLFwiJmFtcDtcIjpcIiZcIixcIiYjMTA7XCI6XCJcXG5cIixcIiYjOTtcIjpcIlxcdFwifSxWbz0vJig/Omx0fGd0fHF1b3R8YW1wKTsvZyx6bz0vJig/Omx0fGd0fHF1b3R8YW1wfCMxMHwjOSk7L2csS289dShcInByZSx0ZXh0YXJlYVwiLCEwKSxKbz1mdW5jdGlvbih0LGUpe3JldHVybiB0JiZLbyh0KSYmXCJcXG5cIj09PWVbMF19LHFvPS9eQHxedi1vbjovLFdvPS9edi18XkB8XjovLEdvPS8oLio/KVxccysoPzppbnxvZilcXHMrKC4qKS8sWm89LywoW14sXFx9XFxdXSopKD86LChbXixcXH1cXF1dKikpPyQvLFhvPS9eXFwofFxcKSQvZyxZbz0vOiguKikkLyxRbz0vXjp8XnYtYmluZDovLHRhPS9cXC5bXi5dKy9nLGVhPXAoaG8pLG5hPS9eeG1sbnM6TlNcXGQrLyxyYT0vXk5TXFxkKzovLGlhPVtwbyx2byx7cHJlVHJhbnNmb3JtTm9kZTpmdW5jdGlvbih0LGUpe2lmKFwiaW5wdXRcIj09PXQudGFnKXt2YXIgbj10LmF0dHJzTWFwO2lmKG5bXCJ2LW1vZGVsXCJdJiYobltcInYtYmluZDp0eXBlXCJdfHxuW1wiOnR5cGVcIl0pKXt2YXIgcj12ZSh0LFwidHlwZVwiKSxpPWhlKHQsXCJ2LWlmXCIsITApLG89aT9cIiYmKFwiK2krXCIpXCI6XCJcIixhPW51bGwhPWhlKHQsXCJ2LWVsc2VcIiwhMCkscz1oZSh0LFwidi1lbHNlLWlmXCIsITApLGM9Zm4odCk7dW4oYyksZmUoYyxcInR5cGVcIixcImNoZWNrYm94XCIpLGNuKGMsZSksYy5wcm9jZXNzZWQ9ITAsYy5pZj1cIihcIityK1wiKT09PSdjaGVja2JveCdcIitvLGxuKGMse2V4cDpjLmlmLGJsb2NrOmN9KTt2YXIgdT1mbih0KTtoZSh1LFwidi1mb3JcIiwhMCksZmUodSxcInR5cGVcIixcInJhZGlvXCIpLGNuKHUsZSksbG4oYyx7ZXhwOlwiKFwiK3IrXCIpPT09J3JhZGlvJ1wiK28sYmxvY2s6dX0pO3ZhciBsPWZuKHQpO3JldHVybiBoZShsLFwidi1mb3JcIiwhMCksZmUobCxcIjp0eXBlXCIsciksY24obCxlKSxsbihjLHtleHA6aSxibG9jazpsfSksYT9jLmVsc2U9ITA6cyYmKGMuZWxzZWlmPXMpLGN9fX19XSxvYT17ZXhwZWN0SFRNTDohMCxtb2R1bGVzOmlhLGRpcmVjdGl2ZXM6e21vZGVsOmZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1lLnZhbHVlLGk9ZS5tb2RpZmllcnMsbz10LnRhZyxhPXQuYXR0cnNNYXAudHlwZTtpZih0LmNvbXBvbmVudClyZXR1cm4gbWUodCxyLGkpLCExO2lmKFwic2VsZWN0XCI9PT1vKSFmdW5jdGlvbih0LGUsbil7dmFyIHI9J3ZhciAkJHNlbGVjdGVkVmFsID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucyxmdW5jdGlvbihvKXtyZXR1cm4gby5zZWxlY3RlZH0pLm1hcChmdW5jdGlvbihvKXt2YXIgdmFsID0gXCJfdmFsdWVcIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlO3JldHVybiAnKyhuJiZuLm51bWJlcj9cIl9uKHZhbClcIjpcInZhbFwiKStcIn0pO1wiO3I9citcIiBcIit5ZShlLFwiJGV2ZW50LnRhcmdldC5tdWx0aXBsZSA/ICQkc2VsZWN0ZWRWYWwgOiAkJHNlbGVjdGVkVmFsWzBdXCIpLGRlKHQsXCJjaGFuZ2VcIixyLG51bGwsITApfSh0LHIsaSk7ZWxzZSBpZihcImlucHV0XCI9PT1vJiZcImNoZWNrYm94XCI9PT1hKSFmdW5jdGlvbih0LGUsbil7dmFyIHI9biYmbi5udW1iZXIsaT12ZSh0LFwidmFsdWVcIil8fFwibnVsbFwiLG89dmUodCxcInRydWUtdmFsdWVcIil8fFwidHJ1ZVwiLGE9dmUodCxcImZhbHNlLXZhbHVlXCIpfHxcImZhbHNlXCI7dWUodCxcImNoZWNrZWRcIixcIkFycmF5LmlzQXJyYXkoXCIrZStcIik/X2koXCIrZStcIixcIitpK1wiKT4tMVwiKyhcInRydWVcIj09PW8/XCI6KFwiK2UrXCIpXCI6XCI6X3EoXCIrZStcIixcIitvK1wiKVwiKSksZGUodCxcImNoYW5nZVwiLFwidmFyICQkYT1cIitlK1wiLCQkZWw9JGV2ZW50LnRhcmdldCwkJGM9JCRlbC5jaGVja2VkPyhcIitvK1wiKTooXCIrYStcIik7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PVwiKyhyP1wiX24oXCIraStcIilcIjppKStcIiwkJGk9X2koJCRhLCQkdik7aWYoJCRlbC5jaGVja2VkKXskJGk8MCYmKFwiK2UrXCI9JCRhLmNvbmNhdChbJCR2XSkpfWVsc2V7JCRpPi0xJiYoXCIrZStcIj0kJGEuc2xpY2UoMCwkJGkpLmNvbmNhdCgkJGEuc2xpY2UoJCRpKzEpKSl9fWVsc2V7XCIreWUoZSxcIiQkY1wiKStcIn1cIixudWxsLCEwKX0odCxyLGkpO2Vsc2UgaWYoXCJpbnB1dFwiPT09byYmXCJyYWRpb1wiPT09YSkhZnVuY3Rpb24odCxlLG4pe3ZhciByPW4mJm4ubnVtYmVyLGk9dmUodCxcInZhbHVlXCIpfHxcIm51bGxcIjt1ZSh0LFwiY2hlY2tlZFwiLFwiX3EoXCIrZStcIixcIisoaT1yP1wiX24oXCIraStcIilcIjppKStcIilcIiksZGUodCxcImNoYW5nZVwiLHllKGUsaSksbnVsbCwhMCl9KHQscixpKTtlbHNlIGlmKFwiaW5wdXRcIj09PW98fFwidGV4dGFyZWFcIj09PW8pIWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10LmF0dHJzTWFwLnR5cGUsaT1ufHx7fSxvPWkubGF6eSxhPWkubnVtYmVyLHM9aS50cmltLGM9IW8mJlwicmFuZ2VcIiE9PXIsdT1vP1wiY2hhbmdlXCI6XCJyYW5nZVwiPT09cj9MaTpcImlucHV0XCIsbD1cIiRldmVudC50YXJnZXQudmFsdWVcIjtzJiYobD1cIiRldmVudC50YXJnZXQudmFsdWUudHJpbSgpXCIpLGEmJihsPVwiX24oXCIrbCtcIilcIik7dmFyIGY9eWUoZSxsKTtjJiYoZj1cImlmKCRldmVudC50YXJnZXQuY29tcG9zaW5nKXJldHVybjtcIitmKSx1ZSh0LFwidmFsdWVcIixcIihcIitlK1wiKVwiKSxkZSh0LHUsZixudWxsLCEwKSwoc3x8YSkmJmRlKHQsXCJibHVyXCIsXCIkZm9yY2VVcGRhdGUoKVwiKX0odCxyLGkpO2Vsc2UgaWYoIUpuLmlzUmVzZXJ2ZWRUYWcobykpcmV0dXJuIG1lKHQscixpKSwhMTtyZXR1cm4hMH0sdGV4dDpmdW5jdGlvbih0LGUpe2UudmFsdWUmJnVlKHQsXCJ0ZXh0Q29udGVudFwiLFwiX3MoXCIrZS52YWx1ZStcIilcIil9LGh0bWw6ZnVuY3Rpb24odCxlKXtlLnZhbHVlJiZ1ZSh0LFwiaW5uZXJIVE1MXCIsXCJfcyhcIitlLnZhbHVlK1wiKVwiKX19LGlzUHJlVGFnOmZ1bmN0aW9uKHQpe3JldHVyblwicHJlXCI9PT10fSxpc1VuYXJ5VGFnOm1vLG11c3RVc2VQcm9wOmZpLGNhbkJlTGVmdE9wZW5UYWc6eW8saXNSZXNlcnZlZFRhZzokaSxnZXRUYWdOYW1lc3BhY2U6R3Qsc3RhdGljS2V5czpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5jb25jYXQoZS5zdGF0aWNLZXlzfHxbXSl9LFtdKS5qb2luKFwiLFwiKX0oaWEpfSxhYT1wKGZ1bmN0aW9uKHQpe3JldHVybiB1KFwidHlwZSx0YWcsYXR0cnNMaXN0LGF0dHJzTWFwLHBsYWluLHBhcmVudCxjaGlsZHJlbixhdHRyc1wiKyh0P1wiLFwiK3Q6XCJcIikpfSksc2E9L15cXHMqKFtcXHckX10rfFxcKFteKV0qP1xcKSlcXHMqPT58XmZ1bmN0aW9uXFxzKlxcKC8sY2E9L15cXHMqW0EtWmEtel8kXVtcXHckXSooPzpcXC5bQS1aYS16XyRdW1xcdyRdKnxcXFsnLio/J118XFxbXCIuKj9cIl18XFxbXFxkK118XFxbW0EtWmEtel8kXVtcXHckXSpdKSpcXHMqJC8sdWE9e2VzYzoyNyx0YWI6OSxlbnRlcjoxMyxzcGFjZTozMix1cDozOCxsZWZ0OjM3LHJpZ2h0OjM5LGRvd246NDAsZGVsZXRlOls4LDQ2XX0sbGE9ZnVuY3Rpb24odCl7cmV0dXJuXCJpZihcIit0K1wiKXJldHVybiBudWxsO1wifSxmYT17c3RvcDpcIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcIixwcmV2ZW50OlwiJGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XCIsc2VsZjpsYShcIiRldmVudC50YXJnZXQgIT09ICRldmVudC5jdXJyZW50VGFyZ2V0XCIpLGN0cmw6bGEoXCIhJGV2ZW50LmN0cmxLZXlcIiksc2hpZnQ6bGEoXCIhJGV2ZW50LnNoaWZ0S2V5XCIpLGFsdDpsYShcIiEkZXZlbnQuYWx0S2V5XCIpLG1ldGE6bGEoXCIhJGV2ZW50Lm1ldGFLZXlcIiksbGVmdDpsYShcIididXR0b24nIGluICRldmVudCAmJiAkZXZlbnQuYnV0dG9uICE9PSAwXCIpLG1pZGRsZTpsYShcIididXR0b24nIGluICRldmVudCAmJiAkZXZlbnQuYnV0dG9uICE9PSAxXCIpLHJpZ2h0OmxhKFwiJ2J1dHRvbicgaW4gJGV2ZW50ICYmICRldmVudC5idXR0b24gIT09IDJcIil9LHBhPXtvbjpmdW5jdGlvbih0LGUpe3Qud3JhcExpc3RlbmVycz1mdW5jdGlvbih0KXtyZXR1cm5cIl9nKFwiK3QrXCIsXCIrZS52YWx1ZStcIilcIn19LGJpbmQ6ZnVuY3Rpb24odCxlKXt0LndyYXBEYXRhPWZ1bmN0aW9uKG4pe3JldHVyblwiX2IoXCIrbitcIiwnXCIrdC50YWcrXCInLFwiK2UudmFsdWUrXCIsXCIrKGUubW9kaWZpZXJzJiZlLm1vZGlmaWVycy5wcm9wP1widHJ1ZVwiOlwiZmFsc2VcIikrKGUubW9kaWZpZXJzJiZlLm1vZGlmaWVycy5zeW5jP1wiLHRydWVcIjpcIlwiKStcIilcIn19LGNsb2FrOnl9LGRhPWZ1bmN0aW9uKHQpe3RoaXMub3B0aW9ucz10LHRoaXMud2Fybj10Lndhcm58fHNlLHRoaXMudHJhbnNmb3Jtcz1jZSh0Lm1vZHVsZXMsXCJ0cmFuc2Zvcm1Db2RlXCIpLHRoaXMuZGF0YUdlbkZucz1jZSh0Lm1vZHVsZXMsXCJnZW5EYXRhXCIpLHRoaXMuZGlyZWN0aXZlcz1oKGgoe30scGEpLHQuZGlyZWN0aXZlcyk7dmFyIGU9dC5pc1Jlc2VydmVkVGFnfHxCbjt0aGlzLm1heWJlQ29tcG9uZW50PWZ1bmN0aW9uKHQpe3JldHVybiFlKHQudGFnKX0sdGhpcy5vbmNlSWQ9MCx0aGlzLnN0YXRpY1JlbmRlckZucz1bXX0sdmE9KG5ldyBSZWdFeHAoXCJcXFxcYlwiK1wiZG8saWYsZm9yLGxldCxuZXcsdHJ5LHZhcixjYXNlLGVsc2Usd2l0aCxhd2FpdCxicmVhayxjYXRjaCxjbGFzcyxjb25zdCxzdXBlcix0aHJvdyx3aGlsZSx5aWVsZCxkZWxldGUsZXhwb3J0LGltcG9ydCxyZXR1cm4sc3dpdGNoLGRlZmF1bHQsZXh0ZW5kcyxmaW5hbGx5LGNvbnRpbnVlLGRlYnVnZ2VyLGZ1bmN0aW9uLGFyZ3VtZW50c1wiLnNwbGl0KFwiLFwiKS5qb2luKFwiXFxcXGJ8XFxcXGJcIikrXCJcXFxcYlwiKSxuZXcgUmVnRXhwKFwiXFxcXGJcIitcImRlbGV0ZSx0eXBlb2Ysdm9pZFwiLnNwbGl0KFwiLFwiKS5qb2luKFwiXFxcXHMqXFxcXChbXlxcXFwpXSpcXFxcKXxcXFxcYlwiKStcIlxcXFxzKlxcXFwoW15cXFxcKV0qXFxcXClcIiksZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIG4obixyKXt2YXIgaT1PYmplY3QuY3JlYXRlKGUpLG89W10sYT1bXTtpZihpLndhcm49ZnVuY3Rpb24odCxlKXsoZT9hOm8pLnB1c2godCl9LHIpe3IubW9kdWxlcyYmKGkubW9kdWxlcz0oZS5tb2R1bGVzfHxbXSkuY29uY2F0KHIubW9kdWxlcykpLHIuZGlyZWN0aXZlcyYmKGkuZGlyZWN0aXZlcz1oKE9iamVjdC5jcmVhdGUoZS5kaXJlY3RpdmVzfHxudWxsKSxyLmRpcmVjdGl2ZXMpKTtmb3IodmFyIHMgaW4gcilcIm1vZHVsZXNcIiE9PXMmJlwiZGlyZWN0aXZlc1wiIT09cyYmKGlbc109cltzXSl9dmFyIGM9dChuLGkpO3JldHVybiBjLmVycm9ycz1vLGMudGlwcz1hLGN9cmV0dXJue2NvbXBpbGU6bixjb21waWxlVG9GdW5jdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGU9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gZnVuY3Rpb24obixyLGkpeyhyPWgoe30scikpLndhcm4sZGVsZXRlIHIud2Fybjt2YXIgbz1yLmRlbGltaXRlcnM/U3RyaW5nKHIuZGVsaW1pdGVycykrbjpuO2lmKGVbb10pcmV0dXJuIGVbb107dmFyIGE9dChuLHIpLHM9e30sYz1bXTtyZXR1cm4gcy5yZW5kZXI9VG4oYS5yZW5kZXIsYykscy5zdGF0aWNSZW5kZXJGbnM9YS5zdGF0aWNSZW5kZXJGbnMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBUbih0LGMpfSksZVtvXT1zfX0obil9fX0oZnVuY3Rpb24odCxlKXt2YXIgbj1zbih0LnRyaW0oKSxlKTshMSE9PWUub3B0aW1pemUmJmZ1bmN0aW9uKHQsZSl7dCYmKFBvPWFhKGUuc3RhdGljS2V5c3x8XCJcIiksRm89ZS5pc1Jlc2VydmVkVGFnfHxCbixwbih0KSxkbih0LCExKSl9KG4sZSk7dmFyIHI9eW4obixlKTtyZXR1cm57YXN0Om4scmVuZGVyOnIucmVuZGVyLHN0YXRpY1JlbmRlckZuczpyLnN0YXRpY1JlbmRlckZuc319KShvYSkuY29tcGlsZVRvRnVuY3Rpb25zKSxoYT0hIUduJiZFbighMSksbWE9ISFHbiYmRW4oITApLHlhPXAoZnVuY3Rpb24odCl7dmFyIGU9WnQodCk7cmV0dXJuIGUmJmUuaW5uZXJIVE1MfSksZ2E9UnQucHJvdG90eXBlLiRtb3VudDtyZXR1cm4gUnQucHJvdG90eXBlLiRtb3VudD1mdW5jdGlvbih0LGUpe2lmKCh0PXQmJlp0KHQpKT09PWRvY3VtZW50LmJvZHl8fHQ9PT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpcmV0dXJuIHRoaXM7dmFyIG49dGhpcy4kb3B0aW9ucztpZighbi5yZW5kZXIpe3ZhciByPW4udGVtcGxhdGU7aWYocilpZihcInN0cmluZ1wiPT10eXBlb2YgcilcIiNcIj09PXIuY2hhckF0KDApJiYocj15YShyKSk7ZWxzZXtpZighci5ub2RlVHlwZSlyZXR1cm4gdGhpcztyPXIuaW5uZXJIVE1MfWVsc2UgdCYmKHI9ZnVuY3Rpb24odCl7aWYodC5vdXRlckhUTUwpcmV0dXJuIHQub3V0ZXJIVE1MO3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJuIGUuYXBwZW5kQ2hpbGQodC5jbG9uZU5vZGUoITApKSxlLmlubmVySFRNTH0odCkpO2lmKHIpe3ZhciBpPXZhKHIse3Nob3VsZERlY29kZU5ld2xpbmVzOmhhLHNob3VsZERlY29kZU5ld2xpbmVzRm9ySHJlZjptYSxkZWxpbWl0ZXJzOm4uZGVsaW1pdGVycyxjb21tZW50czpuLmNvbW1lbnRzfSx0aGlzKSxvPWkucmVuZGVyLGE9aS5zdGF0aWNSZW5kZXJGbnM7bi5yZW5kZXI9byxuLnN0YXRpY1JlbmRlckZucz1hfX1yZXR1cm4gZ2EuY2FsbCh0aGlzLHQsZSl9LFJ0LmNvbXBpbGU9dmEsUnR9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy92dWUvZGlzdC92dWUubWluLmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInZhciBhcHBseSA9IEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseTtcblxuLy8gRE9NIEFQSXMsIGZvciBjb21wbGV0ZW5lc3NcblxuZXhwb3J0cy5zZXRUaW1lb3V0ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldFRpbWVvdXQsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJUaW1lb3V0KTtcbn07XG5leHBvcnRzLnNldEludGVydmFsID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgVGltZW91dChhcHBseS5jYWxsKHNldEludGVydmFsLCB3aW5kb3csIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwod2luZG93LCB0aGlzLl9pZCk7XG59O1xuXG4vLyBEb2VzIG5vdCBzdGFydCB0aGUgdGltZSwganVzdCBzZXRzIHVwIHRoZSBtZW1iZXJzIG5lZWRlZC5cbmV4cG9ydHMuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSwgbXNlY3MpIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IG1zZWNzO1xufTtcblxuZXhwb3J0cy51bmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuICBpdGVtLl9pZGxlVGltZW91dCA9IC0xO1xufTtcblxuZXhwb3J0cy5fdW5yZWZBY3RpdmUgPSBleHBvcnRzLmFjdGl2ZSA9IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgY2xlYXJUaW1lb3V0KGl0ZW0uX2lkbGVUaW1lb3V0SWQpO1xuXG4gIHZhciBtc2VjcyA9IGl0ZW0uX2lkbGVUaW1lb3V0O1xuICBpZiAobXNlY3MgPj0gMCkge1xuICAgIGl0ZW0uX2lkbGVUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uIG9uVGltZW91dCgpIHtcbiAgICAgIGlmIChpdGVtLl9vblRpbWVvdXQpXG4gICAgICAgIGl0ZW0uX29uVGltZW91dCgpO1xuICAgIH0sIG1zZWNzKTtcbiAgfVxufTtcblxuLy8gc2V0aW1tZWRpYXRlIGF0dGFjaGVzIGl0c2VsZiB0byB0aGUgZ2xvYmFsIG9iamVjdFxucmVxdWlyZShcInNldGltbWVkaWF0ZVwiKTtcbi8vIE9uIHNvbWUgZXhvdGljIGVudmlyb25tZW50cywgaXQncyBub3QgY2xlYXIgd2hpY2ggb2JqZWN0IGBzZXRpbW1laWRhdGVgIHdhc1xuLy8gYWJsZSB0byBpbnN0YWxsIG9udG8uICBTZWFyY2ggZWFjaCBwb3NzaWJpbGl0eSBpbiB0aGUgc2FtZSBvcmRlciBhcyB0aGVcbi8vIGBzZXRpbW1lZGlhdGVgIGxpYnJhcnkuXG5leHBvcnRzLnNldEltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLnNldEltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMgJiYgdGhpcy5zZXRJbW1lZGlhdGUpO1xuZXhwb3J0cy5jbGVhckltbWVkaWF0ZSA9ICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5jbGVhckltbWVkaWF0ZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLmNsZWFySW1tZWRpYXRlKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiKGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgcmVnaXN0ZXJJbW1lZGlhdGU7XG5cbiAgICBmdW5jdGlvbiBzZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbiAgICAgIC8vIENhbGxiYWNrIGNhbiBlaXRoZXIgYmUgYSBmdW5jdGlvbiBvciBhIHN0cmluZ1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbmV3IEZ1bmN0aW9uKFwiXCIgKyBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICAvLyBDb3B5IGZ1bmN0aW9uIGFyZ3VtZW50c1xuICAgICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMV07XG4gICAgICB9XG4gICAgICAvLyBTdG9yZSBhbmQgcmVnaXN0ZXIgdGhlIHRhc2tcbiAgICAgIHZhciB0YXNrID0geyBjYWxsYmFjazogY2FsbGJhY2ssIGFyZ3M6IGFyZ3MgfTtcbiAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSB0YXNrO1xuICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUobmV4dEhhbmRsZSk7XG4gICAgICByZXR1cm4gbmV4dEhhbmRsZSsrO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGhhbmRsZSkge1xuICAgICAgICBkZWxldGUgdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bih0YXNrKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IHRhc2suY2FsbGJhY2s7XG4gICAgICAgIHZhciBhcmdzID0gdGFzay5hcmdzO1xuICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgY2FsbGJhY2soYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJ1bklmUHJlc2VudChoYW5kbGUpIHtcbiAgICAgICAgLy8gRnJvbSB0aGUgc3BlYzogXCJXYWl0IHVudGlsIGFueSBpbnZvY2F0aW9ucyBvZiB0aGlzIGFsZ29yaXRobSBzdGFydGVkIGJlZm9yZSB0aGlzIG9uZSBoYXZlIGNvbXBsZXRlZC5cIlxuICAgICAgICAvLyBTbyBpZiB3ZSdyZSBjdXJyZW50bHkgcnVubmluZyBhIHRhc2ssIHdlJ2xsIG5lZWQgdG8gZGVsYXkgdGhpcyBpbnZvY2F0aW9uLlxuICAgICAgICBpZiAoY3VycmVudGx5UnVubmluZ0FUYXNrKSB7XG4gICAgICAgICAgICAvLyBEZWxheSBieSBkb2luZyBhIHNldFRpbWVvdXQuIHNldEltbWVkaWF0ZSB3YXMgdHJpZWQgaW5zdGVhZCwgYnV0IGluIEZpcmVmb3ggNyBpdCBnZW5lcmF0ZWQgYVxuICAgICAgICAgICAgLy8gXCJ0b28gbXVjaCByZWN1cnNpb25cIiBlcnJvci5cbiAgICAgICAgICAgIHNldFRpbWVvdXQocnVuSWZQcmVzZW50LCAwLCBoYW5kbGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHRhc2sgPSB0YXNrc0J5SGFuZGxlW2hhbmRsZV07XG4gICAgICAgICAgICBpZiAodGFzaykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IHRydWU7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcnVuKHRhc2spO1xuICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW1tZWRpYXRlKGhhbmRsZSk7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseVJ1bm5pbmdBVGFzayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7IHJ1bklmUHJlc2VudChoYW5kbGUpOyB9KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYW5Vc2VQb3N0TWVzc2FnZSgpIHtcbiAgICAgICAgLy8gVGhlIHRlc3QgYWdhaW5zdCBgaW1wb3J0U2NyaXB0c2AgcHJldmVudHMgdGhpcyBpbXBsZW1lbnRhdGlvbiBmcm9tIGJlaW5nIGluc3RhbGxlZCBpbnNpZGUgYSB3ZWIgd29ya2VyLFxuICAgICAgICAvLyB3aGVyZSBgZ2xvYmFsLnBvc3RNZXNzYWdlYCBtZWFucyBzb21ldGhpbmcgY29tcGxldGVseSBkaWZmZXJlbnQgYW5kIGNhbid0IGJlIHVzZWQgZm9yIHRoaXMgcHVycG9zZS5cbiAgICAgICAgaWYgKGdsb2JhbC5wb3N0TWVzc2FnZSAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICAgICAgICAgIHZhciBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzID0gdHJ1ZTtcbiAgICAgICAgICAgIHZhciBvbGRPbk1lc3NhZ2UgPSBnbG9iYWwub25tZXNzYWdlO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSBmYWxzZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoXCJcIiwgXCIqXCIpO1xuICAgICAgICAgICAgZ2xvYmFsLm9ubWVzc2FnZSA9IG9sZE9uTWVzc2FnZTtcbiAgICAgICAgICAgIHJldHVybiBwb3N0TWVzc2FnZUlzQXN5bmNocm9ub3VzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIC8vIEluc3RhbGxzIGFuIGV2ZW50IGhhbmRsZXIgb24gYGdsb2JhbGAgZm9yIHRoZSBgbWVzc2FnZWAgZXZlbnQ6IHNlZVxuICAgICAgICAvLyAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS93aW5kb3cucG9zdE1lc3NhZ2VcbiAgICAgICAgLy8gKiBodHRwOi8vd3d3LndoYXR3Zy5vcmcvc3BlY3Mvd2ViLWFwcHMvY3VycmVudC13b3JrL211bHRpcGFnZS9jb21tcy5odG1sI2Nyb3NzRG9jdW1lbnRNZXNzYWdlc1xuXG4gICAgICAgIHZhciBtZXNzYWdlUHJlZml4ID0gXCJzZXRJbW1lZGlhdGUkXCIgKyBNYXRoLnJhbmRvbSgpICsgXCIkXCI7XG4gICAgICAgIHZhciBvbkdsb2JhbE1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50LnNvdXJjZSA9PT0gZ2xvYmFsICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIGV2ZW50LmRhdGEgPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgICAgICAgICBldmVudC5kYXRhLmluZGV4T2YobWVzc2FnZVByZWZpeCkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoK2V2ZW50LmRhdGEuc2xpY2UobWVzc2FnZVByZWZpeC5sZW5ndGgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGdsb2JhbC5hdHRhY2hFdmVudChcIm9ubWVzc2FnZVwiLCBvbkdsb2JhbE1lc3NhZ2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShtZXNzYWdlUHJlZml4ICsgaGFuZGxlLCBcIipcIik7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBldmVudC5kYXRhO1xuICAgICAgICAgICAgcnVuSWZQcmVzZW50KGhhbmRsZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmVnaXN0ZXJJbW1lZGlhdGUgPSBmdW5jdGlvbihoYW5kbGUpIHtcbiAgICAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoaGFuZGxlKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbCA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHJlZ2lzdGVySW1tZWRpYXRlID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGUgYSA8c2NyaXB0PiBlbGVtZW50OyBpdHMgcmVhZHlzdGF0ZWNoYW5nZSBldmVudCB3aWxsIGJlIGZpcmVkIGFzeW5jaHJvbm91c2x5IG9uY2UgaXQgaXMgaW5zZXJ0ZWRcbiAgICAgICAgICAgIC8vIGludG8gdGhlIGRvY3VtZW50LiBEbyBzbywgdGh1cyBxdWV1aW5nIHVwIHRoZSB0YXNrLiBSZW1lbWJlciB0byBjbGVhbiB1cCBvbmNlIGl0J3MgYmVlbiBjYWxsZWQuXG4gICAgICAgICAgICB2YXIgc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudChoYW5kbGUpO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuICAgICAgICAgICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgICAgICAgICBzY3JpcHQgPSBudWxsO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCkge1xuICAgICAgICByZWdpc3RlckltbWVkaWF0ZSA9IGZ1bmN0aW9uKGhhbmRsZSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChydW5JZlByZXNlbnQsIDAsIGhhbmRsZSk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gSWYgc3VwcG9ydGVkLCB3ZSBzaG91bGQgYXR0YWNoIHRvIHRoZSBwcm90b3R5cGUgb2YgZ2xvYmFsLCBzaW5jZSB0aGF0IGlzIHdoZXJlIHNldFRpbWVvdXQgZXQgYWwuIGxpdmUuXG4gICAgdmFyIGF0dGFjaFRvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mICYmIE9iamVjdC5nZXRQcm90b3R5cGVPZihnbG9iYWwpO1xuICAgIGF0dGFjaFRvID0gYXR0YWNoVG8gJiYgYXR0YWNoVG8uc2V0VGltZW91dCA/IGF0dGFjaFRvIDogZ2xvYmFsO1xuXG4gICAgLy8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBlLmcuIGJyb3dzZXJpZnkgZW52aXJvbm1lbnRzLlxuICAgIGlmICh7fS50b1N0cmluZy5jYWxsKGdsb2JhbC5wcm9jZXNzKSA9PT0gXCJbb2JqZWN0IHByb2Nlc3NdXCIpIHtcbiAgICAgICAgLy8gRm9yIE5vZGUuanMgYmVmb3JlIDAuOVxuICAgICAgICBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChjYW5Vc2VQb3N0TWVzc2FnZSgpKSB7XG4gICAgICAgIC8vIEZvciBub24tSUUxMCBtb2Rlcm4gYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFBvc3RNZXNzYWdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZ2xvYmFsLk1lc3NhZ2VDaGFubmVsKSB7XG4gICAgICAgIC8vIEZvciB3ZWIgd29ya2Vycywgd2hlcmUgc3VwcG9ydGVkXG4gICAgICAgIGluc3RhbGxNZXNzYWdlQ2hhbm5lbEltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGRvYyAmJiBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiIGluIGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpKSB7XG4gICAgICAgIC8vIEZvciBJRSA24oCTOFxuICAgICAgICBpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGb3Igb2xkZXIgYnJvd3NlcnNcbiAgICAgICAgaW5zdGFsbFNldFRpbWVvdXRJbXBsZW1lbnRhdGlvbigpO1xuICAgIH1cblxuICAgIGF0dGFjaFRvLnNldEltbWVkaWF0ZSA9IHNldEltbWVkaWF0ZTtcbiAgICBhdHRhY2hUby5jbGVhckltbWVkaWF0ZSA9IGNsZWFySW1tZWRpYXRlO1xufSh0eXBlb2Ygc2VsZiA9PT0gXCJ1bmRlZmluZWRcIiA/IHR5cGVvZiBnbG9iYWwgPT09IFwidW5kZWZpbmVkXCIgPyB0aGlzIDogZ2xvYmFsIDogc2VsZikpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc2V0aW1tZWRpYXRlL3NldEltbWVkaWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInJlcXVpcmUoJy4vYXBwLmxlc3MnKTtcclxucmVxdWlyZSgnLi9tYXRlcmlhbC1pY29ucy5sZXNzJyk7XHJcblxyXG5jb25zdCB0ZW1wbGF0ZSA9IHJlcXVpcmUoJy4vYXBwLmh0bWwnKTtcclxuY29uc3QgbG9naW4gPSByZXF1aXJlKCcuL2NvbnRpbmVycy9sb2dpbi9sb2dpbicpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7ICAgIFxyXG4gICAgdGVtcGxhdGUsXHJcbiAgICBlbDogJyNhcHAnLFxyXG4gICAgY29tcG9uZW50czoge1xyXG4gICAgICAgICdsb2dpbi0nOiBsb2dpbixcclxuICAgIH0sXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvYXBwLmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMi0yIS4vYXBwLmxlc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge1wic2luZ2xldG9uXCI6dHJ1ZSxcImhtclwiOnRydWV9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL2FwcC5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL2FwcC5sZXNzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hcHAubGVzc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keXtmb250LWZhbWlseTpBcmlhbDtiYWNrZ3JvdW5kOiNmMWYxZjE7cGFkZGluZzowO21hcmdpbjowO2hlaWdodDoxMDAlO3dpZHRoOjEwMCV9XCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkQ6L0dJVC9wcm9qZWN0L3NyYy9EOi9HSVQvcHJvamVjdC9zcmMvYXBwLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsS0FDSSxrQkFDQSxtQkFDQSxVQUNBLFNBQ0EsWUFDQSxVQUFBLENBQUFcIixcImZpbGVcIjpcImFwcC5sZXNzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgICBmb250LWZhbWlseTogQXJpYWw7XFxuICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7XFxuICAgIHBhZGRpbmc6IDBweDtcXG4gICAgbWFyZ2luOiAwcHg7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP3tcInNvdXJjZU1hcFwiOnRydWUsXCJzb3VyY2VNYXBGaWxlSW5saW5lXCI6dHJ1ZX0hLi9zcmMvYXBwLmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9tYXRlcmlhbC1pY29ucy5sZXNzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9tYXRlcmlhbC1pY29ucy5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL21hdGVyaWFsLWljb25zLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21hdGVyaWFsLWljb25zLmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJAZm9udC1mYWNle2ZvbnQtZmFtaWx5Ok1hdGVyaWFsIEljb25zO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjQwMDtzcmM6bG9jYWwoXFxcIk1hdGVyaWFsIEljb25zXFxcIiksbG9jYWwoXFxcIk1hdGVyaWFsSWNvbnMtUmVndWxhclxcXCIpLHVybChodHRwczovL3Jhd2dpdC5jb20vZ29vZ2xlL21hdGVyaWFsLWRlc2lnbi1pY29ucy9tYXN0ZXIvaWNvbmZvbnQvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmYyKSBmb3JtYXQoXFxcIndvZmYyXFxcIiksdXJsKGh0dHBzOi8vcmF3Z2l0LmNvbS9nb29nbGUvbWF0ZXJpYWwtZGVzaWduLWljb25zL21hc3Rlci9pY29uZm9udC9NYXRlcmlhbEljb25zLVJlZ3VsYXIud29mZikgZm9ybWF0KFxcXCJ3b2ZmXFxcIiksdXJsKGh0dHBzOi8vcmF3Z2l0LmNvbS9nb29nbGUvbWF0ZXJpYWwtZGVzaWduLWljb25zL21hc3Rlci9pY29uZm9udC9NYXRlcmlhbEljb25zLVJlZ3VsYXIudHRmKSBmb3JtYXQoXFxcInRydWV0eXBlXFxcIil9Lm1hdGVyaWFsLWljb25ze2ZvbnQtZmFtaWx5Ok1hdGVyaWFsIEljb25zO2ZvbnQtd2VpZ2h0OjQwMDtmb250LXN0eWxlOm5vcm1hbDtmb250LXNpemU6MjRweDtkaXNwbGF5OmlubGluZS1ibG9jaztsaW5lLWhlaWdodDoxO3RleHQtdHJhbnNmb3JtOm5vbmU7bGV0dGVyLXNwYWNpbmc6bm9ybWFsO3dvcmQtd3JhcDpub3JtYWw7d2hpdGUtc3BhY2U6bm93cmFwO2RpcmVjdGlvbjpsdHI7LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZDt0ZXh0LXJlbmRlcmluZzpvcHRpbWl6ZUxlZ2liaWxpdHk7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlO2ZvbnQtZmVhdHVyZS1zZXR0aW5nczpcXFwibGlnYVxcXCJ9XCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkQ6L0dJVC9wcm9qZWN0L3NyYy9EOi9HSVQvcHJvamVjdC9zcmMvbWF0ZXJpYWwtaWNvbnMubGVzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFNQSxXQUNFLDJCQUNBLGtCQUNBLGdCQUNBLDRZQUlzRyxDQUd4RyxnQkFDRSwyQkFDQSxnQkFDQSxrQkFDQSxlQUNBLHFCQUNBLGNBQ0Esb0JBQ0Esc0JBQ0EsaUJBQ0EsbUJBQ0EsY0FHQSxtQ0FFQSxrQ0FHQSxrQ0FHQSw0QkFBdUIsQ0FBQVwiLFwiZmlsZVwiOlwibWF0ZXJpYWwtaWNvbnMubGVzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvLyBNYXRlcmlhbCBJY29ucyBCeSBHb29nbGVcXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT1cXG4vLyBDb3BpZWQgYXQgMi83LzIwMTdcXG4vLyBQbGVhc2UgdXBkYXRlIGZyb20gdGltZSB0byB0aW1lXFxuXFxuLyogZmFsbGJhY2sgKi9cXG5AZm9udC1mYWNlIHtcXG4gIGZvbnQtZmFtaWx5OiAnTWF0ZXJpYWwgSWNvbnMnO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIHNyYzogbG9jYWwoJ01hdGVyaWFsIEljb25zJyksXFxuICBsb2NhbCgnTWF0ZXJpYWxJY29ucy1SZWd1bGFyJyksXFxuICB1cmwoaHR0cHM6Ly9yYXdnaXQuY29tL2dvb2dsZS9tYXRlcmlhbC1kZXNpZ24taWNvbnMvbWFzdGVyL2ljb25mb250L01hdGVyaWFsSWNvbnMtUmVndWxhci53b2ZmMikgZm9ybWF0KCd3b2ZmMicpLFxcbiAgdXJsKGh0dHBzOi8vcmF3Z2l0LmNvbS9nb29nbGUvbWF0ZXJpYWwtZGVzaWduLWljb25zL21hc3Rlci9pY29uZm9udC9NYXRlcmlhbEljb25zLVJlZ3VsYXIud29mZikgZm9ybWF0KCd3b2ZmJyksXFxuICB1cmwoaHR0cHM6Ly9yYXdnaXQuY29tL2dvb2dsZS9tYXRlcmlhbC1kZXNpZ24taWNvbnMvbWFzdGVyL2ljb25mb250L01hdGVyaWFsSWNvbnMtUmVndWxhci50dGYpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcXG59XFxuXFxuLm1hdGVyaWFsLWljb25zIHtcXG4gIGZvbnQtZmFtaWx5OiAnTWF0ZXJpYWwgSWNvbnMnO1xcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtc2l6ZTogMjRweDsgIC8qIFByZWZlcnJlZCBpY29uIHNpemUgKi9cXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGxpbmUtaGVpZ2h0OiAxO1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxuICBsZXR0ZXItc3BhY2luZzogbm9ybWFsO1xcbiAgd29yZC13cmFwOiBub3JtYWw7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgZGlyZWN0aW9uOiBsdHI7XFxuXFxuICAvKiBTdXBwb3J0IGZvciBhbGwgV2ViS2l0IGJyb3dzZXJzLiAqL1xcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XFxuICAvKiBTdXBwb3J0IGZvciBTYWZhcmkgYW5kIENocm9tZS4gKi9cXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XFxuXFxuICAvKiBTdXBwb3J0IGZvciBGaXJlZm94LiAqL1xcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXG5cXG4gIC8qIFN1cHBvcnQgZm9yIElFLiAqL1xcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiAnbGlnYSc7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP3tcInNvdXJjZU1hcFwiOnRydWUsXCJzb3VyY2VNYXBGaWxlSW5saW5lXCI6dHJ1ZX0hLi9zcmMvbWF0ZXJpYWwtaWNvbnMubGVzc1xuLy8gbW9kdWxlIGlkID0gMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXY+IDxsb2dpbi0+PC9sb2dpbi0+IDwvZGl2PlwiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2FwcC5odG1sXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJyZXF1aXJlKCcuL2xvZ2luLmxlc3MnKTtcclxuXHJcbmNvbnN0IHRlbXBsYXRlID0gcmVxdWlyZSgnLi9sb2dpbi5odG1sJyk7XHJcbmNvbnN0IGlucHV0ID0gcmVxdWlyZSgnLi4vY29tcG9uZW50cy9pbnB1dC9pbnB1dCcpO1xyXG5jb25zdCBidXR0b24gPSByZXF1aXJlKCcuLi9jb21wb25lbnRzL2J1dHRvbi9idXR0b24nKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0geyAgICBcclxuICAgIHRlbXBsYXRlLFxyXG4gICAgZGF0YTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGlucHV0OiB7XHJcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogbnVsbCxcclxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBudWxsLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBpbnZhbGlkX2lucHV0c19saXN0OiBbXSxcclxuICAgICAgICAgICAgc3VibWl0X2J1dHRvbl9pc19jbGlja2VkOiBmYWxzZSxcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3VibWl0X2J1dHRvbl9pc19jbGlja2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmICghdGhpcy5pbnZhbGlkX2lucHV0c19saXN0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkb25lIGNsaWNrZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXBkYXRlSW5wdXREYXRhOiBmdW5jdGlvbiAodHlwZSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5pbnB1dFt0eXBlXSA9IHZhbHVlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXBkYXRlSW52YWxpZElucHV0c0xpc3Q6IGZ1bmN0aW9uKGlucHV0X2RhdGFfbmFtZSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKCghdGhpcy5pbnZhbGlkX2lucHV0c19saXN0LmluY2x1ZGVzKGlucHV0X2RhdGFfbmFtZSkpICYmICh2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW52YWxpZF9pbnB1dHNfbGlzdC5wdXNoKGlucHV0X2RhdGFfbmFtZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoKHRoaXMuaW52YWxpZF9pbnB1dHNfbGlzdC5pbmNsdWRlcyhpbnB1dF9kYXRhX25hbWUpKSAmJiAoIXZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pbnZhbGlkX2lucHV0c19saXN0LnNwbGljZSh0aGlzLmludmFsaWRfaW5wdXRzX2xpc3QuaW5kZXhPZihpbnB1dF9kYXRhX25hbWUpLCAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgY29tcG9uZW50czoge1xyXG4gICAgICAgICdpbnB1dC0nOiBpbnB1dCxcclxuICAgICAgICAnYnV0dG9uLSc6IGJ1dHRvbixcclxuICAgIH0sXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY29udGluZXJzL2xvZ2luL2xvZ2luLmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMi0yIS4vbG9naW4ubGVzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7XCJzaW5nbGV0b25cIjp0cnVlLFwiaG1yXCI6dHJ1ZX1cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMi0yIS4vbG9naW4ubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9sb2dpbi5sZXNzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jb250aW5lcnMvbG9naW4vbG9naW4ubGVzc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5sb2dpbntiYWNrZ3JvdW5kOiNmZmY7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDAwcHg7bWFyZ2luOjUwcHggYXV0byAwO3BhZGRpbmc6MzBweH1cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiRDovR0lUL3Byb2plY3Qvc3JjL2NvbnRpbmVycy9sb2dpbi9EOi9HSVQvcHJvamVjdC9zcmMvY29udGluZXJzL2xvZ2luL2xvZ2luLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsT0FDSSxnQkFDQSxXQUNBLGdCQUNBLG1CQUNBLFlBQUEsQ0FBQVwiLFwiZmlsZVwiOlwibG9naW4ubGVzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubG9naW4ge1xcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1heC13aWR0aDogNDAwcHg7XFxuICAgIG1hcmdpbjogNTBweCBhdXRvIDAgYXV0bztcXG4gICAgcGFkZGluZzogMzBweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/e1wic291cmNlTWFwXCI6dHJ1ZSxcInNvdXJjZU1hcEZpbGVJbmxpbmVcIjp0cnVlfSEuL3NyYy9jb250aW5lcnMvbG9naW4vbG9naW4ubGVzc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgY2xhc3M9bG9naW4+IDxpbnB1dC0gQHVwZGF0ZS1pbnB1dC1kYXRhPXVwZGF0ZUlucHV0RGF0YSBAdXBkYXRlLWludmFsaWQtaW5wdXRzLWxpc3Q9dXBkYXRlSW52YWxpZElucHV0c0xpc3QgOnN1Ym1pdC1idXR0b24taXMtY2xpY2tlZD1zdWJtaXRfYnV0dG9uX2lzX2NsaWNrZWQgOnJlZ2V4PS9eXFxcXHMqXFxcXFNcXFxcUy8gcmVnZXgtZXJyb3I9XFxcIlRoaXMgaXMgbm90IG5hbWUhXFxcIiBwbGFjZWhvbGRlcj1Vc2VybmFtZSBpbnB1dC1kYXRhLW5hbWU9dXNlcm5hbWUgaWNvbj1hY2NvdW50X2JveD4gPC9pbnB1dC0+IDxpbnB1dC0gQHVwZGF0ZS1pbnB1dC1kYXRhPXVwZGF0ZUlucHV0RGF0YSBAdXBkYXRlLWludmFsaWQtaW5wdXRzLWxpc3Q9dXBkYXRlSW52YWxpZElucHV0c0xpc3QgOnN1Ym1pdC1idXR0b24taXMtY2xpY2tlZD1zdWJtaXRfYnV0dG9uX2lzX2NsaWNrZWQgOnJlZ2V4PS9eXFxcXHMqXFxcXFNcXFxcUy8gcmVnZXgtZXJyb3I9XFxcIlRoaXMgaXMgbm90IG5hbWUhXFxcIiBwbGFjZWhvbGRlcj1QYXNzd29yZCBpbnB1dC1kYXRhLW5hbWU9cGFzc3dvcmQgaWNvbj1rZXlib2FyZF92b2ljZT4gPC9pbnB1dC0+IDxidXR0b24tIEBjbGljaz1jbGljayB0ZXh0PURPTkUgaWNvbj1rZXlib2FyZF92b2ljZSBzdHlsZT1tYXJnaW4tdG9wOjIwcHg+IDwvYnV0dG9uLT4gPC9kaXY+XCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY29udGluZXJzL2xvZ2luL2xvZ2luLmh0bWxcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsInJlcXVpcmUoJy4vaW5wdXQubGVzcycpO1xyXG5cclxuY29uc3QgdGVtcGxhdGUgPSByZXF1aXJlKCcuL2lucHV0Lmh0bWwnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgdGVtcGxhdGUsXHJcbiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdmFsdWU6ICcnLFxyXG4gICAgICAgICAgICBpbnB1dF9tc2c6IG51bGwsXHJcbiAgICAgICAgICAgIGRpcnR5OiBmYWxzZSxcclxuICAgICAgICAgICAgaXNfZm9jdXNlZDogZmFsc2UsXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHByb3BzOiBbJ3N1Ym1pdEJ1dHRvbklzQ2xpY2tlZCcsICdpbnB1dERhdGFOYW1lJywgJ3JlZ2V4JywgJ3JlZ2V4RXJyb3InLCAncGxhY2Vob2xkZXInLCAnaWNvbiddLFxyXG4gICAgY3JlYXRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuY2hlY2tJbnB1dCh0cnVlKTtcclxuICAgIH0sXHJcbiAgICB3YXRjaDoge1xyXG4gICAgICAgIHN1Ym1pdEJ1dHRvbklzQ2xpY2tlZDogZnVuY3Rpb24gKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXJ0eSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrSW5wdXQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgY29tcHV0ZWQ6IHtcclxuICAgICAgICBsYWJlbExvY2F0aW9uVXA6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCh0aGlzLmlzX2ZvY3VzZWQpIHx8ICh0aGlzLnZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvbkZvY3VzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNfZm9jdXNlZCA9IHRydWU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvbklucHV0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlSW5wdXREYXRhKCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmRpcnR5KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrSW5wdXQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb25CbHVyOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXNfZm9jdXNlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5jaGVja0lucHV0KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjaGVja0lucHV0OiBmdW5jdGlvbiAoc2lsZW50X2Vycm9yKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnJlZ2V4KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMudmFsdWUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghc2lsZW50X2Vycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRfbXNnID0gJ1JlcXVpcmVkIGZpZWxkISc7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlSW52YWxpZElucHV0c0xpc3QodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKHRoaXMucmVnZXgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghcmVnZXgudGVzdCh0aGlzLnZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNpbGVudF9lcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnB1dF9tc2cgPSB0aGlzLnJlZ2V4RXJyb3I7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVJbnZhbGlkSW5wdXRzTGlzdCh0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXRfbXNnID0gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVJbnZhbGlkSW5wdXRzTGlzdChmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB1cGRhdGVJbnB1dERhdGE6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlLWlucHV0LWRhdGEnLCB0aGlzLmlucHV0RGF0YU5hbWUsIHRoaXMudmFsdWUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXBkYXRlSW52YWxpZElucHV0c0xpc3Q6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZS1pbnZhbGlkLWlucHV0cy1saXN0JywgdGhpcy5pbnB1dERhdGFOYW1lLCB2YWx1ZSk7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQuanMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9pbnB1dC5sZXNzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9pbnB1dC5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL2lucHV0Lmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2NvbnRpbmVycy9jb21wb25lbnRzL2lucHV0L2lucHV0Lmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubWQtaW5wdXR7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzoyM3B4IDAgMTZweH0ubWQtaW5wdXQtd2l0aC1pY29ue3BhZGRpbmctbGVmdDozNXB4fS5tZC1pbnB1dCBpbnB1dHt3aWR0aDoxMDAlO2Rpc3BsYXk6YmxvY2s7Ym9yZGVyOjA7b3V0bGluZTowO2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMwMDA7YmFja2dyb3VuZDp0cmFuc3BhcmVudDtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjJ9Lm1kLWlucHV0IGxhYmVse2ZvbnQtc2l6ZToxNHB4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MjRweDt6LWluZGV4OjE7Zm9udC13ZWlnaHQ6NDAwO2N1cnNvcjp0ZXh0O3RyYW5zaXRpb246YWxsIC41c30ubWQtaW5wdXQgbGFiZWwud2l0aC1pY29ue3BhZGRpbmctbGVmdDozNXB4fS5tZC1pbnB1dCBsYWJlbC5mb2N1c3tmb250LXNpemU6MTJweDt0b3A6OXB4O2NvbG9yOmJsdWV9Lm1kLWlucHV0IHNwYW57Zm9udC1zaXplOjA7cG9zaXRpb246YWJzb2x1dGU7dGV4dC1hbGlnbjpyaWdodDtsZWZ0OjA7dG9wOjQ2cHg7Zm9udC13ZWlnaHQ6NDAwO3dpZHRoOjEwMCU7Y29sb3I6cmVkO3RyYW5zaXRpb246YWxsIC41c30ubWQtaW5wdXQgc3BhbjphZnRlcntjb250ZW50OlxcXCJcXFwiO3dpZHRoOjEwMCU7ZGlzcGxheTpibG9jaztoZWlnaHQ6MXB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDotM3B4O3JpZ2h0OjA7YmFja2dyb3VuZC1jb2xvcjojODg4O3RyYW5zaXRpb246YWxsIC4yc30ubWQtaW5wdXQgc3Bhbi53aXRoLWljb246YWZ0ZXJ7d2lkdGg6Y2FsYygxMDAlIC0gMzVweCl9Lm1kLWlucHV0IHNwYW4uZXJyb3J7Zm9udC1zaXplOjEycHh9Lm1kLWlucHV0IHNwYW4uZXJyb3I6YWZ0ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZWR9Lm1kLWlucHV0IHNwYW4uZm9jdXNlZDphZnRlcntoZWlnaHQ6M3B4fS5tZC1pbnB1dCBpe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxOHB4O2xlZnQ6MDtmb250LXNpemU6MjdweDt6LWluZGV4OjN9XCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIkQ6L0dJVC9wcm9qZWN0L3NyYy9jb250aW5lcnMvY29tcG9uZW50cy9pbnB1dC9EOi9HSVQvcHJvamVjdC9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQubGVzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxVQUNJLGtCQUNBLG1CQUFBLENBR0osb0JBQ0ksaUJBQUEsQ0FHSixnQkFDSSxXQUNBLGNBQ0EsU0FDQSxVQUNBLGVBQ0EsV0FDQSx1QkFDQSxrQkFDQSxTQUFBLENBR0osZ0JBQ0ksZUFDQSxrQkFDQSxPQUNBLFNBQ0EsVUFDQSxnQkFDQSxZQUNBLGtCQUFBLENBR0osMEJBQ0ksaUJBQUEsQ0FHSixzQkFDSSxlQUNBLFFBQ0EsVUFBQSxDQUdKLGVBQ0ksWUFDQSxrQkFDQSxpQkFDQSxPQUNBLFNBQ0EsZ0JBQ0EsV0FDQSxVQUNBLGtCQUFBLENBR0oscUJBQ0ksV0FDQSxXQUNBLGNBQ0EsV0FDQSxrQkFDQSxTQUNBLFFBQ0Esc0JBQ0Esa0JBQUEsQ0FHSiwrQkFDSSx1QkFBTyxDQUdYLHFCQUNJLGNBQUEsQ0FHSiwyQkFDSSxvQkFBQSxDQUdKLDZCQUNJLFVBQUEsQ0FHSixZQUNJLGtCQUNBLFNBQ0EsT0FDQSxlQUNBLFNBQUEsQ0FBQVwiLFwiZmlsZVwiOlwiaW5wdXQubGVzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubWQtaW5wdXQge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHBhZGRpbmc6IDIzcHggMCAxNnB4IDA7XFxufVxcblxcbi5tZC1pbnB1dC13aXRoLWljb24ge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7XFxufVxcblxcbi5tZC1pbnB1dCBpbnB1dCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgYm9yZGVyOiAwO1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIGNvbG9yOiAjMDAwO1xcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICB6LWluZGV4OiAyO1xcbn1cXG5cXG4ubWQtaW5wdXQgbGFiZWwge1xcbiAgICBmb250LXNpemU6IDE0cHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAyNHB4O1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBjdXJzb3I6IHRleHQ7XFxuICAgIHRyYW5zaXRpb246IGFsbCAuNXM7XFxufVxcblxcbi5tZC1pbnB1dCBsYWJlbC53aXRoLWljb24ge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDM1cHg7XFxufVxcblxcbi5tZC1pbnB1dCBsYWJlbC5mb2N1cyB7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG4gICAgdG9wOiA5cHg7XFxuICAgIGNvbG9yOmJsdWU7XFxufVxcblxcbi5tZC1pbnB1dCBzcGFuIHtcXG4gICAgZm9udC1zaXplOiAwO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDQ2cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjVzO1xcbn1cXG5cXG4ubWQtaW5wdXQgc3Bhbjo6YWZ0ZXIgeyBcXG4gICAgY29udGVudDogXFxcIlxcXCI7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgaGVpZ2h0OiAxcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAtM3B4O1xcbiAgICByaWdodDogMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODg4O1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzO1xcbn1cXG5cXG4ubWQtaW5wdXQgc3Bhbi53aXRoLWljb246OmFmdGVyIHtcXG4gICAgd2lkdGg6IGNhbGMoficxMDAlIC0gMzVweCcpO1xcbn1cXG5cXG4ubWQtaW5wdXQgc3Bhbi5lcnJvciB7XFxuICAgIGZvbnQtc2l6ZTogMTJweDtcXG59XFxuXFxuLm1kLWlucHV0IHNwYW4uZXJyb3I6OmFmdGVyIHsgXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjAwMDA7XFxufVxcblxcbi5tZC1pbnB1dCBzcGFuLmZvY3VzZWQ6OmFmdGVyIHsgXFxuICAgIGhlaWdodDogM3B4O1xcbn1cXG5cXG4ubWQtaW5wdXQgaSB7IFxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMThweDtcXG4gICAgbGVmdDogMHB4O1xcbiAgICBmb250LXNpemU6IDI3cHg7XFxuICAgIHotaW5kZXg6IDM7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP3tcInNvdXJjZU1hcFwiOnRydWUsXCJzb3VyY2VNYXBGaWxlSW5saW5lXCI6dHJ1ZX0hLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvaW5wdXQvaW5wdXQubGVzc1xuLy8gbW9kdWxlIGlkID0gMjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBcIjxkaXYgOmNsYXNzPVxcXCJbJ21kLWlucHV0JywgeyAnbWQtaW5wdXQtd2l0aC1pY29uJzogaWNvbiB9XVxcXCI+IDxpbnB1dCBAZm9jdXM9b25Gb2N1cyBAaW5wdXQ9b25JbnB1dCBAYmx1cj1vbkJsdXIgdi1tb2RlbD12YWx1ZSB0eXBlPXRleHQgLz4gPGxhYmVsIDpjbGFzcz1cXFwiW3sgZm9jdXM6IGxhYmVsTG9jYXRpb25VcCB9LCB7ICd3aXRoLWljb24nOiBpY29uIH1dXFxcIj57eyBwbGFjZWhvbGRlciB9fTwvbGFiZWw+IDxzcGFuIDpjbGFzcz1cXFwiW3sgZXJyb3I6IGlucHV0X21zZyB9LCB7IGZvY3VzZWQ6IGlzX2ZvY3VzZWQgfSwgeyAnd2l0aC1pY29uJzogaWNvbiB9XVxcXCI+e3sgaW5wdXRfbXNnIH19PC9zcGFuPiA8aSBjbGFzcz1tYXRlcmlhbC1pY29ucz57eyBpY29uIH19PC9pPiA8L2Rpdj5cIjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jb250aW5lcnMvY29tcG9uZW50cy9pbnB1dC9pbnB1dC5odG1sXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJyZXF1aXJlKCcuL2J1dHRvbi5sZXNzJyk7XHJcblxyXG5jb25zdCB0ZW1wbGF0ZSA9IHJlcXVpcmUoJy4vYnV0dG9uLmh0bWwnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgdGVtcGxhdGUsXHJcbiAgICBwcm9wczogWyd0ZXh0JywgJ2ljb24nXSxcclxuICAgIG1ldGhvZHM6IHtcclxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NsaWNrJyk7XHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTItMiEuL2J1dHRvbi5sZXNzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHtcInNpbmdsZXRvblwiOnRydWUsXCJobXJcIjp0cnVlfVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9idXR0b24ubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0yLTIhLi9idXR0b24ubGVzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5sZXNzXG4vLyBtb2R1bGUgaWQgPSAyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1dHRvbntiYWNrZ3JvdW5kOiMwMDZlZmY7dGV4dC1hbGlnbjpjZW50ZXI7cGFkZGluZzoxNXB4O2N1cnNvcjpwb2ludGVyfS5idXR0b24gaSwuYnV0dG9uIHNwYW57Y29sb3I6I2ZmZn0uYnV0dG9uIGl7dmVydGljYWwtYWxpZ246c3VifVwiLCBcIlwiLCB7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJEOi9HSVQvcHJvamVjdC9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL0Q6L0dJVC9wcm9qZWN0L3NyYy9jb250aW5lcnMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsUUFDSSxtQkFDQSxrQkFDQSxhQUNBLGNBQUEsQ0FHSixBQUlBLHVCQUhJLFVBQUEsQ0FLQSxBQUZKLFVBRUksa0JBQUEsQ0FBQVwiLFwiZmlsZVwiOlwiYnV0dG9uLmxlc3NcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQ6IHJnYigwLCAxMTAsIDI1NSk7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMTVweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uYnV0dG9uIHNwYW4ge1xcbiAgICBjb2xvcjpyZ2IoMjU1LCAyNTUsIDI1NSk7XFxufVxcblxcbi5idXR0b24gaSB7XFxuICAgIGNvbG9yOnJnYigyNTUsIDI1NSwgMjU1KTtcXG4gICAgdmVydGljYWwtYWxpZ246IHN1YjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/e1wic291cmNlTWFwXCI6dHJ1ZSxcInNvdXJjZU1hcEZpbGVJbmxpbmVcIjp0cnVlfSEuL3NyYy9jb250aW5lcnMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gXCI8ZGl2IEBjbGljaz1vbkNsaWNrIGNsYXNzPWJ1dHRvbj4gPGkgY2xhc3M9bWF0ZXJpYWwtaWNvbnM+e3sgaWNvbiB9fTwvaT4gPHNwYW4+e3sgdGV4dCB9fTwvc3Bhbj4gPC9kaXY+XCI7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY29udGluZXJzL2NvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5odG1sXG4vLyBtb2R1bGUgaWQgPSAzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9